

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 13 14:06:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4520 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93 ;; Function _redLedSet is unused but had its address taken
    94  0000                     
    95 ;; Function _yellowLedSet is unused but had its address taken
    96  0000                     
    97 ;; Function _blueLedSet is unused but had its address taken
    98  0000                     
    99 ;; Function _xEngineMotionSet is unused but had its address taken
   100  0000                     
   101 ;; Function _xEngineDirSet is unused but had its address taken
   102  0000                     
   103 ;; Function _USARTReadByte is unused but had its address taken
   104  0000                     
   105 ;; Function _USARTWriteByte is unused but had its address taken
   106  0000                     
   107 ;; Function _USARTWriteInt is unused but had its address taken
   108  0000                     
   109 ;; Function _USARTWriteLong is unused but had its address taken
   110  0000                     
   111 ;; Function _USARTWriteFloat is unused but had its address taken
   112  0000                     
   113 ;; Function _button1Read is unused but had its address taken
   114  0000                     
   115 ;; Function i2_redLedSet is unused but had its address taken
   116  0000                     
   117 ;; Function i2_yellowLedSet is unused but had its address taken
   118  0000                     
   119 ;; Function i2_blueLedSet is unused but had its address taken
   120  0000                     
   121 ;; Function i2_xEngineMotionSet is unused but had its address taken
   122  0000                     
   123 ;; Function i2_xEngineDirSet is unused but had its address taken
   124  0000                     
   125                           	psect	smallconst
   126  000600                     __psmallconst:
   127                           	opt callstack 0
   128  000600  00                 	db	0
   129  000601  0000               	dw	0
   130  000603  0000               	dw	0
   131  000605  CFDC               	dw	53212
   132  000607  35D1               	dw	13777
   133  000609                     __end_of_dp_l:
   134                           	opt callstack 0
   135  000609  0000               	dw	0
   136  00060B  0000               	dw	0
   137  00060D  C000               	dw	49152
   138  00060F  3F15               	dw	16149
   139  000611                     __end_of_dp_h:
   140                           	opt callstack 0
   141  000611  4260               	dw	16992
   142  000613  0DA2               	dw	3490
   143  000615                     __end_ofsqrtf@tiny:
   144                           	opt callstack 0
   145  000615  A570               	dw	42352
   146  000617  36EC               	dw	14060
   147  000619                     __end_of_ivln2_l:
   148                           	opt callstack 0
   149  000619  AA3B               	dw	43579
   150  00061B  3FB8               	dw	16312
   151  00061D                     __end_of_ivln2:
   152                           	opt callstack 0
   153  00061D  384F               	dw	14415
   154  00061F  3F76               	dw	16246
   155  000621                     __end_of_cp:
   156                           	opt callstack 0
   157  000621  AA3C               	dw	43580
   158  000623  3338               	dw	13112
   159  000625                     __end_of_ovt:
   160                           	opt callstack 0
   161  000625  BE8C               	dw	48780
   162  000627  35BF               	dw	13759
   163  000629                     __end_of_lg2_l:
   164                           	opt callstack 0
   165  000629  7200               	dw	29184
   166  00062B  3F31               	dw	16177
   167  00062D                     __end_of_lg2_h:
   168                           	opt callstack 0
   169  00062D  7218               	dw	29208
   170  00062F  3F31               	dw	16177
   171  000631                     __end_of_lg2:
   172                           	opt callstack 0
   173  000631  BB4C               	dw	47948
   174  000633  3331               	dw	13105
   175  000635                     __end_of_P5:
   176                           	opt callstack 0
   177  000635  EA0E               	dw	59918
   178  000637  B5DD               	dw	46557
   179  000639                     __end_of_P4:
   180                           	opt callstack 0
   181  000639  B355               	dw	45909
   182  00063B  388A               	dw	14474
   183  00063D                     __end_of_P3:
   184                           	opt callstack 0
   185  00063D  0B61               	dw	2913
   186  00063F  BB36               	dw	47926
   187  000641                     __end_of_P2:
   188                           	opt callstack 0
   189  000641  AAAB               	dw	43691
   190  000643  3E2A               	dw	15914
   191  000645                     __end_of_P1:
   192                           	opt callstack 0
   193  000645  F142               	dw	61762
   194  000647  3E53               	dw	15955
   195  000649                     __end_of_L6:
   196                           	opt callstack 0
   197  000649  3255               	dw	12885
   198  00064B  3E6C               	dw	15980
   199  00064D                     __end_of_L5:
   200                           	opt callstack 0
   201  00064D  A305               	dw	41733
   202  00064F  3E8B               	dw	16011
   203  000651                     __end_of_L4:
   204                           	opt callstack 0
   205  000651  AAAB               	dw	43691
   206  000653  3EAA               	dw	16042
   207  000655                     __end_of_L3:
   208                           	opt callstack 0
   209  000655  6DB7               	dw	28087
   210  000657  3EDB               	dw	16091
   211  000659                     __end_of_L2:
   212                           	opt callstack 0
   213  000659  999A               	dw	39322
   214  00065B  3F19               	dw	16153
   215  00065D                     __end_of_L1:
   216                           	opt callstack 0
   217  00065D  4260               	dw	16992
   218  00065F  0DA2               	dw	3490
   219  000661                     __end_of_tiny:
   220                           	opt callstack 0
   221  000661  F2CA               	dw	62154
   222  000663  7149               	dw	29001
   223  000665                     __end_of_huge:
   224                           	opt callstack 0
   225  000665  0000               	dw	0
   226  000667  4B80               	dw	19328
   227  000669                     __end_of_two24:
   228                           	opt callstack 0
   229  000669  0000               	dw	0
   230  00066B  3F80               	dw	16256
   231  00066D  0000               	dw	0
   232  00066F  3FC0               	dw	16320
   233  000671                     __end_of_bp:
   234                           	opt callstack 0
   235  000671  AA00               	dw	43520
   236  000673  3FB8               	dw	16312
   237  000675                     __end_of_ivln2_h:
   238                           	opt callstack 0
   239  000675  23C6               	dw	9158
   240  000677  B8F6               	dw	47350
   241  000679                     __end_of_cp_l:
   242                           	opt callstack 0
   243  000679  4000               	dw	16384
   244  00067B  3F76               	dw	16246
   245  00067D                     __end_of_cp_h:
   246                           	opt callstack 0
   247  0000                     _SPBRG	set	4015
   248  0000                     _OSCCON	set	4051
   249  0000                     _TXREG	set	4013
   250  0000                     _RCREG	set	4014
   251  0000                     _PIR1bits	set	3998
   252  0000                     _PORTDbits	set	3971
   253  0000                     _LATBbits	set	3978
   254  0000                     _LATE	set	3981
   255  0000                     _LATD	set	3980
   256  0000                     _LATC	set	3979
   257  0000                     _LATB	set	3978
   258  0000                     _LATA	set	3977
   259  0000                     _LATCbits	set	3979
   260  0000                     _LATDbits	set	3980
   261  0000                     _TRISD2	set	31914
   262  0000                     _CREN	set	32092
   263  0000                     _TXEN	set	32101
   264  0000                     _TRISC7	set	31911
   265  0000                     _TRISC6	set	31910
   266  0000                     _SPEN	set	32095
   267  0000                     _SYNC	set	32100
   268  0000                     _BRGH	set	32098
   269  0000                     _RCIE	set	31981
   270  0000                     _PEIE	set	32662
   271  0000                     _GIE	set	32663
   272  0000                     _TXIF	set	31988
   273  0000                     _RCIF	set	31989
   274  0000                     _CARRY	set	32448
   275  0000                     _TRISD6	set	31918
   276  0000                     _TRISD5	set	31917
   277  0000                     _TRISB2	set	31898
   278  0000                     _TRISB1	set	31897
   279  0000                     _TRISB0	set	31896
   280  0000                     _TRISC2	set	31906
   281  0000                     _TRISC1	set	31905
   282  0000                     _TRISC0	set	31904
   283  0000                     _TRISC3	set	31907
   284  0000                     _TRISD0	set	31912
   285  0000                     _TRISD1	set	31913
   286  00067D  50                 	db	80	;'P'
   287  00067E  6F                 	db	111	;'o'
   288  00067F  69                 	db	105	;'i'
   289  000680  6E                 	db	110	;'n'
   290  000681  74                 	db	116	;'t'
   291  000682  3A                 	db	58	;':'
   292  000683  7B                 	db	123
   293  000684  78                 	db	120	;'x'
   294  000685  3A                 	db	58	;':'
   295  000686  25                 	db	37
   296  000687  2E                 	db	46
   297  000688  33                 	db	51	;'3'
   298  000689  66                 	db	102	;'f'
   299  00068A  2C                 	db	44
   300  00068B  79                 	db	121	;'y'
   301  00068C  3A                 	db	58	;':'
   302  00068D  25                 	db	37
   303  00068E  2E                 	db	46
   304  00068F  33                 	db	51	;'3'
   305  000690  66                 	db	102	;'f'
   306  000691  2C                 	db	44
   307  000692  7A                 	db	122	;'z'
   308  000693  3A                 	db	58	;':'
   309  000694  25                 	db	37
   310  000695  2E                 	db	46
   311  000696  33                 	db	51	;'3'
   312  000697  66                 	db	102	;'f'
   313  000698  7D                 	db	125
   314  000699  00                 	db	0
   315  00069A                     STR_2:
   316  00069A  62                 	db	98	;'b'
   317  00069B  61                 	db	97	;'a'
   318  00069C  73                 	db	115	;'s'
   319  00069D  C4                 	db	-60
   320  00069E  B1                 	db	-79
   321  00069F  6C                 	db	108	;'l'
   322  0006A0  6D                 	db	109	;'m'
   323  0006A1  61                 	db	97	;'a'
   324  0006A2  64                 	db	100	;'d'
   325  0006A3  C4                 	db	-60
   326  0006A4  B1                 	db	-79
   327  0006A5  00                 	db	0
   328  0006A6                     STR_1:
   329  0006A6  62                 	db	98	;'b'
   330  0006A7  61                 	db	97	;'a'
   331  0006A8  73                 	db	115	;'s'
   332  0006A9  C4                 	db	-60
   333  0006AA  B1                 	db	-79
   334  0006AB  6C                 	db	108	;'l'
   335  0006AC  64                 	db	100	;'d'
   336  0006AD  C4                 	db	-60
   337  0006AE  B1                 	db	-79
   338  0006AF  00                 	db	0
   339  0006B0                     STR_3:
   340  0006B0  0D                 	db	13
   341  0006B1  0A                 	db	10
   342  0006B2  00                 	db	0
   343  0000                     
   344                           ; #config settings
   345  0006B3  00                 	db	0	; dummy byte at the end
   346  0000                     
   347                           	psect	cinit
   348  000F1A                     __pcinit:
   349                           	opt callstack 0
   350  000F1A                     start_initialization:
   351                           	opt callstack 0
   352  000F1A                     __initialization:
   353                           	opt callstack 0
   354                           
   355                           ; Clear objects allocated to BANK0 (61 bytes)
   356  000F1A  EE00  F080         	lfsr	0,__pbssBANK0
   357  000F1E  0E3D               	movlw	61
   358  000F20                     clear_0:
   359  000F20  6AEE               	clrf	postinc0,c
   360  000F22  06E8               	decf	wreg,f,c
   361  000F24  E1FD               	bnz	clear_0
   362                           
   363                           ; Clear objects allocated to COMRAM (44 bytes)
   364  000F26  EE00  F030         	lfsr	0,__pbssCOMRAM
   365  000F2A  0E2C               	movlw	44
   366  000F2C                     clear_1:
   367  000F2C  6AEE               	clrf	postinc0,c
   368  000F2E  06E8               	decf	wreg,f,c
   369  000F30  E1FD               	bnz	clear_1
   370  000F32                     end_of_initialization:
   371                           	opt callstack 0
   372  000F32                     __end_of__initialization:
   373                           	opt callstack 0
   374  000F32  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   375  000F34  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376  000F36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   377  000F38  6EF8               	movwf	tblptru,c
   378  000F3A  0100               	movlb	0
   379  000F3C  EFB3  F007         	goto	_main	;jump to C main() function
   380                           
   381                           	psect	bssCOMRAM
   382  000030                     __pbssCOMRAM:
   383                           	opt callstack 0
   384  000030                     _errno:
   385                           	opt callstack 0
   386  000030                     	ds	2
   387  000032                     _blueLed:
   388                           	opt callstack 0
   389  000032                     	ds	4
   390  000036                     _yellowLed:
   391                           	opt callstack 0
   392  000036                     	ds	4
   393  00003A                     _yellowLedOutput:
   394                           	opt callstack 0
   395  00003A                     	ds	4
   396  00003E                     _redLedOutput:
   397                           	opt callstack 0
   398  00003E                     	ds	4
   399  000042                     _zEngineDirOutput:
   400                           	opt callstack 0
   401  000042                     	ds	4
   402  000046                     _yEngineDirOutput:
   403                           	opt callstack 0
   404  000046                     	ds	4
   405  00004A                     _xEngineDirOutput:
   406                           	opt callstack 0
   407  00004A                     	ds	4
   408  00004E                     _zEngineMotionOutput:
   409                           	opt callstack 0
   410  00004E                     	ds	4
   411  000052                     _yEngineMotionOutput:
   412                           	opt callstack 0
   413  000052                     	ds	4
   414  000056                     _xEngineMotionOutput:
   415                           	opt callstack 0
   416  000056                     	ds	4
   417  00005A                     _button1Input:
   418                           	opt callstack 0
   419  00005A                     	ds	2
   420                           
   421                           	psect	bssBANK0
   422  000080                     __pbssBANK0:
   423                           	opt callstack 0
   424  000080                     ISR@F3567:
   425                           	opt callstack 0
   426  000080                     	ds	20
   427  000094                     	ds	5
   428  000099                     fabsf@F463:
   429                           	opt callstack 0
   430  000099                     	ds	4
   431  00009D                     _button:
   432                           	opt callstack 0
   433  00009D                     	ds	4
   434  0000A1                     _usart:
   435                           	opt callstack 0
   436  0000A1                     	ds	20
   437  0000B5                     _redLed:
   438                           	opt callstack 0
   439  0000B5                     	ds	4
   440  0000B9                     _blueLedOutput:
   441                           	opt callstack 0
   442  0000B9                     	ds	4
   443                           
   444                           	psect	cstackBANK0
   445  0000BD                     __pcstackBANK0:
   446                           	opt callstack 0
   447  0000BD                     ?_DigitalInput_getValue:
   448                           	opt callstack 0
   449  0000BD                     ?_DigitalInput_init:
   450                           	opt callstack 0
   451  0000BD                     ?_DigitalOutput_init:
   452                           	opt callstack 0
   453  0000BD                     ?_Led_init:
   454                           	opt callstack 0
   455  0000BD                     ?_Button_init:
   456                           	opt callstack 0
   457  0000BD                     ?___aldiv:
   458                           	opt callstack 0
   459  0000BD                     Button_init@input:
   460                           	opt callstack 0
   461  0000BD                     Led_init@output:
   462                           	opt callstack 0
   463  0000BD                     USARTWriteString@str:
   464                           	opt callstack 0
   465  0000BD                     setupFunctions@usart:
   466                           	opt callstack 0
   467  0000BD                     DigitalInput_init@init:
   468                           	opt callstack 0
   469  0000BD                     DigitalInput_getValue@input:
   470                           	opt callstack 0
   471  0000BD                     DigitalOutput_init@init:
   472                           	opt callstack 0
   473  0000BD                     DigitalOutput_open@output:
   474                           	opt callstack 0
   475  0000BD                     DigitalOutput_close@output:
   476                           	opt callstack 0
   477  0000BD                     ___aldiv@dividend:
   478                           	opt callstack 0
   479                           
   480                           ; 4 bytes @ 0x0
   481  0000BD                     	ds	2
   482  0000BF                     Button_init@onPressed:
   483                           	opt callstack 0
   484  0000BF                     Led_open@led:
   485                           	opt callstack 0
   486  0000BF                     Led_close@led:
   487                           	opt callstack 0
   488  0000BF                     USARTWriteLine@ln:
   489                           	opt callstack 0
   490  0000BF                     DigitalInput_init@read:
   491                           	opt callstack 0
   492  0000BF                     DigitalOutput_init@set:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496  0000BF                     	ds	2
   497  0000C1                     Application_loop@app:
   498                           	opt callstack 0
   499  0000C1                     Button_init@buton:
   500                           	opt callstack 0
   501  0000C1                     Led_init@led:
   502                           	opt callstack 0
   503  0000C1                     DigitalOutput_init@output:
   504                           	opt callstack 0
   505  0000C1                     ___aldiv@divisor:
   506                           	opt callstack 0
   507                           
   508                           ; 4 bytes @ 0x4
   509  0000C1                     	ds	2
   510  0000C3                     DigitalInput_init@buton:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x6
   514  0000C3                     	ds	2
   515  0000C5                     ___aldiv@counter:
   516                           	opt callstack 0
   517                           
   518                           ; 1 bytes @ 0x8
   519  0000C5                     	ds	1
   520  0000C6                     ___aldiv@sign:
   521                           	opt callstack 0
   522                           
   523                           ; 1 bytes @ 0x9
   524  0000C6                     	ds	1
   525  0000C7                     ___aldiv@quotient:
   526                           	opt callstack 0
   527                           
   528                           ; 4 bytes @ 0xA
   529  0000C7                     	ds	4
   530  0000CB                     ?_calculateSpbrg:
   531                           	opt callstack 0
   532  0000CB                     calculateSpbrg@baudRate:
   533                           	opt callstack 0
   534                           
   535                           ; 4 bytes @ 0xE
   536  0000CB                     	ds	4
   537  0000CF                     ??_calculateSpbrg:
   538                           
   539                           ; 1 bytes @ 0x12
   540  0000CF                     	ds	4
   541  0000D3                     calculateSpbrg@bolum:
   542                           	opt callstack 0
   543                           
   544                           ; 4 bytes @ 0x16
   545  0000D3                     	ds	4
   546  0000D7                     USARTInit@usart:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x1A
   550  0000D7                     	ds	2
   551  0000D9                     USARTInit@baudRate:
   552                           	opt callstack 0
   553                           
   554                           ; 4 bytes @ 0x1C
   555  0000D9                     	ds	4
   556  0000DD                     ?_Application_init:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x20
   560  0000DD                     	ds	2
   561  0000DF                     Application_init@app:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x22
   565  0000DF                     	ds	2
   566  0000E1                     main@app:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x24
   570  0000E1                     	ds	2
   571                           
   572                           	psect	cstackCOMRAM
   573  000001                     __pcstackCOMRAM:
   574                           	opt callstack 0
   575  000001                     ?_USARTDataReady:
   576                           	opt callstack 0
   577  000001                     softusart_yaz@veri:
   578                           	opt callstack 0
   579  000001                     i2USARTWriteString@str:
   580                           	opt callstack 0
   581  000001                     i2DigitalOutput_open@output:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x0
   585  000001                     	ds	1
   586  000002                     softusart_yaz@i:
   587                           	opt callstack 0
   588                           
   589                           ; 1 bytes @ 0x1
   590  000002                     	ds	1
   591  000003                     ??_USARTDataReady:
   592  000003                     softUSARTWriteString@str:
   593                           	opt callstack 0
   594  000003                     i2Led_open@led:
   595                           	opt callstack 0
   596  000003                     i2USARTWriteLine@ln:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x2
   600  000003                     	ds	1
   601  000004                     USARTReadString@buf:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x3
   605  000004                     	ds	1
   606  000005                     
   607                           ; 1 bytes @ 0x4
   608  000005                     	ds	1
   609  000006                     USARTReadString@max_length:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x5
   613  000006                     	ds	2
   614  000008                     ??_USARTReadString:
   615                           
   616                           ; 1 bytes @ 0x7
   617  000008                     	ds	5
   618  00000D                     USARTReadString@i:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0xC
   622  00000D                     	ds	2
   623  00000F                     USARTReadString@tmp:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0xE
   627  00000F                     	ds	1
   628  000010                     ??_ISR:
   629                           
   630                           ; 1 bytes @ 0xF
   631  000010                     	ds	12
   632  00001C                     ISR@tmp:
   633                           	opt callstack 0
   634                           
   635                           ; 20 bytes @ 0x1B
   636  00001C                     	ds	20
   637                           
   638 ;;
   639 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   640 ;;
   641 ;; *************** function _main *****************
   642 ;; Defined at:
   643 ;;		line 17 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  app             2   36[BANK0 ] struct .
   648 ;; Return value:  Size  Location     Type
   649 ;;                  2  534[None  ] int 
   650 ;; Registers used:
   651 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   657 ;;      Params:         0       0       0       0       0       0       0
   658 ;;      Locals:         0       2       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0
   660 ;;      Totals:         0       2       0       0       0       0       0
   661 ;;Total ram usage:        2 bytes
   662 ;; Hardware stack levels required when called:    8
   663 ;; This function calls:
   664 ;;		_Application_init
   665 ;;		_Application_loop
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text0
   672  000F66                     __ptext0:
   673                           	opt callstack 0
   674  000F66                     _main:
   675                           	opt callstack 23
   676  000F66                     
   677                           ;main.c: 19:     Application app = Application_init();
   678  000F66  EC5D  F004         	call	_Application_init	;wreg free
   679  000F6A  C0DD  F0E1         	movff	?_Application_init,main@app
   680  000F6E  C0DE  F0E2         	movff	?_Application_init+1,main@app+1
   681  000F72                     l3091:
   682                           
   683                           ;main.c: 24:         Application_loop(&app);
   684  000F72  0EE1               	movlw	low main@app
   685  000F74  0100               	movlb	0	; () banked
   686  000F76  6FC1               	movwf	Application_loop@app& (0+255),b
   687  000F78  0E00               	movlw	high main@app
   688  000F7A  6FC2               	movwf	(Application_loop@app+1)& (0+255),b
   689  000F7C  EC84  F005         	call	_Application_loop	;wreg free
   690  000F80  EFB9  F007         	goto	l3091
   691  000F84  EF07  F000         	goto	start
   692  000F88                     __end_of_main:
   693                           	opt callstack 0
   694                           
   695 ;; *************** function _Application_loop *****************
   696 ;; Defined at:
   697 ;;		line 102 in file "application/Application.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  app             2    4[BANK0 ] PTR struct .
   700 ;;		 -> main@app(2), 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   712 ;;      Params:         0       2       0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0
   715 ;;      Totals:         0       2       0       0       0       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    6
   719 ;; This function calls:
   720 ;;		_DigitalInput_getValue
   721 ;;		_Led_close
   722 ;;		_Led_open
   723 ;;		_USARTWriteLine
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text1
   730  000B08                     __ptext1:
   731                           	opt callstack 0
   732  000B08                     _Application_loop:
   733                           	opt callstack 24
   734  000B08                     
   735                           ;application/Application.c: 112:     Led_open(&redLed);
   736  000B08  0EB5               	movlw	low _redLed
   737  000B0A  0100               	movlb	0	; () banked
   738  000B0C  6FBF               	movwf	Led_open@led& (0+255),b
   739  000B0E  0E00               	movlw	high _redLed
   740  000B10  6FC0               	movwf	(Led_open@led+1)& (0+255),b
   741  000B12  EC4C  F007         	call	_Led_open	;wreg free
   742  000B16                     
   743                           ;application/Application.c: 115:     if (DigitalInput_getValue(&button1Input)) {
   744  000B16  0E5A               	movlw	low _button1Input
   745  000B18  0100               	movlb	0	; () banked
   746  000B1A  6FBD               	movwf	DigitalInput_getValue@input& (0+255),b
   747  000B1C  0E00               	movlw	high _button1Input
   748  000B1E  6FBE               	movwf	(DigitalInput_getValue@input+1)& (0+255),b
   749  000B20  EC3D  F008         	call	_DigitalInput_getValue	;wreg free
   750  000B24  0100               	movlb	0	; () banked
   751  000B26  51BD               	movf	?_DigitalInput_getValue& (0+255),w,b
   752  000B28  11BE               	iorwf	(?_DigitalInput_getValue+1)& (0+255),w,b
   753  000B2A  B4D8               	btfsc	status,2,c
   754  000B2C  EF9A  F005         	goto	u1951
   755  000B30  EF9C  F005         	goto	u1950
   756  000B34                     u1951:
   757  000B34  EFBF  F005         	goto	l2947
   758  000B38                     u1950:
   759  000B38                     
   760                           ; BSR set to: 0
   761                           ;application/Application.c: 117:         usart.writeLine("basÄ±ldÄ±");
   762  000B38  0EA6               	movlw	low STR_1
   763  000B3A  6FBF               	movwf	USARTWriteLine@ln& (0+255),b
   764  000B3C  0E06               	movlw	high STR_1
   765  000B3E  6FC0               	movwf	(USARTWriteLine@ln+1)& (0+255),b
   766  000B40  EE20  F0AB         	lfsr	2,_usart+10
   767  000B44  D802               	call	u1968
   768  000B46  EFAF  F005         	goto	u1969
   769  000B4A                     u1968:
   770  000B4A  0005               	push	
   771  000B4C  6EFA               	movwf	pclath,c
   772  000B4E  50DE               	movf	postinc2,w,c
   773  000B50  6EFD               	movwf	tosl,c
   774  000B52  50DE               	movf	postinc2,w,c
   775  000B54  6EFE               	movwf	tosh,c
   776  000B56  50F8               	movf	tblptru,w,c
   777  000B58  6EFF               	movwf	tosu,c
   778  000B5A  50FA               	movf	pclath,w,c
   779  000B5C  0012               	return		;indir
   780  000B5E                     u1969:
   781  000B5E                     
   782                           ;application/Application.c: 118:         Led_open(&blueLed);
   783  000B5E  0E32               	movlw	low _blueLed
   784  000B60  0100               	movlb	0	; () banked
   785  000B62  6FBF               	movwf	Led_open@led& (0+255),b
   786  000B64  0E00               	movlw	high _blueLed
   787  000B66  6FC0               	movwf	(Led_open@led+1)& (0+255),b
   788  000B68  EC4C  F007         	call	_Led_open	;wreg free
   789  000B6C                     
   790                           ;application/Application.c: 119:         Led_close(&yellowLed);
   791  000B6C  0E36               	movlw	low _yellowLed
   792  000B6E  0100               	movlb	0	; () banked
   793  000B70  6FBF               	movwf	Led_close@led& (0+255),b
   794  000B72  0E00               	movlw	high _yellowLed
   795  000B74  6FC0               	movwf	(Led_close@led+1)& (0+255),b
   796  000B76  EC62  F007         	call	_Led_close	;wreg free
   797                           
   798                           ;application/Application.c: 121:     } else {
   799  000B7A  EFD9  F005         	goto	l114
   800  000B7E                     l2947:
   801                           
   802                           ; BSR set to: 0
   803                           ;application/Application.c: 122:         usart.writeLine("basÄ±lmadÄ±");
   804  000B7E  0E9A               	movlw	low STR_2
   805  000B80  6FBF               	movwf	USARTWriteLine@ln& (0+255),b
   806  000B82  0E06               	movlw	high STR_2
   807  000B84  6FC0               	movwf	(USARTWriteLine@ln+1)& (0+255),b
   808  000B86  EE20  F0AB         	lfsr	2,_usart+10
   809  000B8A  D802               	call	u1978
   810  000B8C  EFD2  F005         	goto	u1979
   811  000B90                     u1978:
   812  000B90  0005               	push	
   813  000B92  6EFA               	movwf	pclath,c
   814  000B94  50DE               	movf	postinc2,w,c
   815  000B96  6EFD               	movwf	tosl,c
   816  000B98  50DE               	movf	postinc2,w,c
   817  000B9A  6EFE               	movwf	tosh,c
   818  000B9C  50F8               	movf	tblptru,w,c
   819  000B9E  6EFF               	movwf	tosu,c
   820  000BA0  50FA               	movf	pclath,w,c
   821  000BA2  0012               	return		;indir
   822  000BA4                     u1979:
   823  000BA4                     
   824                           ;application/Application.c: 124:         Led_close(&blueLed);
   825  000BA4  0E32               	movlw	low _blueLed
   826  000BA6  0100               	movlb	0	; () banked
   827  000BA8  6FBF               	movwf	Led_close@led& (0+255),b
   828  000BAA  0E00               	movlw	high _blueLed
   829  000BAC  6FC0               	movwf	(Led_close@led+1)& (0+255),b
   830  000BAE  EC62  F007         	call	_Led_close	;wreg free
   831  000BB2                     l114:
   832  000BB2  0012               	return		;funcret
   833  000BB4                     __end_of_Application_loop:
   834                           	opt callstack 0
   835                           
   836 ;; *************** function _USARTWriteLine *****************
   837 ;; Defined at:
   838 ;;		line 93 in file "usart/UsartFunctions.h"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  ln              2    2[BANK0 ] PTR const unsigned char 
   841 ;;		 -> ISR@tmp(20), STR_2(12), STR_1(10), 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   853 ;;      Params:         0       2       0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0
   856 ;;      Totals:         0       2       0       0       0       0       0
   857 ;;Total ram usage:        2 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    5
   860 ;; This function calls:
   861 ;;		_USARTWriteString
   862 ;; This function is called by:
   863 ;;		_setupFunctions
   864 ;;		_Application_loop
   865 ;;		_ISR
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text2
   870  000F40                     __ptext2:
   871                           	opt callstack 0
   872  000F40                     _USARTWriteLine:
   873                           	opt callstack 0
   874                           
   875                           ;Skip over the trampoline to the duplicate function for level 2
   876  000F40  A25C               	btfss	int$flags,1,c
   877  000F42  EFA5  F007         	goto	_USARTWriteLine$intlevel0
   878  000F46  EF00  F008         	goto	i2_USARTWriteLine
   879  000F4A                     _USARTWriteLine$intlevel0:
   880                           	opt callstack 24
   881  000F4A                     
   882                           ;usart/UsartFunctions.h: 94:     USARTWriteString(ln);
   883  000F4A  C0BF  F0BD         	movff	USARTWriteLine@ln,USARTWriteString@str
   884  000F4E  C0C0  F0BE         	movff	USARTWriteLine@ln+1,USARTWriteString@str+1
   885  000F52  ECDA  F005         	call	_USARTWriteString	;wreg free
   886                           
   887                           ;usart/UsartFunctions.h: 95:     USARTWriteString("\r\n");
   888  000F56  0EB0               	movlw	low STR_3
   889  000F58  0100               	movlb	0	; () banked
   890  000F5A  6FBD               	movwf	USARTWriteString@str& (0+255),b
   891  000F5C  0E06               	movlw	high STR_3
   892  000F5E  6FBE               	movwf	(USARTWriteString@str+1)& (0+255),b
   893  000F60  ECDA  F005         	call	_USARTWriteString	;wreg free
   894  000F64  0012               	return		;funcret
   895  000F66                     __end_of_USARTWriteLine:
   896                           	opt callstack 0
   897                           
   898 ;; *************** function _USARTWriteString *****************
   899 ;; Defined at:
   900 ;;		line 71 in file "usart/UsartFunctions.h"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  str             2    0[BANK0 ] PTR const unsigned char 
   903 ;;		 -> STR_3(3), ISR@tmp(20), STR_2(12), STR_1(10), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   915 ;;      Params:         0       2       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0
   918 ;;      Totals:         0       2       0       0       0       0       0
   919 ;;Total ram usage:        2 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    4
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_USARTWriteLine
   926 ;;		_setupFunctions
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text3
   931  000BB4                     __ptext3:
   932                           	opt callstack 0
   933  000BB4                     _USARTWriteString:
   934                           	opt callstack 0
   935                           
   936                           ;Skip over the trampoline to the duplicate function for level 2
   937  000BB4  A25C               	btfss	int$flags,1,c
   938  000BB6  EFDF  F005         	goto	_USARTWriteString$intlevel0
   939  000BBA  EF89  F006         	goto	i2_USARTWriteString
   940  000BBE                     _USARTWriteString$intlevel0:
   941                           	opt callstack 24
   942  000BBE                     
   943                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
   944  000BBE  EFFC  F005         	goto	l2823
   945  000BC2                     l442:
   946  000BC2  A89E               	btfss	3998,4,c	;volatile
   947  000BC4  EFE6  F005         	goto	u1891
   948  000BC8  EFE8  F005         	goto	u1890
   949  000BCC                     u1891:
   950  000BCC  EFE1  F005         	goto	l442
   951  000BD0                     u1890:
   952  000BD0                     
   953                           ;usart/UsartFunctions.h: 77:         TXREG = (*str);
   954  000BD0  C0BD  FFF6         	movff	USARTWriteString@str,tblptrl
   955  000BD4  C0BE  FFF7         	movff	USARTWriteString@str+1,tblptrh
   956  000BD8  6AF8               	clrf	tblptru,c
   957  000BDA  0E05               	movlw	(high __ramtop+-1)
   958  000BDC  64F7               	cpfsgt	tblptrh,c
   959  000BDE  D003               	bra	u1907
   960  000BE0  0008               	tblrd		*
   961  000BE2  50F5               	movf	tablat,w,c
   962  000BE4  D005               	bra	u1900
   963  000BE6                     u1907:
   964  000BE6  CFF6 FFE9          	movff	tblptrl,fsr0l
   965  000BEA  CFF7 FFEA          	movff	tblptrh,fsr0h
   966  000BEE  50EF               	movf	indf0,w,c
   967  000BF0                     u1900:
   968  000BF0  6EAD               	movwf	173,c	;volatile
   969  000BF2                     
   970                           ;usart/UsartFunctions.h: 80:         str++;
   971  000BF2  0100               	movlb	0	; () banked
   972  000BF4  4BBD               	infsnz	USARTWriteString@str& (0+255),f,b
   973  000BF6  2BBE               	incf	(USARTWriteString@str+1)& (0+255),f,b
   974  000BF8                     l2823:
   975                           
   976                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
   977  000BF8  C0BD  FFF6         	movff	USARTWriteString@str,tblptrl
   978  000BFC  C0BE  FFF7         	movff	USARTWriteString@str+1,tblptrh
   979  000C00  6AF8               	clrf	tblptru,c
   980  000C02  0E05               	movlw	(high __ramtop+-1)
   981  000C04  64F7               	cpfsgt	tblptrh,c
   982  000C06  D003               	bra	u1917
   983  000C08  0008               	tblrd		*
   984  000C0A  50F5               	movf	tablat,w,c
   985  000C0C  D005               	bra	u1910
   986  000C0E                     u1917:
   987  000C0E  CFF6 FFE9          	movff	tblptrl,fsr0l
   988  000C12  CFF7 FFEA          	movff	tblptrh,fsr0h
   989  000C16  50EF               	movf	indf0,w,c
   990  000C18                     u1910:
   991  000C18  0900               	iorlw	0
   992  000C1A  A4D8               	btfss	status,2,c
   993  000C1C  EF12  F006         	goto	u1921
   994  000C20  EF14  F006         	goto	u1920
   995  000C24                     u1921:
   996  000C24  EFE1  F005         	goto	l442
   997  000C28                     u1920:
   998  000C28  0012               	return		;funcret
   999  000C2A                     __end_of_USARTWriteString:
  1000                           	opt callstack 0
  1001                           
  1002 ;; *************** function _Led_open *****************
  1003 ;; Defined at:
  1004 ;;		line 11 in file "led/Led.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  led             2    2[BANK0 ] PTR struct Led
  1007 ;;		 -> blueLed(4), redLed(4), yellowLed(4), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1019 ;;      Params:         0       2       0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0
  1022 ;;      Totals:         0       2       0       0       0       0       0
  1023 ;;Total ram usage:        2 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    5
  1026 ;; This function calls:
  1027 ;;		_DigitalOutput_open
  1028 ;; This function is called by:
  1029 ;;		_Application_loop
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text4
  1034  000E98                     __ptext4:
  1035                           	opt callstack 0
  1036  000E98                     _Led_open:
  1037                           	opt callstack 24
  1038  000E98                     
  1039                           ;led/Led.c: 12:     led->isOpen = 1;
  1040  000E98  0100               	movlb	0	; () banked
  1041  000E9A  EE20 F002          	lfsr	2,2
  1042  000E9E  51BF               	movf	Led_open@led& (0+255),w,b
  1043  000EA0  26D9               	addwf	fsr2l,f,c
  1044  000EA2  51C0               	movf	(Led_open@led+1)& (0+255),w,b
  1045  000EA4  22DA               	addwfc	fsr2h,f,c
  1046  000EA6  0E01               	movlw	1
  1047  000EA8  6EDE               	movwf	postinc2,c
  1048  000EAA  0E00               	movlw	0
  1049  000EAC  6EDD               	movwf	postdec2,c
  1050  000EAE                     
  1051                           ; BSR set to: 0
  1052                           ;led/Led.c: 13:     DigitalOutput_open(led->output);
  1053  000EAE  C0BF  FFD9         	movff	Led_open@led,fsr2l
  1054  000EB2  C0C0  FFDA         	movff	Led_open@led+1,fsr2h
  1055  000EB6  CFDE F0BD          	movff	postinc2,DigitalOutput_open@output
  1056  000EBA  CFDD F0BE          	movff	postdec2,DigitalOutput_open@output+1
  1057  000EBE  EC1A  F008         	call	_DigitalOutput_open	;wreg free
  1058  000EC2  0012               	return		;funcret
  1059  000EC4                     __end_of_Led_open:
  1060                           	opt callstack 0
  1061                           
  1062 ;; *************** function _DigitalOutput_open *****************
  1063 ;; Defined at:
  1064 ;;		line 11 in file "io/digitalOutput/DigitalOutput.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  1067 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  1068 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), yellowLedOutput(4), 
  1069 ;;		 -> redLedOutput(4), 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         0       2       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0
  1084 ;;      Totals:         0       2       0       0       0       0       0
  1085 ;;Total ram usage:        2 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    4
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_Led_open
  1092 ;;		_Engine_step
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text5
  1097  001034                     __ptext5:
  1098                           	opt callstack 0
  1099  001034                     _DigitalOutput_open:
  1100                           	opt callstack 24
  1101  001034                     
  1102                           ;io/digitalOutput/DigitalOutput.c: 13:     (*output->set)(output,1);
  1103  001034  0100               	movlb	0	; () banked
  1104  001036  EE20 F002          	lfsr	2,2
  1105  00103A  51BD               	movf	DigitalOutput_open@output& (0+255),w,b
  1106  00103C  26D9               	addwf	fsr2l,f,c
  1107  00103E  51BE               	movf	(DigitalOutput_open@output+1)& (0+255),w,b
  1108  001040  22DA               	addwfc	fsr2h,f,c
  1109  001042  0E01               	movlw	1
  1110  001044  6EDE               	movwf	postinc2,c
  1111  001046  0E00               	movlw	0
  1112  001048  6EDD               	movwf	postdec2,c
  1113  00104A                     
  1114                           ; BSR set to: 0
  1115  00104A  0012               	return		;funcret
  1116  00104C                     __end_of_DigitalOutput_open:
  1117                           	opt callstack 0
  1118                           
  1119 ;; *************** function _Led_close *****************
  1120 ;; Defined at:
  1121 ;;		line 16 in file "led/Led.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  led             2    2[BANK0 ] PTR struct Led
  1124 ;;		 -> blueLed(4), yellowLed(4), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1136 ;;      Params:         0       2       0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0
  1139 ;;      Totals:         0       2       0       0       0       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    5
  1143 ;; This function calls:
  1144 ;;		_DigitalOutput_close
  1145 ;; This function is called by:
  1146 ;;		_Application_loop
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text6
  1151  000EC4                     __ptext6:
  1152                           	opt callstack 0
  1153  000EC4                     _Led_close:
  1154                           	opt callstack 24
  1155  000EC4                     
  1156                           ;led/Led.c: 17:     led->isOpen = 0;
  1157  000EC4  0100               	movlb	0	; () banked
  1158  000EC6  EE20 F002          	lfsr	2,2
  1159  000ECA  51BF               	movf	Led_close@led& (0+255),w,b
  1160  000ECC  26D9               	addwf	fsr2l,f,c
  1161  000ECE  51C0               	movf	(Led_close@led+1)& (0+255),w,b
  1162  000ED0  22DA               	addwfc	fsr2h,f,c
  1163  000ED2  0E00               	movlw	0
  1164  000ED4  6EDE               	movwf	postinc2,c
  1165  000ED6  0E00               	movlw	0
  1166  000ED8  6EDD               	movwf	postdec2,c
  1167  000EDA                     
  1168                           ; BSR set to: 0
  1169                           ;led/Led.c: 18:     DigitalOutput_close(led->output);
  1170  000EDA  C0BF  FFD9         	movff	Led_close@led,fsr2l
  1171  000EDE  C0C0  FFDA         	movff	Led_close@led+1,fsr2h
  1172  000EE2  CFDE F0BD          	movff	postinc2,DigitalOutput_close@output
  1173  000EE6  CFDD F0BE          	movff	postdec2,DigitalOutput_close@output+1
  1174  000EEA  EC26  F008         	call	_DigitalOutput_close	;wreg free
  1175  000EEE  0012               	return		;funcret
  1176  000EF0                     __end_of_Led_close:
  1177                           	opt callstack 0
  1178                           
  1179 ;; *************** function _DigitalOutput_close *****************
  1180 ;; Defined at:
  1181 ;;		line 16 in file "io/digitalOutput/DigitalOutput.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  1184 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  1185 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), yellowLedOutput(4), 
  1186 ;;		 -> redLedOutput(4), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       2       0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0
  1201 ;;      Totals:         0       2       0       0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    4
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_Led_close
  1209 ;;		_Engine_step
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text7
  1214  00104C                     __ptext7:
  1215                           	opt callstack 0
  1216  00104C                     _DigitalOutput_close:
  1217                           	opt callstack 24
  1218  00104C                     
  1219                           ;io/digitalOutput/DigitalOutput.c: 18:     output->set(output,0);
  1220  00104C  0100               	movlb	0	; () banked
  1221  00104E  EE20 F002          	lfsr	2,2
  1222  001052  51BD               	movf	DigitalOutput_close@output& (0+255),w,b
  1223  001054  26D9               	addwf	fsr2l,f,c
  1224  001056  51BE               	movf	(DigitalOutput_close@output+1)& (0+255),w,b
  1225  001058  22DA               	addwfc	fsr2h,f,c
  1226  00105A  0E00               	movlw	0
  1227  00105C  6EDE               	movwf	postinc2,c
  1228  00105E  0E00               	movlw	0
  1229  001060  6EDD               	movwf	postdec2,c
  1230  001062                     
  1231                           ; BSR set to: 0
  1232  001062  0012               	return		;funcret
  1233  001064                     __end_of_DigitalOutput_close:
  1234                           	opt callstack 0
  1235                           
  1236 ;; *************** function _DigitalInput_getValue *****************
  1237 ;; Defined at:
  1238 ;;		line 12 in file "io/digitalinput/DigitalInput.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  input           2    0[BANK0 ] PTR struct DigitalInput
  1241 ;;		 -> button1Input(2), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  value           2    0        int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2    0[BANK0 ] int 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         0       2       0       0       0       0       0
  1254 ;;      Locals:         0       2       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         0       4       0       0       0       0       0
  1257 ;;Total ram usage:        4 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_Application_loop
  1264 ;;		_Button_isPressed
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text8
  1269  00107A                     __ptext8:
  1270                           	opt callstack 0
  1271  00107A                     _DigitalInput_getValue:
  1272                           	opt callstack 25
  1273  00107A                     
  1274                           ;io/digitalinput/DigitalInput.c: 14:     return value;
  1275  00107A  0E00               	movlw	0
  1276  00107C  0100               	movlb	0	; () banked
  1277  00107E  6FBE               	movwf	(?_DigitalInput_getValue+1)& (0+255),b
  1278  001080  0E00               	movlw	0
  1279  001082  6FBD               	movwf	?_DigitalInput_getValue& (0+255),b
  1280  001084                     
  1281                           ; BSR set to: 0
  1282  001084  0012               	return		;funcret
  1283  001086                     __end_of_DigitalInput_getValue:
  1284                           	opt callstack 0
  1285                           
  1286 ;; *************** function _Application_init *****************
  1287 ;; Defined at:
  1288 ;;		line 44 in file "application/Application.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  app             2   34[BANK0 ] struct .
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  2   32[BANK0 ] struct .
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1302 ;;      Params:         0       2       0       0       0       0       0
  1303 ;;      Locals:         0       2       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0
  1305 ;;      Totals:         0       4       0       0       0       0       0
  1306 ;;Total ram usage:        4 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    7
  1309 ;; This function calls:
  1310 ;;		_ButtonConfigurator_config
  1311 ;;		_Button_init
  1312 ;;		_LedConfigurator_config
  1313 ;;		_Led_init
  1314 ;;		_USARTInit
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text9
  1321  0008BA                     __ptext9:
  1322                           	opt callstack 0
  1323  0008BA                     _Application_init:
  1324                           	opt callstack 23
  1325  0008BA                     
  1326                           ;application/Application.c: 45:     Application app;;application/Application.c: 46:     
      +                          app.id = 0;
  1327  0008BA  0E00               	movlw	0
  1328  0008BC  0100               	movlb	0	; () banked
  1329  0008BE  6FE0               	movwf	(Application_init@app+1)& (0+255),b
  1330  0008C0  0E00               	movlw	0
  1331  0008C2  6FDF               	movwf	Application_init@app& (0+255),b
  1332                           
  1333                           ;application/Application.c: 48:     LATA = 0;
  1334  0008C4  0E00               	movlw	0
  1335  0008C6  6E89               	movwf	137,c	;volatile
  1336                           
  1337                           ;application/Application.c: 49:     LATB = 0;
  1338  0008C8  0E00               	movlw	0
  1339  0008CA  6E8A               	movwf	138,c	;volatile
  1340                           
  1341                           ;application/Application.c: 50:     LATC = 0;
  1342  0008CC  0E00               	movlw	0
  1343  0008CE  6E8B               	movwf	139,c	;volatile
  1344                           
  1345                           ;application/Application.c: 51:     LATD = 0;
  1346  0008D0  0E00               	movlw	0
  1347  0008D2  6E8C               	movwf	140,c	;volatile
  1348                           
  1349                           ;application/Application.c: 52:     LATE = 0;
  1350  0008D4  0E00               	movlw	0
  1351  0008D6  6E8D               	movwf	141,c	;volatile
  1352  0008D8                     
  1353                           ; BSR set to: 0
  1354                           ;application/Application.c: 53:     USARTInit(&usart, 9600);
  1355  0008D8  0EA1               	movlw	low _usart
  1356  0008DA  6FD7               	movwf	USARTInit@usart& (0+255),b
  1357  0008DC  0E00               	movlw	high _usart
  1358  0008DE  6FD8               	movwf	(USARTInit@usart+1)& (0+255),b
  1359  0008E0  0E80               	movlw	128
  1360  0008E2  6FD9               	movwf	USARTInit@baudRate& (0+255),b
  1361  0008E4  0E25               	movlw	37
  1362  0008E6  6FDA               	movwf	(USARTInit@baudRate+1)& (0+255),b
  1363  0008E8  0E00               	movlw	0
  1364  0008EA  6FDB               	movwf	(USARTInit@baudRate+2)& (0+255),b
  1365  0008EC  0E00               	movlw	0
  1366  0008EE  6FDC               	movwf	(USARTInit@baudRate+3)& (0+255),b
  1367  0008F0  ECE0  F006         	call	_USARTInit	;wreg free
  1368  0008F4                     
  1369                           ;application/Application.c: 74:     LedConfigurator_config();
  1370  0008F4  EC4F  F006         	call	_LedConfigurator_config	;wreg free
  1371  0008F8                     
  1372                           ;application/Application.c: 76:     yellowLed = Led_init(&yellowLedOutput);
  1373  0008F8  0E3A               	movlw	low _yellowLedOutput
  1374  0008FA  0100               	movlb	0	; () banked
  1375  0008FC  6FBD               	movwf	Led_init@output& (0+255),b
  1376  0008FE  0E00               	movlw	high _yellowLedOutput
  1377  000900  6FBE               	movwf	(Led_init@output+1)& (0+255),b
  1378  000902  ECF3  F007         	call	_Led_init	;wreg free
  1379  000906  C0BD  F036         	movff	?_Led_init,_yellowLed
  1380  00090A  C0BE  F037         	movff	?_Led_init+1,_yellowLed+1
  1381  00090E  C0BF  F038         	movff	?_Led_init+2,_yellowLed+2
  1382  000912  C0C0  F039         	movff	?_Led_init+3,_yellowLed+3
  1383  000916                     
  1384                           ;application/Application.c: 78:     redLed = Led_init(&redLedOutput);
  1385  000916  0E3E               	movlw	low _redLedOutput
  1386  000918  0100               	movlb	0	; () banked
  1387  00091A  6FBD               	movwf	Led_init@output& (0+255),b
  1388  00091C  0E00               	movlw	high _redLedOutput
  1389  00091E  6FBE               	movwf	(Led_init@output+1)& (0+255),b
  1390  000920  ECF3  F007         	call	_Led_init	;wreg free
  1391  000924  C0BD  F0B5         	movff	?_Led_init,_redLed
  1392  000928  C0BE  F0B6         	movff	?_Led_init+1,_redLed+1
  1393  00092C  C0BF  F0B7         	movff	?_Led_init+2,_redLed+2
  1394  000930  C0C0  F0B8         	movff	?_Led_init+3,_redLed+3
  1395  000934                     
  1396                           ;application/Application.c: 80:     blueLed = Led_init(&blueLedOutput);
  1397  000934  0EB9               	movlw	low _blueLedOutput
  1398  000936  0100               	movlb	0	; () banked
  1399  000938  6FBD               	movwf	Led_init@output& (0+255),b
  1400  00093A  0E00               	movlw	high _blueLedOutput
  1401  00093C  6FBE               	movwf	(Led_init@output+1)& (0+255),b
  1402  00093E  ECF3  F007         	call	_Led_init	;wreg free
  1403  000942  C0BD  F032         	movff	?_Led_init,_blueLed
  1404  000946  C0BE  F033         	movff	?_Led_init+1,_blueLed+1
  1405  00094A  C0BF  F034         	movff	?_Led_init+2,_blueLed+2
  1406  00094E  C0C0  F035         	movff	?_Led_init+3,_blueLed+3
  1407  000952                     
  1408                           ;application/Application.c: 82:     ButtonConfigurator_config();
  1409  000952  ECD5  F007         	call	_ButtonConfigurator_config	;wreg free
  1410  000956                     
  1411                           ;application/Application.c: 84:     button = Button_init(&button1Input, 0);
  1412  000956  0E5A               	movlw	low _button1Input
  1413  000958  0100               	movlb	0	; () banked
  1414  00095A  6FBD               	movwf	Button_init@input& (0+255),b
  1415  00095C  0E00               	movlw	high _button1Input
  1416  00095E  6FBE               	movwf	(Button_init@input+1)& (0+255),b
  1417  000960  0E00               	movlw	0
  1418  000962  6FBF               	movwf	Button_init@onPressed& (0+255),b
  1419  000964  0E00               	movlw	0
  1420  000966  6FC0               	movwf	(Button_init@onPressed+1)& (0+255),b
  1421  000968  ECC4  F007         	call	_Button_init	;wreg free
  1422  00096C  C0BD  F09D         	movff	?_Button_init,_button
  1423  000970  C0BE  F09E         	movff	?_Button_init+1,_button+1
  1424  000974  C0BF  F09F         	movff	?_Button_init+2,_button+2
  1425  000978  C0C0  F0A0         	movff	?_Button_init+3,_button+3
  1426  00097C                     
  1427                           ;application/Application.c: 98:     return app;
  1428  00097C  C0DF  F0DD         	movff	Application_init@app,?_Application_init
  1429  000980  C0E0  F0DE         	movff	Application_init@app+1,?_Application_init+1
  1430  000984  0012               	return		;funcret
  1431  000986                     __end_of_Application_init:
  1432                           	opt callstack 0
  1433                           
  1434 ;; *************** function _USARTInit *****************
  1435 ;; Defined at:
  1436 ;;		line 42 in file "usart/Usart.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  usart           2   26[BANK0 ] PTR struct .
  1439 ;;		 -> usart(20), 
  1440 ;;  baudRate        4   28[BANK0 ] long 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1452 ;;      Params:         0       6       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0
  1455 ;;      Totals:         0       6       0       0       0       0       0
  1456 ;;Total ram usage:        6 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    6
  1459 ;; This function calls:
  1460 ;;		_calculateSpbrg
  1461 ;;		_enableInterrupts
  1462 ;;		_setupFunctions
  1463 ;; This function is called by:
  1464 ;;		_Application_init
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text10
  1469  000DC0                     __ptext10:
  1470                           	opt callstack 0
  1471  000DC0                     _USARTInit:
  1472                           	opt callstack 23
  1473  000DC0                     
  1474                           ;usart/Usart.c: 45:     enableInterrupts();
  1475  000DC0  EC43  F008         	call	_enableInterrupts	;wreg free
  1476  000DC4                     
  1477                           ;usart/Usart.c: 47:      OSCCON = 0x72;
  1478  000DC4  0E72               	movlw	114
  1479  000DC6  6ED3               	movwf	211,c	;volatile
  1480  000DC8                     
  1481                           ;usart/Usart.c: 49:     BRGH = 1;
  1482  000DC8  84AC               	bsf	4012,2,c	;volatile
  1483  000DCA                     
  1484                           ;usart/Usart.c: 50:     SPBRG = calculateSpbrg(baudRate);
  1485  000DCA  C0D9  F0CB         	movff	USARTInit@baudRate,calculateSpbrg@baudRate
  1486  000DCE  C0DA  F0CC         	movff	USARTInit@baudRate+1,calculateSpbrg@baudRate+1
  1487  000DD2  C0DB  F0CD         	movff	USARTInit@baudRate+2,calculateSpbrg@baudRate+2
  1488  000DD6  C0DC  F0CE         	movff	USARTInit@baudRate+3,calculateSpbrg@baudRate+3
  1489  000DDA  EC15  F006         	call	_calculateSpbrg	;wreg free
  1490  000DDE  0100               	movlb	0	; () banked
  1491  000DE0  51CB               	movf	?_calculateSpbrg& (0+255),w,b
  1492  000DE2  6EAF               	movwf	175,c	;volatile
  1493  000DE4                     
  1494                           ; BSR set to: 0
  1495                           ;usart/Usart.c: 53:     SYNC = 0;
  1496  000DE4  98AC               	bcf	4012,4,c	;volatile
  1497  000DE6                     
  1498                           ; BSR set to: 0
  1499                           ;usart/Usart.c: 54:     SPEN = 1;
  1500  000DE6  8EAB               	bsf	4011,7,c	;volatile
  1501  000DE8                     
  1502                           ; BSR set to: 0
  1503                           ;usart/Usart.c: 56:     TRISC6 = 1;
  1504  000DE8  8C94               	bsf	3988,6,c	;volatile
  1505  000DEA                     
  1506                           ; BSR set to: 0
  1507                           ;usart/Usart.c: 57:     TRISC7 = 1;
  1508  000DEA  8E94               	bsf	3988,7,c	;volatile
  1509  000DEC                     
  1510                           ; BSR set to: 0
  1511                           ;usart/Usart.c: 58:     TXEN = 1;
  1512  000DEC  8AAC               	bsf	4012,5,c	;volatile
  1513  000DEE                     
  1514                           ; BSR set to: 0
  1515                           ;usart/Usart.c: 60:     CREN = 1;
  1516  000DEE  88AB               	bsf	4011,4,c	;volatile
  1517  000DF0                     
  1518                           ; BSR set to: 0
  1519                           ;usart/Usart.c: 61:     setupFunctions(usart);
  1520  000DF0  C0D7  F0BD         	movff	USARTInit@usart,setupFunctions@usart
  1521  000DF4  C0D8  F0BE         	movff	USARTInit@usart+1,setupFunctions@usart+1
  1522  000DF8  ECC3  F004         	call	_setupFunctions	;wreg free
  1523  000DFC  0012               	return		;funcret
  1524  000DFE                     __end_of_USARTInit:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _setupFunctions *****************
  1528 ;; Defined at:
  1529 ;;		line 12 in file "usart/Usart.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  usart           2    0[BANK0 ] PTR struct .
  1532 ;;		 -> usart(20), 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1544 ;;      Params:         0       2       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0
  1547 ;;      Totals:         0       2       0       0       0       0       0
  1548 ;;Total ram usage:        2 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    4
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_USARTInit
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text11
  1559  000986                     __ptext11:
  1560                           	opt callstack 0
  1561  000986                     _setupFunctions:
  1562                           	opt callstack 24
  1563  000986                     
  1564                           ;usart/Usart.c: 14:     usart->isDataReady = USARTDataReady;
  1565  000986  C0BD  FFD9         	movff	setupFunctions@usart,fsr2l
  1566  00098A  C0BE  FFDA         	movff	setupFunctions@usart+1,fsr2h
  1567  00098E  0ECA               	movlw	low _USARTDataReady
  1568  000990  6EDE               	movwf	postinc2,c
  1569  000992  0E0F               	movlw	high _USARTDataReady
  1570  000994  6EDD               	movwf	postdec2,c
  1571  000996                     
  1572                           ;usart/Usart.c: 17:     usart->readByte = USARTReadByte;
  1573  000996  0100               	movlb	0	; () banked
  1574  000998  EE20 F012          	lfsr	2,18
  1575  00099C  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1576  00099E  26D9               	addwf	fsr2l,f,c
  1577  0009A0  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1578  0009A2  22DA               	addwfc	fsr2h,f,c
  1579  0009A4  0E00               	movlw	0
  1580  0009A6  6EDE               	movwf	postinc2,c
  1581  0009A8  0E00               	movlw	0
  1582  0009AA  6EDD               	movwf	postdec2,c
  1583  0009AC                     
  1584                           ; BSR set to: 0
  1585                           ;usart/Usart.c: 18:     usart->readChar = USARTReadChar;
  1586  0009AC  EE20 F002          	lfsr	2,2
  1587  0009B0  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1588  0009B2  26D9               	addwf	fsr2l,f,c
  1589  0009B4  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1590  0009B6  22DA               	addwfc	fsr2h,f,c
  1591  0009B8  0E1A               	movlw	low _USARTReadChar
  1592  0009BA  6EDE               	movwf	postinc2,c
  1593  0009BC  0E10               	movlw	high _USARTReadChar
  1594  0009BE  6EDD               	movwf	postdec2,c
  1595  0009C0                     
  1596                           ; BSR set to: 0
  1597                           ;usart/Usart.c: 19:     usart->readString = USARTReadString;
  1598  0009C0  EE20 F004          	lfsr	2,4
  1599  0009C4  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1600  0009C6  26D9               	addwf	fsr2l,f,c
  1601  0009C8  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1602  0009CA  22DA               	addwfc	fsr2h,f,c
  1603  0009CC  0E4E               	movlw	low _USARTReadString
  1604  0009CE  6EDE               	movwf	postinc2,c
  1605  0009D0  0E0A               	movlw	high _USARTReadString
  1606  0009D2  6EDD               	movwf	postdec2,c
  1607  0009D4                     
  1608                           ; BSR set to: 0
  1609                           ;usart/Usart.c: 22:     usart->writeByte = USARTWriteByte;
  1610  0009D4  EE20 F006          	lfsr	2,6
  1611  0009D8  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1612  0009DA  26D9               	addwf	fsr2l,f,c
  1613  0009DC  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1614  0009DE  22DA               	addwfc	fsr2h,f,c
  1615  0009E0  0E00               	movlw	0
  1616  0009E2  6EDE               	movwf	postinc2,c
  1617  0009E4  0E00               	movlw	0
  1618  0009E6  6EDD               	movwf	postdec2,c
  1619  0009E8                     
  1620                           ; BSR set to: 0
  1621                           ;usart/Usart.c: 23:     usart->writeInt = USARTWriteInt;
  1622  0009E8  EE20 F00C          	lfsr	2,12
  1623  0009EC  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1624  0009EE  26D9               	addwf	fsr2l,f,c
  1625  0009F0  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1626  0009F2  22DA               	addwfc	fsr2h,f,c
  1627  0009F4  0E00               	movlw	0
  1628  0009F6  6EDE               	movwf	postinc2,c
  1629  0009F8  0E00               	movlw	0
  1630  0009FA  6EDD               	movwf	postdec2,c
  1631  0009FC                     
  1632                           ; BSR set to: 0
  1633                           ;usart/Usart.c: 24:     usart->writeLong = USARTWriteLong;
  1634  0009FC  EE20 F00E          	lfsr	2,14
  1635  000A00  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1636  000A02  26D9               	addwf	fsr2l,f,c
  1637  000A04  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1638  000A06  22DA               	addwfc	fsr2h,f,c
  1639  000A08  0E00               	movlw	0
  1640  000A0A  6EDE               	movwf	postinc2,c
  1641  000A0C  0E00               	movlw	0
  1642  000A0E  6EDD               	movwf	postdec2,c
  1643  000A10                     
  1644                           ; BSR set to: 0
  1645                           ;usart/Usart.c: 25:     usart->writeFloat = USARTWriteFloat;
  1646  000A10  EE20 F010          	lfsr	2,16
  1647  000A14  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1648  000A16  26D9               	addwf	fsr2l,f,c
  1649  000A18  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1650  000A1A  22DA               	addwfc	fsr2h,f,c
  1651  000A1C  0E00               	movlw	0
  1652  000A1E  6EDE               	movwf	postinc2,c
  1653  000A20  0E00               	movlw	0
  1654  000A22  6EDD               	movwf	postdec2,c
  1655  000A24                     
  1656                           ; BSR set to: 0
  1657                           ;usart/Usart.c: 26:     usart->writeLine = USARTWriteLine;
  1658  000A24  EE20 F00A          	lfsr	2,10
  1659  000A28  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1660  000A2A  26D9               	addwf	fsr2l,f,c
  1661  000A2C  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1662  000A2E  22DA               	addwfc	fsr2h,f,c
  1663  000A30  0E40               	movlw	low _USARTWriteLine
  1664  000A32  6EDE               	movwf	postinc2,c
  1665  000A34  0E0F               	movlw	high _USARTWriteLine
  1666  000A36  6EDD               	movwf	postdec2,c
  1667  000A38                     
  1668                           ; BSR set to: 0
  1669                           ;usart/Usart.c: 27:     usart->writeString = USARTWriteString;
  1670  000A38  EE20 F008          	lfsr	2,8
  1671  000A3C  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1672  000A3E  26D9               	addwf	fsr2l,f,c
  1673  000A40  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1674  000A42  22DA               	addwfc	fsr2h,f,c
  1675  000A44  0EB4               	movlw	low _USARTWriteString
  1676  000A46  6EDE               	movwf	postinc2,c
  1677  000A48  0E0B               	movlw	high _USARTWriteString
  1678  000A4A  6EDD               	movwf	postdec2,c
  1679  000A4C                     
  1680                           ; BSR set to: 0
  1681  000A4C  0012               	return		;funcret
  1682  000A4E                     __end_of_setupFunctions:
  1683                           	opt callstack 0
  1684                           
  1685 ;; *************** function _enableInterrupts *****************
  1686 ;; Defined at:
  1687 ;;		line 32 in file "usart/Usart.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		None
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_USARTInit
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text12
  1716  001086                     __ptext12:
  1717                           	opt callstack 0
  1718  001086                     _enableInterrupts:
  1719                           	opt callstack 24
  1720  001086                     
  1721                           ;usart/Usart.c: 33:     GIE = 1;
  1722  001086  8EF2               	bsf	4082,7,c	;volatile
  1723                           
  1724                           ;usart/Usart.c: 34:     PEIE = 1;
  1725  001088  8CF2               	bsf	4082,6,c	;volatile
  1726                           
  1727                           ;usart/Usart.c: 35:     RCIE = 1;
  1728  00108A  8A9D               	bsf	3997,5,c	;volatile
  1729  00108C  0012               	return		;funcret
  1730  00108E                     __end_of_enableInterrupts:
  1731                           	opt callstack 0
  1732                           
  1733 ;; *************** function _calculateSpbrg *****************
  1734 ;; Defined at:
  1735 ;;		line 37 in file "usart/Usart.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  baudRate        4   14[BANK0 ] long 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  bolum           4   22[BANK0 ] long 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  4   14[BANK0 ] long 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       4       0       0       0       0       0
  1750 ;;      Locals:         0       4       0       0       0       0       0
  1751 ;;      Temps:          0       4       0       0       0       0       0
  1752 ;;      Totals:         0      12       0       0       0       0       0
  1753 ;;Total ram usage:       12 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    5
  1756 ;; This function calls:
  1757 ;;		___aldiv
  1758 ;; This function is called by:
  1759 ;;		_USARTInit
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text13
  1764  000C2A                     __ptext13:
  1765                           	opt callstack 0
  1766  000C2A                     _calculateSpbrg:
  1767                           	opt callstack 23
  1768  000C2A                     
  1769                           ;usart/Usart.c: 38:     long bolum = 16 * baudRate;
  1770  000C2A  C0CB  F0CF         	movff	calculateSpbrg@baudRate,??_calculateSpbrg
  1771  000C2E  C0CC  F0D0         	movff	calculateSpbrg@baudRate+1,??_calculateSpbrg+1
  1772  000C32  C0CD  F0D1         	movff	calculateSpbrg@baudRate+2,??_calculateSpbrg+2
  1773  000C36  C0CE  F0D2         	movff	calculateSpbrg@baudRate+3,??_calculateSpbrg+3
  1774  000C3A  0E04               	movlw	4
  1775  000C3C                     u1935:
  1776  000C3C  90D8               	bcf	status,0,c
  1777  000C3E  0100               	movlb	0	; () banked
  1778  000C40  37CF               	rlcf	??_calculateSpbrg& (0+255),f,b
  1779  000C42  37D0               	rlcf	(??_calculateSpbrg+1)& (0+255),f,b
  1780  000C44  37D1               	rlcf	(??_calculateSpbrg+2)& (0+255),f,b
  1781  000C46  37D2               	rlcf	(??_calculateSpbrg+3)& (0+255),f,b
  1782  000C48  2EE8               	decfsz	wreg,f,c
  1783  000C4A  EF1E  F006         	goto	u1935
  1784  000C4E  C0CF  F0D3         	movff	??_calculateSpbrg,calculateSpbrg@bolum
  1785  000C52  C0D0  F0D4         	movff	??_calculateSpbrg+1,calculateSpbrg@bolum+1
  1786  000C56  C0D1  F0D5         	movff	??_calculateSpbrg+2,calculateSpbrg@bolum+2
  1787  000C5A  C0D2  F0D6         	movff	??_calculateSpbrg+3,calculateSpbrg@bolum+3
  1788  000C5E                     
  1789                           ; BSR set to: 0
  1790                           ;usart/Usart.c: 39:     return ((8000000 / bolum) - 1);
  1791  000C5E  0E00               	movlw	0
  1792  000C60  6FBD               	movwf	___aldiv@dividend& (0+255),b
  1793  000C62  0E12               	movlw	18
  1794  000C64  6FBE               	movwf	(___aldiv@dividend+1)& (0+255),b
  1795  000C66  0E7A               	movlw	122
  1796  000C68  6FBF               	movwf	(___aldiv@dividend+2)& (0+255),b
  1797  000C6A  0E00               	movlw	0
  1798  000C6C  6FC0               	movwf	(___aldiv@dividend+3)& (0+255),b
  1799  000C6E  C0D3  F0C1         	movff	calculateSpbrg@bolum,___aldiv@divisor
  1800  000C72  C0D4  F0C2         	movff	calculateSpbrg@bolum+1,___aldiv@divisor+1
  1801  000C76  C0D5  F0C3         	movff	calculateSpbrg@bolum+2,___aldiv@divisor+2
  1802  000C7A  C0D6  F0C4         	movff	calculateSpbrg@bolum+3,___aldiv@divisor+3
  1803  000C7E  EC5A  F003         	call	___aldiv	;wreg free
  1804  000C82  0EFF               	movlw	255
  1805  000C84  0100               	movlb	0	; () banked
  1806  000C86  25BD               	addwf	?___aldiv& (0+255),w,b
  1807  000C88  6FCB               	movwf	?_calculateSpbrg& (0+255),b
  1808  000C8A  0EFF               	movlw	255
  1809  000C8C  21BE               	addwfc	(?___aldiv+1)& (0+255),w,b
  1810  000C8E  6FCC               	movwf	(?_calculateSpbrg+1)& (0+255),b
  1811  000C90  0EFF               	movlw	255
  1812  000C92  21BF               	addwfc	(?___aldiv+2)& (0+255),w,b
  1813  000C94  6FCD               	movwf	(?_calculateSpbrg+2)& (0+255),b
  1814  000C96  0EFF               	movlw	255
  1815  000C98  21C0               	addwfc	(?___aldiv+3)& (0+255),w,b
  1816  000C9A  6FCE               	movwf	(?_calculateSpbrg+3)& (0+255),b
  1817  000C9C                     
  1818                           ; BSR set to: 0
  1819  000C9C  0012               	return		;funcret
  1820  000C9E                     __end_of_calculateSpbrg:
  1821                           	opt callstack 0
  1822                           
  1823 ;; *************** function ___aldiv *****************
  1824 ;; Defined at:
  1825 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  dividend        4    0[BANK0 ] long 
  1828 ;;  divisor         4    4[BANK0 ] long 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  quotient        4   10[BANK0 ] long 
  1831 ;;  sign            1    9[BANK0 ] unsigned char 
  1832 ;;  counter         1    8[BANK0 ] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  4    0[BANK0 ] long 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1842 ;;      Params:         0       8       0       0       0       0       0
  1843 ;;      Locals:         0       6       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0
  1845 ;;      Totals:         0      14       0       0       0       0       0
  1846 ;;Total ram usage:       14 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    4
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_calculateSpbrg
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text14
  1857  0006B4                     __ptext14:
  1858                           	opt callstack 0
  1859  0006B4                     ___aldiv:
  1860                           	opt callstack 23
  1861  0006B4  0E00               	movlw	0
  1862  0006B6  0100               	movlb	0	; () banked
  1863  0006B8  6FC6               	movwf	___aldiv@sign& (0+255),b
  1864  0006BA                     
  1865                           ; BSR set to: 0
  1866  0006BA  BFC4               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  1867  0006BC  EF64  F003         	goto	u1820
  1868  0006C0  EF62  F003         	goto	u1821
  1869  0006C4                     u1821:
  1870  0006C4  EF6E  F003         	goto	l2769
  1871  0006C8                     u1820:
  1872  0006C8                     
  1873                           ; BSR set to: 0
  1874  0006C8  1FC4               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1875  0006CA  1FC3               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1876  0006CC  1FC2               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1877  0006CE  6DC1               	negf	___aldiv@divisor& (0+255),b
  1878  0006D0  0E00               	movlw	0
  1879  0006D2  23C2               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1880  0006D4  23C3               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1881  0006D6  23C4               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1882  0006D8                     
  1883                           ; BSR set to: 0
  1884  0006D8  0E01               	movlw	1
  1885  0006DA  6FC6               	movwf	___aldiv@sign& (0+255),b
  1886  0006DC                     l2769:
  1887                           
  1888                           ; BSR set to: 0
  1889  0006DC  BFC0               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  1890  0006DE  EF75  F003         	goto	u1830
  1891  0006E2  EF73  F003         	goto	u1831
  1892  0006E6                     u1831:
  1893  0006E6  EF7F  F003         	goto	l2775
  1894  0006EA                     u1830:
  1895  0006EA                     
  1896                           ; BSR set to: 0
  1897  0006EA  1FC0               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1898  0006EC  1FBF               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1899  0006EE  1FBE               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1900  0006F0  6DBD               	negf	___aldiv@dividend& (0+255),b
  1901  0006F2  0E00               	movlw	0
  1902  0006F4  23BE               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1903  0006F6  23BF               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1904  0006F8  23C0               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1905  0006FA                     
  1906                           ; BSR set to: 0
  1907  0006FA  0E01               	movlw	1
  1908  0006FC  1BC6               	xorwf	___aldiv@sign& (0+255),f,b
  1909  0006FE                     l2775:
  1910                           
  1911                           ; BSR set to: 0
  1912  0006FE  0E00               	movlw	0
  1913  000700  6FC7               	movwf	___aldiv@quotient& (0+255),b
  1914  000702  0E00               	movlw	0
  1915  000704  6FC8               	movwf	(___aldiv@quotient+1)& (0+255),b
  1916  000706  0E00               	movlw	0
  1917  000708  6FC9               	movwf	(___aldiv@quotient+2)& (0+255),b
  1918  00070A  0E00               	movlw	0
  1919  00070C  6FCA               	movwf	(___aldiv@quotient+3)& (0+255),b
  1920  00070E                     
  1921                           ; BSR set to: 0
  1922  00070E  51C1               	movf	___aldiv@divisor& (0+255),w,b
  1923  000710  11C2               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1924  000712  11C3               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1925  000714  11C4               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1926  000716  B4D8               	btfsc	status,2,c
  1927  000718  EF90  F003         	goto	u1841
  1928  00071C  EF92  F003         	goto	u1840
  1929  000720                     u1841:
  1930  000720  EFC8  F003         	goto	l2797
  1931  000724                     u1840:
  1932  000724                     
  1933                           ; BSR set to: 0
  1934  000724  0E01               	movlw	1
  1935  000726  6FC5               	movwf	___aldiv@counter& (0+255),b
  1936  000728  EF9C  F003         	goto	l2783
  1937  00072C                     l2781:
  1938                           
  1939                           ; BSR set to: 0
  1940  00072C  90D8               	bcf	status,0,c
  1941  00072E  37C1               	rlcf	___aldiv@divisor& (0+255),f,b
  1942  000730  37C2               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1943  000732  37C3               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1944  000734  37C4               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1945  000736  2BC5               	incf	___aldiv@counter& (0+255),f,b
  1946  000738                     l2783:
  1947                           
  1948                           ; BSR set to: 0
  1949  000738  AFC4               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1950  00073A  EFA1  F003         	goto	u1851
  1951  00073E  EFA3  F003         	goto	u1850
  1952  000742                     u1851:
  1953  000742  EF96  F003         	goto	l2781
  1954  000746                     u1850:
  1955  000746                     l2785:
  1956                           
  1957                           ; BSR set to: 0
  1958  000746  90D8               	bcf	status,0,c
  1959  000748  37C7               	rlcf	___aldiv@quotient& (0+255),f,b
  1960  00074A  37C8               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1961  00074C  37C9               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1962  00074E  37CA               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1963  000750                     
  1964                           ; BSR set to: 0
  1965  000750  51C1               	movf	___aldiv@divisor& (0+255),w,b
  1966  000752  5DBD               	subwf	___aldiv@dividend& (0+255),w,b
  1967  000754  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1968  000756  59BE               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1969  000758  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1970  00075A  59BF               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1971  00075C  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1972  00075E  59C0               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1973  000760  A0D8               	btfss	status,0,c
  1974  000762  EFB5  F003         	goto	u1861
  1975  000766  EFB7  F003         	goto	u1860
  1976  00076A                     u1861:
  1977  00076A  EFC0  F003         	goto	l2793
  1978  00076E                     u1860:
  1979  00076E                     
  1980                           ; BSR set to: 0
  1981  00076E  51C1               	movf	___aldiv@divisor& (0+255),w,b
  1982  000770  5FBD               	subwf	___aldiv@dividend& (0+255),f,b
  1983  000772  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1984  000774  5BBE               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1985  000776  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1986  000778  5BBF               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1987  00077A  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1988  00077C  5BC0               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1989  00077E                     
  1990                           ; BSR set to: 0
  1991  00077E  81C7               	bsf	___aldiv@quotient& (0+255),0,b
  1992  000780                     l2793:
  1993                           
  1994                           ; BSR set to: 0
  1995  000780  90D8               	bcf	status,0,c
  1996  000782  33C4               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1997  000784  33C3               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1998  000786  33C2               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1999  000788  33C1               	rrcf	___aldiv@divisor& (0+255),f,b
  2000  00078A                     
  2001                           ; BSR set to: 0
  2002  00078A  2FC5               	decfsz	___aldiv@counter& (0+255),f,b
  2003  00078C  EFA3  F003         	goto	l2785
  2004  000790                     l2797:
  2005                           
  2006                           ; BSR set to: 0
  2007  000790  51C6               	movf	___aldiv@sign& (0+255),w,b
  2008  000792  B4D8               	btfsc	status,2,c
  2009  000794  EFCE  F003         	goto	u1871
  2010  000798  EFD0  F003         	goto	u1870
  2011  00079C                     u1871:
  2012  00079C  EFD8  F003         	goto	l2801
  2013  0007A0                     u1870:
  2014  0007A0                     
  2015                           ; BSR set to: 0
  2016  0007A0  1FCA               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2017  0007A2  1FC9               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2018  0007A4  1FC8               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2019  0007A6  6DC7               	negf	___aldiv@quotient& (0+255),b
  2020  0007A8  0E00               	movlw	0
  2021  0007AA  23C8               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2022  0007AC  23C9               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2023  0007AE  23CA               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2024  0007B0                     l2801:
  2025                           
  2026                           ; BSR set to: 0
  2027  0007B0  C0C7  F0BD         	movff	___aldiv@quotient,?___aldiv
  2028  0007B4  C0C8  F0BE         	movff	___aldiv@quotient+1,?___aldiv+1
  2029  0007B8  C0C9  F0BF         	movff	___aldiv@quotient+2,?___aldiv+2
  2030  0007BC  C0CA  F0C0         	movff	___aldiv@quotient+3,?___aldiv+3
  2031  0007C0                     
  2032                           ; BSR set to: 0
  2033  0007C0  0012               	return		;funcret
  2034  0007C2                     __end_of___aldiv:
  2035                           	opt callstack 0
  2036                           
  2037 ;; *************** function _Led_init *****************
  2038 ;; Defined at:
  2039 ;;		line 4 in file "led/Led.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  2042 ;;		 -> blueLedOutput(4), yellowLedOutput(4), redLedOutput(4), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  led             4    4[BANK0 ] struct Led
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  4    0[BANK0 ] struct Led
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         0       4       0       0       0       0       0
  2055 ;;      Locals:         0       4       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0
  2057 ;;      Totals:         0       8       0       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_Application_init
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text15
  2069  000FE6                     __ptext15:
  2070                           	opt callstack 0
  2071  000FE6                     _Led_init:
  2072                           	opt callstack 25
  2073  000FE6                     
  2074                           ;led/Led.c: 5:     Led led;;led/Led.c: 6:     led.output = output;
  2075  000FE6  C0BD  F0C1         	movff	Led_init@output,Led_init@led
  2076  000FEA  C0BE  F0C2         	movff	Led_init@output+1,Led_init@led+1
  2077  000FEE                     
  2078                           ;led/Led.c: 7:     return led;
  2079  000FEE  C0C1  F0BD         	movff	Led_init@led,?_Led_init
  2080  000FF2  C0C2  F0BE         	movff	Led_init@led+1,?_Led_init+1
  2081  000FF6  C0C3  F0BF         	movff	Led_init@led+2,?_Led_init+2
  2082  000FFA  C0C4  F0C0         	movff	Led_init@led+3,?_Led_init+3
  2083  000FFE  0012               	return		;funcret
  2084  001000                     __end_of_Led_init:
  2085                           	opt callstack 0
  2086                           
  2087 ;; *************** function _LedConfigurator_config *****************
  2088 ;; Defined at:
  2089 ;;		line 52 in file "application/../led/LedConfigurator.h"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         0       0       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    6
  2110 ;; This function calls:
  2111 ;;		_DigitalOutput_init
  2112 ;; This function is called by:
  2113 ;;		_Application_init
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text16
  2118  000C9E                     __ptext16:
  2119                           	opt callstack 0
  2120  000C9E                     _LedConfigurator_config:
  2121                           	opt callstack 23
  2122  000C9E                     
  2123                           ;application/../led/LedConfigurator.h: 53:     redLedOutput = DigitalOutput_init(redLedI
      +                          nit,redLedSet);
  2124  000C9E  0EAA               	movlw	low _redLedInit
  2125  000CA0  0100               	movlb	0	; () banked
  2126  000CA2  6FBD               	movwf	DigitalOutput_init@init& (0+255),b
  2127  000CA4  0E10               	movlw	high _redLedInit
  2128  000CA6  6FBE               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2129  000CA8  0E00               	movlw	0
  2130  000CAA  6FBF               	movwf	DigitalOutput_init@set& (0+255),b
  2131  000CAC  0E00               	movlw	0
  2132  000CAE  6FC0               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2133  000CB0  ECFF  F006         	call	_DigitalOutput_init	;wreg free
  2134  000CB4  C0BD  F03E         	movff	?_DigitalOutput_init,_redLedOutput
  2135  000CB8  C0BE  F03F         	movff	?_DigitalOutput_init+1,_redLedOutput+1
  2136  000CBC  C0BF  F040         	movff	?_DigitalOutput_init+2,_redLedOutput+2
  2137  000CC0  C0C0  F041         	movff	?_DigitalOutput_init+3,_redLedOutput+3
  2138                           
  2139                           ;application/../led/LedConfigurator.h: 54:     yellowLedOutput = DigitalOutput_init(yell
      +                          owLedInit,yellowLedSet);
  2140  000CC4  0EA6               	movlw	low _yellowLedInit
  2141  000CC6  0100               	movlb	0	; () banked
  2142  000CC8  6FBD               	movwf	DigitalOutput_init@init& (0+255),b
  2143  000CCA  0E10               	movlw	high _yellowLedInit
  2144  000CCC  6FBE               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2145  000CCE  0E00               	movlw	0
  2146  000CD0  6FBF               	movwf	DigitalOutput_init@set& (0+255),b
  2147  000CD2  0E00               	movlw	0
  2148  000CD4  6FC0               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2149  000CD6  ECFF  F006         	call	_DigitalOutput_init	;wreg free
  2150  000CDA  C0BD  F03A         	movff	?_DigitalOutput_init,_yellowLedOutput
  2151  000CDE  C0BE  F03B         	movff	?_DigitalOutput_init+1,_yellowLedOutput+1
  2152  000CE2  C0BF  F03C         	movff	?_DigitalOutput_init+2,_yellowLedOutput+2
  2153  000CE6  C0C0  F03D         	movff	?_DigitalOutput_init+3,_yellowLedOutput+3
  2154                           
  2155                           ;application/../led/LedConfigurator.h: 55:     blueLedOutput = DigitalOutput_init(blueLe
      +                          dInit,blueLedSet);
  2156  000CEA  0EA2               	movlw	low _blueLedInit
  2157  000CEC  0100               	movlb	0	; () banked
  2158  000CEE  6FBD               	movwf	DigitalOutput_init@init& (0+255),b
  2159  000CF0  0E10               	movlw	high _blueLedInit
  2160  000CF2  6FBE               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2161  000CF4  0E00               	movlw	0
  2162  000CF6  6FBF               	movwf	DigitalOutput_init@set& (0+255),b
  2163  000CF8  0E00               	movlw	0
  2164  000CFA  6FC0               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2165  000CFC  ECFF  F006         	call	_DigitalOutput_init	;wreg free
  2166  000D00  C0BD  F0B9         	movff	?_DigitalOutput_init,_blueLedOutput
  2167  000D04  C0BE  F0BA         	movff	?_DigitalOutput_init+1,_blueLedOutput+1
  2168  000D08  C0BF  F0BB         	movff	?_DigitalOutput_init+2,_blueLedOutput+2
  2169  000D0C  C0C0  F0BC         	movff	?_DigitalOutput_init+3,_blueLedOutput+3
  2170  000D10  0012               	return		;funcret
  2171  000D12                     __end_of_LedConfigurator_config:
  2172                           	opt callstack 0
  2173                           
  2174 ;; *************** function _DigitalOutput_init *****************
  2175 ;; Defined at:
  2176 ;;		line 3 in file "io/digitalOutput/DigitalOutput.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  init            2    0[BANK0 ] PTR FTN()void 
  2179 ;;		 -> zEngineDirInit(1), yEngineDirInit(1), xEngineDirInit(1), zEngineMotionInit(1), 
  2180 ;;		 -> yEngineMotionInit(1), xEngineMotionInit(1), blueLedInit(1), yellowLedInit(1), 
  2181 ;;		 -> redLedInit(1), 
  2182 ;;  set             2    2[BANK0 ] PTR FTN()void 
  2183 ;;		 -> xEngineDirSet(1), xEngineMotionSet(1), blueLedSet(1), yellowLedSet(1), 
  2184 ;;		 -> redLedSet(1), 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  output          4    4[BANK0 ] struct DigitalOutput
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  4    0[BANK0 ] struct DigitalOutput
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2196 ;;      Params:         0       4       0       0       0       0       0
  2197 ;;      Locals:         0       4       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0
  2199 ;;      Totals:         0       8       0       0       0       0       0
  2200 ;;Total ram usage:        8 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    5
  2203 ;; This function calls:
  2204 ;;		_blueLedInit
  2205 ;;		_redLedInit
  2206 ;;		_xEngineDirInit
  2207 ;;		_xEngineMotionInit
  2208 ;;		_yEngineDirInit
  2209 ;;		_yEngineMotionInit
  2210 ;;		_yellowLedInit
  2211 ;;		_zEngineDirInit
  2212 ;;		_zEngineMotionInit
  2213 ;; This function is called by:
  2214 ;;		_LedConfigurator_config
  2215 ;;		_EngineConfigurator_configEngines
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text17
  2220  000DFE                     __ptext17:
  2221                           	opt callstack 0
  2222  000DFE                     _DigitalOutput_init:
  2223                           	opt callstack 23
  2224  000DFE                     
  2225                           ;io/digitalOutput/DigitalOutput.c: 4:     DigitalOutput output;;io/digitalOutput/Digital
      +                          Output.c: 5:     output.set = set;
  2226  000DFE  C0BF  F0C1         	movff	DigitalOutput_init@set,DigitalOutput_init@output
  2227  000E02  C0C0  F0C2         	movff	DigitalOutput_init@set+1,DigitalOutput_init@output+1
  2228  000E06                     
  2229                           ;io/digitalOutput/DigitalOutput.c: 6:     (*init)();
  2230  000E06  D802               	call	u1888
  2231  000E08  EF11  F007         	goto	u1889
  2232  000E0C                     u1888:
  2233  000E0C  0005               	push	
  2234  000E0E  0100               	movlb	0	; () banked
  2235  000E10  6EFA               	movwf	pclath,c
  2236  000E12  51BD               	movf	DigitalOutput_init@init& (0+255),w,b
  2237  000E14  6EFD               	movwf	tosl,c
  2238  000E16  51BE               	movf	(DigitalOutput_init@init+1)& (0+255),w,b
  2239  000E18  6EFE               	movwf	tosh,c
  2240  000E1A  50F8               	movf	tblptru,w,c
  2241  000E1C  6EFF               	movwf	tosu,c
  2242  000E1E  50FA               	movf	pclath,w,c
  2243  000E20  0012               	return		;indir
  2244  000E22                     u1889:
  2245  000E22                     
  2246                           ;io/digitalOutput/DigitalOutput.c: 7:     return output;
  2247  000E22  C0C1  F0BD         	movff	DigitalOutput_init@output,?_DigitalOutput_init
  2248  000E26  C0C2  F0BE         	movff	DigitalOutput_init@output+1,?_DigitalOutput_init+1
  2249  000E2A  C0C3  F0BF         	movff	DigitalOutput_init@output+2,?_DigitalOutput_init+2
  2250  000E2E  C0C4  F0C0         	movff	DigitalOutput_init@output+3,?_DigitalOutput_init+3
  2251  000E32  0012               	return		;funcret
  2252  000E34                     __end_of_DigitalOutput_init:
  2253                           	opt callstack 0
  2254                           
  2255 ;; *************** function _zEngineDirInit *****************
  2256 ;; Defined at:
  2257 ;;		line 38 in file "engine/EngineConfigurator.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		None
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         0       0       0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    4
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_EngineConfigurator_configEngines
  2282 ;;		_DigitalOutput_init
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text18
  2287  00108E                     __ptext18:
  2288                           	opt callstack 0
  2289  00108E                     _zEngineDirInit:
  2290                           	opt callstack 23
  2291  00108E                     
  2292                           ;engine/EngineConfigurator.c: 39:     TRISB2 = 0;
  2293  00108E  9493               	bcf	3987,2,c	;volatile
  2294  001090  0012               	return		;funcret
  2295  001092                     __end_of_zEngineDirInit:
  2296                           	opt callstack 0
  2297                           
  2298 ;; *************** function _yEngineDirInit *****************
  2299 ;; Defined at:
  2300 ;;		line 34 in file "engine/EngineConfigurator.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		None
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2314 ;;      Params:         0       0       0       0       0       0       0
  2315 ;;      Locals:         0       0       0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0
  2317 ;;      Totals:         0       0       0       0       0       0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    4
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_EngineConfigurator_configEngines
  2325 ;;		_DigitalOutput_init
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text19
  2330  001092                     __ptext19:
  2331                           	opt callstack 0
  2332  001092                     _yEngineDirInit:
  2333                           	opt callstack 23
  2334  001092                     
  2335                           ;engine/EngineConfigurator.c: 35:     TRISB1 = 0;
  2336  001092  9293               	bcf	3987,1,c	;volatile
  2337  001094  0012               	return		;funcret
  2338  001096                     __end_of_yEngineDirInit:
  2339                           	opt callstack 0
  2340                           
  2341 ;; *************** function _xEngineDirInit *****************
  2342 ;; Defined at:
  2343 ;;		line 30 in file "engine/EngineConfigurator.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		None
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2357 ;;      Params:         0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    4
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_EngineConfigurator_configEngines
  2368 ;;		_DigitalOutput_init
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text20
  2373  001096                     __ptext20:
  2374                           	opt callstack 0
  2375  001096                     _xEngineDirInit:
  2376                           	opt callstack 23
  2377  001096                     
  2378                           ;engine/EngineConfigurator.c: 31:     TRISB0 = 0;
  2379  001096  9093               	bcf	3987,0,c	;volatile
  2380  001098  0012               	return		;funcret
  2381  00109A                     __end_of_xEngineDirInit:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _yEngineMotionInit *****************
  2385 ;; Defined at:
  2386 ;;		line 8 in file "engine/EngineConfigurator.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		None
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2400 ;;      Params:         0       0       0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    4
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_EngineConfigurator_configEngines
  2411 ;;		_DigitalOutput_init
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text21
  2416  00109A                     __ptext21:
  2417                           	opt callstack 0
  2418  00109A                     _yEngineMotionInit:
  2419                           	opt callstack 23
  2420  00109A                     
  2421                           ;engine/EngineConfigurator.c: 9:     TRISC1 = 0;
  2422  00109A  9294               	bcf	3988,1,c	;volatile
  2423  00109C  0012               	return		;funcret
  2424  00109E                     __end_of_yEngineMotionInit:
  2425                           	opt callstack 0
  2426                           
  2427 ;; *************** function _xEngineMotionInit *****************
  2428 ;; Defined at:
  2429 ;;		line 3 in file "engine/EngineConfigurator.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		None
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2443 ;;      Params:         0       0       0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    4
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_EngineConfigurator_configEngines
  2454 ;;		_DigitalOutput_init
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text22
  2459  00109E                     __ptext22:
  2460                           	opt callstack 0
  2461  00109E                     _xEngineMotionInit:
  2462                           	opt callstack 23
  2463  00109E                     
  2464                           ;engine/EngineConfigurator.c: 4:     TRISC0 = 0;
  2465  00109E  9094               	bcf	3988,0,c	;volatile
  2466  0010A0  0012               	return		;funcret
  2467  0010A2                     __end_of_xEngineMotionInit:
  2468                           	opt callstack 0
  2469                           
  2470 ;; *************** function _blueLedInit *****************
  2471 ;; Defined at:
  2472 ;;		line 29 in file "application/../led/LedConfigurator.h"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		None
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2486 ;;      Params:         0       0       0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0
  2489 ;;      Totals:         0       0       0       0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    4
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_LedConfigurator_config
  2497 ;;		_DigitalOutput_init
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text23
  2502  0010A2                     __ptext23:
  2503                           	opt callstack 0
  2504  0010A2                     _blueLedInit:
  2505                           	opt callstack 23
  2506  0010A2                     
  2507                           ;application/../led/LedConfigurator.h: 30:         TRISC3 = 0;
  2508  0010A2  9694               	bcf	3988,3,c	;volatile
  2509  0010A4  0012               	return		;funcret
  2510  0010A6                     __end_of_blueLedInit:
  2511                           	opt callstack 0
  2512                           
  2513 ;; *************** function _yellowLedInit *****************
  2514 ;; Defined at:
  2515 ;;		line 25 in file "application/../led/LedConfigurator.h"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		None
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2529 ;;      Params:         0       0       0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0
  2532 ;;      Totals:         0       0       0       0       0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    4
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_LedConfigurator_config
  2540 ;;		_DigitalOutput_init
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text24
  2545  0010A6                     __ptext24:
  2546                           	opt callstack 0
  2547  0010A6                     _yellowLedInit:
  2548                           	opt callstack 23
  2549  0010A6                     
  2550                           ;application/../led/LedConfigurator.h: 26:         TRISD0 = 0;
  2551  0010A6  9095               	bcf	3989,0,c	;volatile
  2552  0010A8  0012               	return		;funcret
  2553  0010AA                     __end_of_yellowLedInit:
  2554                           	opt callstack 0
  2555                           
  2556 ;; *************** function _redLedInit *****************
  2557 ;; Defined at:
  2558 ;;		line 20 in file "application/../led/LedConfigurator.h"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		None
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2572 ;;      Params:         0       0       0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    4
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_LedConfigurator_config
  2583 ;;		_DigitalOutput_init
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text25
  2588  0010AA                     __ptext25:
  2589                           	opt callstack 0
  2590  0010AA                     _redLedInit:
  2591                           	opt callstack 23
  2592  0010AA                     
  2593                           ;application/../led/LedConfigurator.h: 21:         TRISD1 = 0;
  2594  0010AA  9295               	bcf	3989,1,c	;volatile
  2595  0010AC  0012               	return		;funcret
  2596  0010AE                     __end_of_redLedInit:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _zEngineMotionInit *****************
  2600 ;; Defined at:
  2601 ;;		line 13 in file "engine/EngineConfigurator.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		None
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2615 ;;      Params:         0       0       0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0
  2618 ;;      Totals:         0       0       0       0       0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    4
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_EngineConfigurator_configEngines
  2626 ;;		_DigitalOutput_init
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text26
  2631  0010AE                     __ptext26:
  2632                           	opt callstack 0
  2633  0010AE                     _zEngineMotionInit:
  2634                           	opt callstack 23
  2635  0010AE                     
  2636                           ;engine/EngineConfigurator.c: 14:     TRISC2 = 0;
  2637  0010AE  9494               	bcf	3988,2,c	;volatile
  2638  0010B0  0012               	return		;funcret
  2639  0010B2                     __end_of_zEngineMotionInit:
  2640                           	opt callstack 0
  2641                           
  2642 ;; *************** function _Button_init *****************
  2643 ;; Defined at:
  2644 ;;		line 9 in file "button/Button.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  input           2    0[BANK0 ] PTR struct DigitalInput
  2647 ;;		 -> button1Input(2), 
  2648 ;;  onPressed       2    2[BANK0 ] PTR FTN()void 
  2649 ;;		 -> Absolute function(2), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  buton           4    4[BANK0 ] struct Button
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  4    0[BANK0 ] struct Button
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2661 ;;      Params:         0       4       0       0       0       0       0
  2662 ;;      Locals:         0       4       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0
  2664 ;;      Totals:         0       8       0       0       0       0       0
  2665 ;;Total ram usage:        8 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    4
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_Application_init
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text27
  2676  000F88                     __ptext27:
  2677                           	opt callstack 0
  2678  000F88                     _Button_init:
  2679                           	opt callstack 25
  2680  000F88                     
  2681                           ;button/Button.c: 10:     Button buton;;button/Button.c: 11:     buton.input = input;
  2682  000F88  C0BD  F0C1         	movff	Button_init@input,Button_init@buton
  2683  000F8C  C0BE  F0C2         	movff	Button_init@input+1,Button_init@buton+1
  2684                           
  2685                           ;button/Button.c: 12:     buton.onPressed = onPressed;
  2686  000F90  C0BF  F0C3         	movff	Button_init@onPressed,Button_init@buton+2
  2687  000F94  C0C0  F0C4         	movff	Button_init@onPressed+1,Button_init@buton+3
  2688  000F98                     
  2689                           ;button/Button.c: 13:     return buton;
  2690  000F98  C0C1  F0BD         	movff	Button_init@buton,?_Button_init
  2691  000F9C  C0C2  F0BE         	movff	Button_init@buton+1,?_Button_init+1
  2692  000FA0  C0C3  F0BF         	movff	Button_init@buton+2,?_Button_init+2
  2693  000FA4  C0C4  F0C0         	movff	Button_init@buton+3,?_Button_init+3
  2694  000FA8  0012               	return		;funcret
  2695  000FAA                     __end_of_Button_init:
  2696                           	opt callstack 0
  2697                           
  2698 ;; *************** function _ButtonConfigurator_config *****************
  2699 ;; Defined at:
  2700 ;;		line 11 in file "button/ButtonConfigurator.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2714 ;;      Params:         0       0       0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    6
  2721 ;; This function calls:
  2722 ;;		_DigitalInput_init
  2723 ;; This function is called by:
  2724 ;;		_Application_init
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text28
  2729  000FAA                     __ptext28:
  2730                           	opt callstack 0
  2731  000FAA                     _ButtonConfigurator_config:
  2732                           	opt callstack 23
  2733  000FAA                     
  2734                           ;button/ButtonConfigurator.c: 12:         button1Input = DigitalInput_init(button1Init,b
      +                          utton1Read);
  2735  000FAA  0EB2               	movlw	low _button1Init
  2736  000FAC  0100               	movlb	0	; () banked
  2737  000FAE  6FBD               	movwf	DigitalInput_init@init& (0+255),b
  2738  000FB0  0E10               	movlw	high _button1Init
  2739  000FB2  6FBE               	movwf	(DigitalInput_init@init+1)& (0+255),b
  2740  000FB4  0E00               	movlw	0
  2741  000FB6  6FBF               	movwf	DigitalInput_init@read& (0+255),b
  2742  000FB8  0E00               	movlw	0
  2743  000FBA  6FC0               	movwf	(DigitalInput_init@read+1)& (0+255),b
  2744  000FBC  EC35  F007         	call	_DigitalInput_init	;wreg free
  2745  000FC0  C0BD  F05A         	movff	?_DigitalInput_init,_button1Input
  2746  000FC4  C0BE  F05B         	movff	?_DigitalInput_init+1,_button1Input+1
  2747  000FC8  0012               	return		;funcret
  2748  000FCA                     __end_of_ButtonConfigurator_config:
  2749                           	opt callstack 0
  2750                           
  2751 ;; *************** function _DigitalInput_init *****************
  2752 ;; Defined at:
  2753 ;;		line 3 in file "io/digitalinput/DigitalInput.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  init            2    0[BANK0 ] PTR FTN()void 
  2756 ;;		 -> button1Init(1), 
  2757 ;;  read            2    2[BANK0 ] PTR FTN()int 
  2758 ;;		 -> button1Read(2), 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  buton           2    6[BANK0 ] struct DigitalInput
  2761 ;;  val             2    0        int 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2    0[BANK0 ] struct DigitalInput
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2771 ;;      Params:         0       4       0       0       0       0       0
  2772 ;;      Locals:         0       4       0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0
  2774 ;;      Totals:         0       8       0       0       0       0       0
  2775 ;;Total ram usage:        8 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    5
  2778 ;; This function calls:
  2779 ;;		_button1Init
  2780 ;; This function is called by:
  2781 ;;		_ButtonConfigurator_config
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text29
  2786  000E6A                     __ptext29:
  2787                           	opt callstack 0
  2788  000E6A                     _DigitalInput_init:
  2789                           	opt callstack 23
  2790  000E6A                     
  2791                           ;io/digitalinput/DigitalInput.c: 4:     DigitalInput buton;;io/digitalinput/DigitalInput
      +                          .c: 5:     buton.read = read;
  2792  000E6A  C0BF  F0C3         	movff	DigitalInput_init@read,DigitalInput_init@buton
  2793  000E6E  C0C0  F0C4         	movff	DigitalInput_init@read+1,DigitalInput_init@buton+1
  2794  000E72                     
  2795                           ;io/digitalinput/DigitalInput.c: 6:     (*init)();
  2796  000E72  D802               	call	u1948
  2797  000E74  EF47  F007         	goto	u1949
  2798  000E78                     u1948:
  2799  000E78  0005               	push	
  2800  000E7A  0100               	movlb	0	; () banked
  2801  000E7C  6EFA               	movwf	pclath,c
  2802  000E7E  51BD               	movf	DigitalInput_init@init& (0+255),w,b
  2803  000E80  6EFD               	movwf	tosl,c
  2804  000E82  51BE               	movf	(DigitalInput_init@init+1)& (0+255),w,b
  2805  000E84  6EFE               	movwf	tosh,c
  2806  000E86  50F8               	movf	tblptru,w,c
  2807  000E88  6EFF               	movwf	tosu,c
  2808  000E8A  50FA               	movf	pclath,w,c
  2809  000E8C  0012               	return		;indir
  2810  000E8E                     u1949:
  2811  000E8E                     
  2812                           ;io/digitalinput/DigitalInput.c: 8:     return buton;
  2813  000E8E  C0C3  F0BD         	movff	DigitalInput_init@buton,?_DigitalInput_init
  2814  000E92  C0C4  F0BE         	movff	DigitalInput_init@buton+1,?_DigitalInput_init+1
  2815  000E96  0012               	return		;funcret
  2816  000E98                     __end_of_DigitalInput_init:
  2817                           	opt callstack 0
  2818                           
  2819 ;; *************** function _button1Init *****************
  2820 ;; Defined at:
  2821 ;;		line 3 in file "button/ButtonConfigurator.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		None
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2835 ;;      Params:         0       0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    4
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_ButtonConfigurator_config
  2846 ;;		_DigitalInput_init
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text30
  2851  0010B2                     __ptext30:
  2852                           	opt callstack 0
  2853  0010B2                     _button1Init:
  2854                           	opt callstack 23
  2855  0010B2                     
  2856                           ;button/ButtonConfigurator.c: 4:     TRISD2 = 1;
  2857  0010B2  8495               	bsf	3989,2,c	;volatile
  2858  0010B4  0012               	return		;funcret
  2859  0010B6                     __end_of_button1Init:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _ISR *****************
  2863 ;; Defined at:
  2864 ;;		line 137 in file "application/Application.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  tmp            20   27[COMRAM] unsigned char [20]
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2878 ;;      Params:         0       0       0       0       0       0       0
  2879 ;;      Locals:        20       0       0       0       0       0       0
  2880 ;;      Temps:         12       0       0       0       0       0       0
  2881 ;;      Totals:        32       0       0       0       0       0       0
  2882 ;;Total ram usage:       32 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    3
  2885 ;; This function calls:
  2886 ;;		_USARTReadString
  2887 ;;		_softUSARTWriteString
  2888 ;;		i2_Led_open
  2889 ;;		i2_USARTWriteLine
  2890 ;; This function is called by:
  2891 ;;		Interrupt level 2
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	intcode
  2896  000008                     __pintcode:
  2897                           	opt callstack 0
  2898  000008                     _ISR:
  2899                           	opt callstack 23
  2900                           
  2901                           ;incstack = 0
  2902  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2903  00000A  EDE1  F003         	call	int_func,f	;refresh shadow registers
  2904                           
  2905                           	psect	intcode_body
  2906  0007C2                     __pintcode_body:
  2907                           	opt callstack 23
  2908  0007C2                     int_func:
  2909                           	opt callstack 23
  2910  0007C2  0006               	pop		; remove dummy address from shadow register refresh
  2911  0007C4  CFFA F010          	movff	pclath,??_ISR
  2912  0007C8  CFFB F011          	movff	pclatu,??_ISR+1
  2913  0007CC  CFE9 F012          	movff	fsr0l,??_ISR+2
  2914  0007D0  CFEA F013          	movff	fsr0h,??_ISR+3
  2915  0007D4  CFE1 F014          	movff	fsr1l,??_ISR+4
  2916  0007D8  CFE2 F015          	movff	fsr1h,??_ISR+5
  2917  0007DC  CFD9 F016          	movff	fsr2l,??_ISR+6
  2918  0007E0  CFDA F017          	movff	fsr2h,??_ISR+7
  2919  0007E4  CFF6 F018          	movff	tblptrl,??_ISR+8
  2920  0007E8  CFF7 F019          	movff	tblptrh,??_ISR+9
  2921  0007EC  CFF8 F01A          	movff	tblptru,??_ISR+10
  2922  0007F0  CFF5 F01B          	movff	tablat,??_ISR+11
  2923  0007F4                     
  2924                           ;application/Application.c: 139:     if (usart.isDataReady)
  2925  0007F4  0100               	movlb	0	; () banked
  2926  0007F6  51A1               	movf	_usart& (0+255),w,b
  2927  0007F8  11A2               	iorwf	(_usart+1)& (0+255),w,b
  2928  0007FA  B4D8               	btfsc	status,2,c
  2929  0007FC  EF02  F004         	goto	i2u199_41
  2930  000800  EF04  F004         	goto	i2u199_40
  2931  000804                     i2u199_41:
  2932  000804  EF43  F004         	goto	i2l122
  2933  000808                     i2u199_40:
  2934  000808                     
  2935                           ; BSR set to: 0
  2936                           ;application/Application.c: 140:     {;application/Application.c: 142:         char tmp[
      +                          20] = "";
  2937  000808  EE20  F080         	lfsr	2,ISR@F3567
  2938  00080C  EE10  F01C         	lfsr	1,ISR@tmp
  2939  000810  0E13               	movlw	19
  2940  000812                     i2u200_41:
  2941  000812  CFDB FFE3          	movff	plusw2,plusw1
  2942  000816  06E8               	decf	wreg,f,c
  2943  000818  E2FC               	bc	i2u200_41
  2944  00081A                     
  2945                           ; BSR set to: 0
  2946                           ;application/Application.c: 143:         usart.readString(tmp, 20);
  2947  00081A  0E1C               	movlw	low ISR@tmp
  2948  00081C  6E04               	movwf	USARTReadString@buf^0,c
  2949  00081E  0E00               	movlw	high ISR@tmp
  2950  000820  6E05               	movwf	(USARTReadString@buf+1)^0,c
  2951  000822  0E00               	movlw	0
  2952  000824  6E07               	movwf	(USARTReadString@max_length+1)^0,c
  2953  000826  0E14               	movlw	20
  2954  000828  6E06               	movwf	USARTReadString@max_length^0,c
  2955  00082A  EE20  F0A5         	lfsr	2,_usart+4
  2956  00082E  D802               	call	i2u201_48
  2957  000830  EF24  F004         	goto	i2u201_49
  2958  000834                     i2u201_48:
  2959  000834  0005               	push	
  2960  000836  6EFA               	movwf	pclath,c
  2961  000838  50DE               	movf	postinc2,w,c
  2962  00083A  6EFD               	movwf	tosl,c
  2963  00083C  50DE               	movf	postinc2,w,c
  2964  00083E  6EFE               	movwf	tosh,c
  2965  000840  50F8               	movf	tblptru,w,c
  2966  000842  6EFF               	movwf	tosu,c
  2967  000844  50FA               	movf	pclath,w,c
  2968  000846  0012               	return		;indir
  2969  000848                     i2u201_49:
  2970  000848                     
  2971                           ;application/Application.c: 144:         usart.writeLine(tmp);
  2972  000848  0E1C               	movlw	low ISR@tmp
  2973  00084A  6E03               	movwf	i2USARTWriteLine@ln^0,c
  2974  00084C  0E00               	movlw	high ISR@tmp
  2975  00084E  6E04               	movwf	(i2USARTWriteLine@ln+1)^0,c
  2976  000850  EE20  F0AB         	lfsr	2,_usart+10
  2977  000854  D802               	call	i2u202_48
  2978  000856  EF37  F004         	goto	i2u202_49
  2979  00085A                     i2u202_48:
  2980  00085A  0005               	push	
  2981  00085C  6EFA               	movwf	pclath,c
  2982  00085E  50DE               	movf	postinc2,w,c
  2983  000860  6EFD               	movwf	tosl,c
  2984  000862  50DE               	movf	postinc2,w,c
  2985  000864  6EFE               	movwf	tosh,c
  2986  000866  50F8               	movf	tblptru,w,c
  2987  000868  6EFF               	movwf	tosu,c
  2988  00086A  50FA               	movf	pclath,w,c
  2989  00086C  0012               	return		;indir
  2990  00086E                     i2u202_49:
  2991  00086E                     
  2992                           ;application/Application.c: 145:         softUSARTWriteString(tmp);
  2993  00086E  0E1C               	movlw	low ISR@tmp
  2994  000870  6E03               	movwf	softUSARTWriteString@str^0,c
  2995  000872  0E00               	movlw	high ISR@tmp
  2996  000874  6E04               	movwf	(softUSARTWriteString@str+1)^0,c
  2997  000876  EC1A  F007         	call	_softUSARTWriteString	;wreg free
  2998  00087A                     
  2999                           ;application/Application.c: 147:         Led_open(&yellowLed);
  3000  00087A  0E36               	movlw	low _yellowLed
  3001  00087C  6E03               	movwf	i2Led_open@led^0,c
  3002  00087E  0E00               	movlw	high _yellowLed
  3003  000880  6E04               	movwf	(i2Led_open@led+1)^0,c
  3004  000882  EC78  F007         	call	i2_Led_open	;wreg free
  3005  000886                     i2l122:
  3006  000886  C01B  FFF5         	movff	??_ISR+11,tablat
  3007  00088A  C01A  FFF8         	movff	??_ISR+10,tblptru
  3008  00088E  C019  FFF7         	movff	??_ISR+9,tblptrh
  3009  000892  C018  FFF6         	movff	??_ISR+8,tblptrl
  3010  000896  C017  FFDA         	movff	??_ISR+7,fsr2h
  3011  00089A  C016  FFD9         	movff	??_ISR+6,fsr2l
  3012  00089E  C015  FFE2         	movff	??_ISR+5,fsr1h
  3013  0008A2  C014  FFE1         	movff	??_ISR+4,fsr1l
  3014  0008A6  C013  FFEA         	movff	??_ISR+3,fsr0h
  3015  0008AA  C012  FFE9         	movff	??_ISR+2,fsr0l
  3016  0008AE  C011  FFFB         	movff	??_ISR+1,pclatu
  3017  0008B2  C010  FFFA         	movff	??_ISR,pclath
  3018  0008B6  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3019  0008B8  0011               	retfie		f
  3020  0008BA                     __end_of_ISR:
  3021                           	opt callstack 0
  3022                           
  3023 ;; *************** function i2_USARTWriteLine *****************
  3024 ;; Defined at:
  3025 ;;		line 93 in file "usart/UsartFunctions.h"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  ln              2    2[COMRAM] PTR const unsigned char 
  3028 ;;		 -> ISR@tmp(20), STR_2(12), STR_1(10), 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3040 ;;      Params:         2       0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0
  3043 ;;      Totals:         2       0       0       0       0       0       0
  3044 ;;Total ram usage:        2 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    1
  3047 ;; This function calls:
  3048 ;;		i2_USARTWriteString
  3049 ;; This function is called by:
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text32
  3054  001000                     __ptext32:
  3055                           	opt callstack 0
  3056  001000                     i2_USARTWriteLine:
  3057                           	opt callstack 24
  3058  001000                     
  3059                           ;usart/UsartFunctions.h: 94:     USARTWriteString(ln);
  3060  001000  C003  F001         	movff	i2USARTWriteLine@ln,i2USARTWriteString@str
  3061  001004  C004  F002         	movff	i2USARTWriteLine@ln+1,i2USARTWriteString@str+1
  3062  001008  EC89  F006         	call	i2_USARTWriteString	;wreg free
  3063                           
  3064                           ;usart/UsartFunctions.h: 95:     USARTWriteString("\r\n");
  3065  00100C  0EB0               	movlw	low STR_3
  3066  00100E  6E01               	movwf	i2USARTWriteString@str^0,c
  3067  001010  0E06               	movlw	high STR_3
  3068  001012  6E02               	movwf	(i2USARTWriteString@str+1)^0,c
  3069  001014  EC89  F006         	call	i2_USARTWriteString	;wreg free
  3070  001018  0012               	return		;funcret
  3071  00101A                     __end_ofi2_USARTWriteLine:
  3072                           	opt callstack 0
  3073                           
  3074 ;; *************** function i2_USARTWriteString *****************
  3075 ;; Defined at:
  3076 ;;		line 71 in file "usart/UsartFunctions.h"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  str             2    0[COMRAM] PTR const unsigned char 
  3079 ;;		 -> STR_3(3), ISR@tmp(20), STR_2(12), STR_1(10), 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3091 ;;      Params:         2       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0
  3094 ;;      Totals:         2       0       0       0       0       0       0
  3095 ;;Total ram usage:        2 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		i2_USARTWriteLine
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text33
  3105  000D12                     __ptext33:
  3106                           	opt callstack 0
  3107  000D12                     i2_USARTWriteString:
  3108                           	opt callstack 24
  3109  000D12                     
  3110                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  3111  000D12  EFA5  F006         	goto	i2l2395
  3112  000D16                     i2l442:
  3113  000D16  A89E               	btfss	3998,4,c	;volatile
  3114  000D18  EF90  F006         	goto	i2u121_41
  3115  000D1C  EF92  F006         	goto	i2u121_40
  3116  000D20                     i2u121_41:
  3117  000D20  EF8B  F006         	goto	i2l442
  3118  000D24                     i2u121_40:
  3119  000D24                     
  3120                           ;usart/UsartFunctions.h: 77:         TXREG = (*str);
  3121  000D24  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  3122  000D28  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  3123  000D2C  6AF8               	clrf	tblptru,c
  3124  000D2E  0E05               	movlw	(high __ramtop+-1)
  3125  000D30  64F7               	cpfsgt	tblptrh,c
  3126  000D32  D003               	bra	i2u122_47
  3127  000D34  0008               	tblrd		*
  3128  000D36  50F5               	movf	tablat,w,c
  3129  000D38  D005               	bra	i2u122_40
  3130  000D3A                     i2u122_47:
  3131  000D3A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3132  000D3E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3133  000D42  50EF               	movf	indf0,w,c
  3134  000D44                     i2u122_40:
  3135  000D44  6EAD               	movwf	173,c	;volatile
  3136  000D46                     
  3137                           ;usart/UsartFunctions.h: 80:         str++;
  3138  000D46  4A01               	infsnz	i2USARTWriteString@str^0,f,c
  3139  000D48  2A02               	incf	(i2USARTWriteString@str+1)^0,f,c
  3140  000D4A                     i2l2395:
  3141                           
  3142                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  3143  000D4A  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  3144  000D4E  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  3145  000D52  6AF8               	clrf	tblptru,c
  3146  000D54  0E05               	movlw	(high __ramtop+-1)
  3147  000D56  64F7               	cpfsgt	tblptrh,c
  3148  000D58  D003               	bra	i2u123_47
  3149  000D5A  0008               	tblrd		*
  3150  000D5C  50F5               	movf	tablat,w,c
  3151  000D5E  D005               	bra	i2u123_40
  3152  000D60                     i2u123_47:
  3153  000D60  CFF6 FFE9          	movff	tblptrl,fsr0l
  3154  000D64  CFF7 FFEA          	movff	tblptrh,fsr0h
  3155  000D68  50EF               	movf	indf0,w,c
  3156  000D6A                     i2u123_40:
  3157  000D6A  0900               	iorlw	0
  3158  000D6C  A4D8               	btfss	status,2,c
  3159  000D6E  EFBB  F006         	goto	i2u124_41
  3160  000D72  EFBD  F006         	goto	i2u124_40
  3161  000D76                     i2u124_41:
  3162  000D76  EF8B  F006         	goto	i2l442
  3163  000D7A                     i2u124_40:
  3164  000D7A  0012               	return		;funcret
  3165  000D7C                     __end_ofi2_USARTWriteString:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function i2_Led_open *****************
  3169 ;; Defined at:
  3170 ;;		line 11 in file "led/Led.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  led             2    2[COMRAM] PTR struct Led
  3173 ;;		 -> blueLed(4), redLed(4), yellowLed(4), 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         2       0       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0
  3188 ;;      Totals:         2       0       0       0       0       0       0
  3189 ;;Total ram usage:        2 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    1
  3192 ;; This function calls:
  3193 ;;		i2_DigitalOutput_open
  3194 ;; This function is called by:
  3195 ;;		_ISR
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text34
  3200  000EF0                     __ptext34:
  3201                           	opt callstack 0
  3202  000EF0                     i2_Led_open:
  3203                           	opt callstack 24
  3204  000EF0                     
  3205                           ;led/Led.c: 12:     led->isOpen = 1;
  3206  000EF0  EE20 F002          	lfsr	2,2
  3207  000EF4  5003               	movf	i2Led_open@led^0,w,c
  3208  000EF6  26D9               	addwf	fsr2l,f,c
  3209  000EF8  5004               	movf	(i2Led_open@led+1)^0,w,c
  3210  000EFA  22DA               	addwfc	fsr2h,f,c
  3211  000EFC  0E01               	movlw	1
  3212  000EFE  6EDE               	movwf	postinc2,c
  3213  000F00  0E00               	movlw	0
  3214  000F02  6EDD               	movwf	postdec2,c
  3215  000F04                     
  3216                           ;led/Led.c: 13:     DigitalOutput_open(led->output);
  3217  000F04  C003  FFD9         	movff	i2Led_open@led,fsr2l
  3218  000F08  C004  FFDA         	movff	i2Led_open@led+1,fsr2h
  3219  000F0C  CFDE F001          	movff	postinc2,i2DigitalOutput_open@output
  3220  000F10  CFDD F002          	movff	postdec2,i2DigitalOutput_open@output+1
  3221  000F14  EC32  F008         	call	i2_DigitalOutput_open	;wreg free
  3222  000F18  0012               	return		;funcret
  3223  000F1A                     __end_ofi2_Led_open:
  3224                           	opt callstack 0
  3225                           
  3226 ;; *************** function i2_DigitalOutput_open *****************
  3227 ;; Defined at:
  3228 ;;		line 11 in file "io/digitalOutput/DigitalOutput.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  output          2    0[COMRAM] PTR struct DigitalOutput
  3231 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  3232 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), yellowLedOutput(4), 
  3233 ;;		 -> redLedOutput(4), 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         2       0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0
  3248 ;;      Totals:         2       0       0       0       0       0       0
  3249 ;;Total ram usage:        2 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		i2_Led_open
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text35
  3259  001064                     __ptext35:
  3260                           	opt callstack 0
  3261  001064                     i2_DigitalOutput_open:
  3262                           	opt callstack 24
  3263  001064                     
  3264                           ;io/digitalOutput/DigitalOutput.c: 13:     (*output->set)(output,1);
  3265  001064  EE20 F002          	lfsr	2,2
  3266  001068  5001               	movf	i2DigitalOutput_open@output^0,w,c
  3267  00106A  26D9               	addwf	fsr2l,f,c
  3268  00106C  5002               	movf	(i2DigitalOutput_open@output+1)^0,w,c
  3269  00106E  22DA               	addwfc	fsr2h,f,c
  3270  001070  0E01               	movlw	1
  3271  001072  6EDE               	movwf	postinc2,c
  3272  001074  0E00               	movlw	0
  3273  001076  6EDD               	movwf	postdec2,c
  3274  001078  0012               	return		;funcret
  3275  00107A                     __end_ofi2_DigitalOutput_open:
  3276                           	opt callstack 0
  3277                           
  3278 ;; *************** function _softUSARTWriteString *****************
  3279 ;; Defined at:
  3280 ;;		line 39 in file "softuart/softusart.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  str             2    2[COMRAM] PTR const unsigned char 
  3283 ;;		 -> ISR@tmp(20), 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3295 ;;      Params:         2       0       0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0
  3298 ;;      Totals:         2       0       0       0       0       0       0
  3299 ;;Total ram usage:        2 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    1
  3302 ;; This function calls:
  3303 ;;		_softusart_yaz
  3304 ;; This function is called by:
  3305 ;;		_ISR
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text36
  3310  000E34                     __ptext36:
  3311                           	opt callstack 0
  3312  000E34                     _softUSARTWriteString:
  3313                           	opt callstack 24
  3314  000E34                     
  3315                           ;softuart/softusart.c: 40:     while ((*str) != '\0') {
  3316  000E34  EF28  F007         	goto	i2l2439
  3317  000E38                     i2l348:
  3318  000E38  AA83               	btfss	131,5,c	;volatile
  3319  000E3A  EF21  F007         	goto	i2u128_41
  3320  000E3E  EF23  F007         	goto	i2u128_40
  3321  000E42                     i2u128_41:
  3322  000E42  EF1C  F007         	goto	i2l348
  3323  000E46                     i2u128_40:
  3324  000E46                     
  3325                           ;softuart/softusart.c: 45:         softusart_yaz(str);
  3326  000E46  5003               	movf	softUSARTWriteString@str^0,w,c
  3327  000E48  ECBE  F006         	call	_softusart_yaz
  3328  000E4C                     
  3329                           ;softuart/softusart.c: 48:         str++;
  3330  000E4C  4A03               	infsnz	softUSARTWriteString@str^0,f,c
  3331  000E4E  2A04               	incf	(softUSARTWriteString@str+1)^0,f,c
  3332  000E50                     i2l2439:
  3333                           
  3334                           ;softuart/softusart.c: 40:     while ((*str) != '\0') {
  3335  000E50  C003  FFD9         	movff	softUSARTWriteString@str,fsr2l
  3336  000E54  C004  FFDA         	movff	softUSARTWriteString@str+1,fsr2h
  3337  000E58  50DF               	movf	indf2,w,c
  3338  000E5A  A4D8               	btfss	status,2,c
  3339  000E5C  EF32  F007         	goto	i2u129_41
  3340  000E60  EF34  F007         	goto	i2u129_40
  3341  000E64                     i2u129_41:
  3342  000E64  EF1C  F007         	goto	i2l348
  3343  000E68                     i2u129_40:
  3344  000E68  0012               	return		;funcret
  3345  000E6A                     __end_of_softUSARTWriteString:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _softusart_yaz *****************
  3349 ;; Defined at:
  3350 ;;		line 53 in file "softuart/softusart.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  veri            1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  veri            1    0[COMRAM] unsigned char 
  3355 ;;  i               1    1[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3365 ;;      Params:         0       0       0       0       0       0       0
  3366 ;;      Locals:         2       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0
  3368 ;;      Totals:         2       0       0       0       0       0       0
  3369 ;;Total ram usage:        2 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_softUSARTWriteString
  3375 ;;		_putch
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text37
  3380  000D7C                     __ptext37:
  3381                           	opt callstack 0
  3382  000D7C                     _softusart_yaz:
  3383                           	opt callstack 24
  3384                           
  3385                           ;incstack = 0
  3386                           ;softusart_yaz@veri stored from wreg
  3387  000D7C  6E01               	movwf	softusart_yaz@veri^0,c
  3388  000D7E                     
  3389                           ;softuart/softusart.c: 53: void softusart_yaz(char veri);softuart/softusart.c: 54: {;sof
      +                          tuart/softusart.c: 55:  char i;;softuart/softusart.c: 56:  LATDbits.LD6=0;
  3390  000D7E  9C8C               	bcf	140,6,c	;volatile
  3391  000D80                     
  3392                           ;softuart/softusart.c: 57:  _delay((8000000/4) / 9600 -11);
  3393  000D80  0E41               	movlw	65
  3394  000D82                     i2u227_47:
  3395  000D82  2EE8               	decfsz	wreg,f,c
  3396  000D84  D7FE               	bra	i2u227_47
  3397  000D86  D000               	nop2	
  3398  000D88                     
  3399                           ;softuart/softusart.c: 58:  for(i=8;i>0;i--)
  3400  000D88  0E08               	movlw	8
  3401  000D8A  6E02               	movwf	softusart_yaz@i^0,c
  3402  000D8C                     i2l2365:
  3403                           
  3404                           ;softuart/softusart.c: 59:  {;softuart/softusart.c: 60:   veri=veri>>1;
  3405  000D8C  90D8               	bcf	status,0,c
  3406  000D8E  3001               	rrcf	softusart_yaz@veri^0,w,c
  3407  000D90  6E01               	movwf	softusart_yaz@veri^0,c
  3408  000D92                     
  3409                           ;softuart/softusart.c: 61:   LATDbits.LD6=CARRY;
  3410  000D92  A0D8               	btfss	status,0,c	;volatile
  3411  000D94  D002               	bra	i2u117_45
  3412  000D96  8C8C               	bsf	140,6,c	;volatile
  3413  000D98  D001               	bra	i2u117_47
  3414  000D9A                     i2u117_45:
  3415  000D9A  9C8C               	bcf	140,6,c	;volatile
  3416  000D9C                     i2u117_47:
  3417  000D9C                     
  3418                           ;softuart/softusart.c: 62:   _delay((8000000/4) / 9600 -16);
  3419  000D9C  0E40               	movlw	64
  3420  000D9E                     i2u228_47:
  3421  000D9E  2EE8               	decfsz	wreg,f,c
  3422  000DA0  D7FE               	bra	i2u228_47
  3423                           
  3424                           ;softuart/softusart.c: 63:  }
  3425  000DA2  0602               	decf	softusart_yaz@i^0,f,c
  3426  000DA4  5002               	movf	softusart_yaz@i^0,w,c
  3427  000DA6  A4D8               	btfss	status,2,c
  3428  000DA8  EFD8  F006         	goto	i2u118_41
  3429  000DAC  EFDA  F006         	goto	i2u118_40
  3430  000DB0                     i2u118_41:
  3431  000DB0  EFC6  F006         	goto	i2l2365
  3432  000DB4                     i2u118_40:
  3433  000DB4                     
  3434                           ;softuart/softusart.c: 64:  LATDbits.LD6=1;
  3435  000DB4  8C8C               	bsf	140,6,c	;volatile
  3436  000DB6                     
  3437                           ;softuart/softusart.c: 65:  _delay((8000000/4) / 9600);
  3438  000DB6  0E45               	movlw	69
  3439  000DB8                     i2u229_47:
  3440  000DB8  2EE8               	decfsz	wreg,f,c
  3441  000DBA  D7FE               	bra	i2u229_47
  3442  000DBC  F000               	nop	
  3443  000DBE  0012               	return		;funcret
  3444  000DC0                     __end_of_softusart_yaz:
  3445                           	opt callstack 0
  3446                           
  3447 ;; *************** function _USARTReadString *****************
  3448 ;; Defined at:
  3449 ;;		line 40 in file "usart/UsartFunctions.h"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  buf             2    3[COMRAM] PTR unsigned char 
  3452 ;;		 -> ISR@tmp(20), 
  3453 ;;  max_length      2    5[COMRAM] int 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  i               2   12[COMRAM] int 
  3456 ;;  tmp             1   14[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2    3[COMRAM] int 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3466 ;;      Params:         4       0       0       0       0       0       0
  3467 ;;      Locals:         3       0       0       0       0       0       0
  3468 ;;      Temps:          5       0       0       0       0       0       0
  3469 ;;      Totals:        12       0       0       0       0       0       0
  3470 ;;Total ram usage:       12 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    2
  3473 ;; This function calls:
  3474 ;;		_USARTReadChar
  3475 ;; This function is called by:
  3476 ;;		_setupFunctions
  3477 ;;		_ISR
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text38
  3482  000A4E                     __ptext38:
  3483                           	opt callstack 0
  3484  000A4E                     _USARTReadString:
  3485                           	opt callstack 23
  3486  000A4E                     
  3487                           ;usart/UsartFunctions.h: 41:     int i = 0;
  3488  000A4E  0E00               	movlw	0
  3489  000A50  6E0E               	movwf	(USARTReadString@i+1)^0,c
  3490  000A52  0E00               	movlw	0
  3491  000A54  6E0D               	movwf	USARTReadString@i^0,c
  3492                           
  3493                           ;usart/UsartFunctions.h: 43:     for (i = 0; i < max_length - 1; i++) {
  3494  000A56  0E00               	movlw	0
  3495  000A58  6E0E               	movwf	(USARTReadString@i+1)^0,c
  3496  000A5A  0E00               	movlw	0
  3497  000A5C  6E0D               	movwf	USARTReadString@i^0,c
  3498  000A5E  EF5A  F005         	goto	i2l2463
  3499  000A62                     i2l2451:
  3500                           
  3501                           ;usart/UsartFunctions.h: 44:         tmp = USARTReadChar();
  3502  000A62  EC0D  F008         	call	_USARTReadChar	;wreg free
  3503  000A66  6E0F               	movwf	USARTReadString@tmp^0,c
  3504  000A68                     
  3505                           ;usart/UsartFunctions.h: 46:         if (tmp == '\0' || tmp == '\n' || tmp == '\r') {
  3506  000A68  500F               	movf	USARTReadString@tmp^0,w,c
  3507  000A6A  B4D8               	btfsc	status,2,c
  3508  000A6C  EF3A  F005         	goto	i2u131_41
  3509  000A70  EF3C  F005         	goto	i2u131_40
  3510  000A74                     i2u131_41:
  3511  000A74  EF75  F005         	goto	i2l2465
  3512  000A78                     i2u131_40:
  3513  000A78  0E0A               	movlw	10
  3514  000A7A  180F               	xorwf	USARTReadString@tmp^0,w,c
  3515  000A7C  B4D8               	btfsc	status,2,c
  3516  000A7E  EF43  F005         	goto	i2u132_41
  3517  000A82  EF45  F005         	goto	i2u132_40
  3518  000A86                     i2u132_41:
  3519  000A86  EF75  F005         	goto	i2l2465
  3520  000A8A                     i2u132_40:
  3521  000A8A  0E0D               	movlw	13
  3522  000A8C  180F               	xorwf	USARTReadString@tmp^0,w,c
  3523  000A8E  A4D8               	btfss	status,2,c
  3524  000A90  EF4C  F005         	goto	i2u133_41
  3525  000A94  EF4E  F005         	goto	i2u133_40
  3526  000A98                     i2u133_41:
  3527  000A98  EF50  F005         	goto	i2l2459
  3528  000A9C                     i2u133_40:
  3529  000A9C  EF75  F005         	goto	i2l2465
  3530  000AA0                     i2l2459:
  3531                           
  3532                           ;usart/UsartFunctions.h: 49:         buf[i] = tmp;
  3533  000AA0  500D               	movf	USARTReadString@i^0,w,c
  3534  000AA2  2404               	addwf	USARTReadString@buf^0,w,c
  3535  000AA4  6ED9               	movwf	fsr2l,c
  3536  000AA6  500E               	movf	(USARTReadString@i+1)^0,w,c
  3537  000AA8  2005               	addwfc	(USARTReadString@buf+1)^0,w,c
  3538  000AAA  6EDA               	movwf	fsr2h,c
  3539  000AAC  C00F  FFDF         	movff	USARTReadString@tmp,indf2
  3540  000AB0                     
  3541                           ;usart/UsartFunctions.h: 50:     }
  3542  000AB0  4A0D               	infsnz	USARTReadString@i^0,f,c
  3543  000AB2  2A0E               	incf	(USARTReadString@i+1)^0,f,c
  3544  000AB4                     i2l2463:
  3545  000AB4  0EFF               	movlw	255
  3546  000AB6  6E08               	movwf	??_USARTReadString^0,c
  3547  000AB8  0EFF               	movlw	255
  3548  000ABA  6E09               	movwf	(??_USARTReadString+1)^0,c
  3549  000ABC  C006  F00A         	movff	USARTReadString@max_length,??_USARTReadString+2
  3550  000AC0  C007  F00B         	movff	USARTReadString@max_length+1,??_USARTReadString+3
  3551  000AC4  5008               	movf	??_USARTReadString^0,w,c
  3552  000AC6  260A               	addwf	(??_USARTReadString+2)^0,f,c
  3553  000AC8  5009               	movf	(??_USARTReadString+1)^0,w,c
  3554  000ACA  220B               	addwfc	(??_USARTReadString+3)^0,f,c
  3555  000ACC  500A               	movf	(??_USARTReadString+2)^0,w,c
  3556  000ACE  5C0D               	subwf	USARTReadString@i^0,w,c
  3557  000AD0  500E               	movf	(USARTReadString@i+1)^0,w,c
  3558  000AD2  0A80               	xorlw	128
  3559  000AD4  6E0C               	movwf	(??_USARTReadString+4)^0,c
  3560  000AD6  500B               	movf	(??_USARTReadString+3)^0,w,c
  3561  000AD8  0A80               	xorlw	128
  3562  000ADA  580C               	subwfb	(??_USARTReadString+4)^0,w,c
  3563  000ADC  A0D8               	btfss	status,0,c
  3564  000ADE  EF73  F005         	goto	i2u134_41
  3565  000AE2  EF75  F005         	goto	i2u134_40
  3566  000AE6                     i2u134_41:
  3567  000AE6  EF31  F005         	goto	i2l2451
  3568  000AEA                     i2u134_40:
  3569  000AEA                     i2l2465:
  3570                           
  3571                           ;usart/UsartFunctions.h: 52:     buf[i + 1] = '\0';
  3572  000AEA  500D               	movf	USARTReadString@i^0,w,c
  3573  000AEC  2404               	addwf	USARTReadString@buf^0,w,c
  3574  000AEE  6E08               	movwf	??_USARTReadString^0,c
  3575  000AF0  500E               	movf	(USARTReadString@i+1)^0,w,c
  3576  000AF2  2005               	addwfc	(USARTReadString@buf+1)^0,w,c
  3577  000AF4  6E09               	movwf	(??_USARTReadString+1)^0,c
  3578  000AF6  0E01               	movlw	1
  3579  000AF8  2408               	addwf	??_USARTReadString^0,w,c
  3580  000AFA  6ED9               	movwf	fsr2l,c
  3581  000AFC  0E00               	movlw	0
  3582  000AFE  2009               	addwfc	(??_USARTReadString+1)^0,w,c
  3583  000B00  6EDA               	movwf	fsr2h,c
  3584  000B02  0E00               	movlw	0
  3585  000B04  6EDF               	movwf	indf2,c
  3586  000B06  0012               	return		;funcret
  3587  000B08                     __end_of_USARTReadString:
  3588                           	opt callstack 0
  3589                           
  3590 ;; *************** function _USARTReadChar *****************
  3591 ;; Defined at:
  3592 ;;		line 35 in file "usart/UsartFunctions.h"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      unsigned char 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3606 ;;      Params:         0       0       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    1
  3613 ;; This function calls:
  3614 ;;		_USARTDataReady
  3615 ;; This function is called by:
  3616 ;;		_USARTReadString
  3617 ;;		_setupFunctions
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text39
  3622  00101A                     __ptext39:
  3623                           	opt callstack 0
  3624  00101A                     _USARTReadChar:
  3625                           	opt callstack 23
  3626  00101A                     i2l2377:
  3627  00101A  ECE5  F007         	call	_USARTDataReady	;wreg free
  3628  00101E  5001               	movf	?_USARTDataReady^0,w,c
  3629  001020  1002               	iorwf	(?_USARTDataReady+1)^0,w,c
  3630  001022  B4D8               	btfsc	status,2,c
  3631  001024  EF16  F008         	goto	i2u119_41
  3632  001028  EF18  F008         	goto	i2u119_40
  3633  00102C                     i2u119_41:
  3634  00102C  EF0D  F008         	goto	i2l2377
  3635  001030                     i2u119_40:
  3636  001030                     
  3637                           ;usart/UsartFunctions.h: 37:     return RCREG;
  3638  001030  50AE               	movf	174,w,c	;volatile
  3639  001032  0012               	return		;funcret
  3640  001034                     __end_of_USARTReadChar:
  3641                           	opt callstack 0
  3642                           
  3643 ;; *************** function _USARTDataReady *****************
  3644 ;; Defined at:
  3645 ;;		line 25 in file "usart/UsartFunctions.h"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2    0[COMRAM] int 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3659 ;;      Params:         2       0       0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0
  3661 ;;      Temps:          1       0       0       0       0       0       0
  3662 ;;      Totals:         3       0       0       0       0       0       0
  3663 ;;Total ram usage:        3 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_USARTReadChar
  3669 ;;		_setupFunctions
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text40
  3674  000FCA                     __ptext40:
  3675                           	opt callstack 0
  3676  000FCA                     _USARTDataReady:
  3677                           	opt callstack 23
  3678  000FCA                     
  3679                           ;usart/UsartFunctions.h: 26:     return PIR1bits.RCIF;
  3680  000FCA  BA9E               	btfsc	158,5,c	;volatile
  3681  000FCC  EFEA  F007         	goto	i2u110_41
  3682  000FD0  EFEE  F007         	goto	i2u110_40
  3683  000FD4                     i2u110_41:
  3684  000FD4  6A03               	clrf	??_USARTDataReady^0,c
  3685  000FD6  2A03               	incf	??_USARTDataReady^0,f,c
  3686  000FD8  EFEF  F007         	goto	i2u110_48
  3687  000FDC                     i2u110_40:
  3688  000FDC  6A03               	clrf	??_USARTDataReady^0,c
  3689  000FDE                     i2u110_48:
  3690  000FDE  5003               	movf	??_USARTDataReady^0,w,c
  3691  000FE0  6E01               	movwf	?_USARTDataReady^0,c
  3692  000FE2  6A02               	clrf	(?_USARTDataReady+1)^0,c
  3693  000FE4  0012               	return		;funcret
  3694  000FE6                     __end_of_USARTDataReady:
  3695                           	opt callstack 0
  3696                           
  3697                           	psect	text41
  3698  000000                     __ptext41:
  3699                           	opt callstack 0
  3700  000000                     
  3701                           	psect	rparam
  3702  0000                     
  3703                           	psect	temp
  3704  00005C                     btemp:
  3705                           	opt callstack 0
  3706  00005C                     	ds	1
  3707  0000                     int$flags	set	btemp
  3708  0000                     wtemp8	set	btemp+1
  3709  0000                     ttemp5	set	btemp+1
  3710  0000                     ttemp6	set	btemp+4
  3711  0000                     ttemp7	set	btemp+8
  3712                           tosu	equ	0xFFF
  3713                           tosh	equ	0xFFE
  3714                           tosl	equ	0xFFD
  3715                           stkptr	equ	0xFFC
  3716                           pclatu	equ	0xFFB
  3717                           pclath	equ	0xFFA
  3718                           pcl	equ	0xFF9
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           prodh	equ	0xFF4
  3724                           prodl	equ	0xFF3
  3725                           indf0	equ	0xFEF
  3726                           postinc0	equ	0xFEE
  3727                           postdec0	equ	0xFED
  3728                           preinc0	equ	0xFEC
  3729                           plusw0	equ	0xFEB
  3730                           fsr0h	equ	0xFEA
  3731                           fsr0l	equ	0xFE9
  3732                           wreg	equ	0xFE8
  3733                           indf1	equ	0xFE7
  3734                           postinc1	equ	0xFE6
  3735                           postdec1	equ	0xFE5
  3736                           preinc1	equ	0xFE4
  3737                           plusw1	equ	0xFE3
  3738                           fsr1h	equ	0xFE2
  3739                           fsr1l	equ	0xFE1
  3740                           bsr	equ	0xFE0
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           preinc2	equ	0xFDC
  3745                           plusw2	equ	0xFDB
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8


Data Sizes:
    Strings     54
    Constant    124
    Data        0
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     47      91
    BANK0           128     38      99
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    MotionController_init@motionController.dirOutput	PTR struct DigitalOutput size(2) Largest target is 0
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_init@motionController.motionOutput	PTR struct DigitalOutput size(2) Largest target is 0
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    S50$4$0	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S32$0$0	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), 

    ?_DigitalOutput_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S25$0$0	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    ?_DigitalInput_init.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    Application_loop@app	PTR struct . size(2) Largest target is 2
		 -> main@app(BANK0[2]), 

    ?_MotionController_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_MotionController_init.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_Led_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_Led_init.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    ?_Engine_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_Engine_init.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_Engine_init.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_Button_init.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    ?_Button_init.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ?_Button_init.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    S50$2$0	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    S50$5$0	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    S2068_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    DigitalOutput_set@outputable.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    DigitalOutput_close@output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    DigitalOutput_close@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), 

    DigitalOutput_open@output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    DigitalOutput_open@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), 

    DigitalOutput_init@init	PTR FTN()void  size(2) Largest target is 1
		 -> zEngineDirInit(), yEngineDirInit(), xEngineDirInit(), zEngineMotionInit(), 
		 -> yEngineMotionInit(), xEngineMotionInit(), blueLedInit(), yellowLedInit(), 
		 -> redLedInit(), 

    DigitalOutput_init@set	PTR FTN()void  size(2) Largest target is 1
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedSet(), yellowLedSet(), 
		 -> redLedSet(), 

    output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> i2_redLedSet(), i2_yellowLedSet(), i2_blueLedSet(), i2_xEngineMotionSet(), 
		 -> i2_xEngineDirSet(), xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), 
		 -> yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), 
		 -> redLedSet(), 

    DigitalInput_getValue@input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    DigitalInput_getValue@input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    DigitalInput_init@init	PTR FTN()void  size(2) Largest target is 1
		 -> button1Init(), 

    DigitalInput_init@read	PTR FTN()int  size(2) Largest target is 2
		 -> button1Read(), 

    buton.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    sp__Point_toString	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    USARTInit@usart	PTR struct . size(2) Largest target is 20
		 -> usart(BANK0[20]), 

    setupFunctions@usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    setupFunctions@usart.writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    setupFunctions@usart.writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    setupFunctions@usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    setupFunctions@usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    setupFunctions@usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    setupFunctions@usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    setupFunctions@usart.readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    setupFunctions@usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    setupFunctions@usart.isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    setupFunctions@usart	PTR struct . size(2) Largest target is 20
		 -> usart(BANK0[20]), 

    USARTWriteLine@ln	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    USARTReadString@buf	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    softUSARTWriteString@str	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    MotionController_getDestinationCoord@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.z.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    motionController.y.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    motionController.x.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Led_close@led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    Led_close@led	PTR struct Led size(2) Largest target is 5
		 -> blueLed(COMRAM[4]), yellowLed(COMRAM[4]), 

    Led_open@led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    Led_open@led	PTR struct Led size(2) Largest target is 5
		 -> blueLed(COMRAM[4]), redLed(BANK0[4]), yellowLed(COMRAM[4]), 

    led.output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    Led_init@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    Engine_setDestinationToAddCurrentCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_setDestinationToAddCurrentCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_step@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_step@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getDestinationCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getDestinationCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getCurrentCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getCurrentCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getStepPerMetrice@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getStepPerMetrice@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_setStepPerMetrice@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_setStepPerMetrice@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    engine.dirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    engine.motionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S402Engine$dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    S402Engine$motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Button_isPressed@button.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Button_isPressed@button.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    Button_init@onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    buton.input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    Button_init@input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    buton.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    buton.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    button.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    blueLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    redLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yellowLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S200Button$onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    button.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S200Button$input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    button.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    redLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    blueLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    S96Led$output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    yellowLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    blueLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yellowLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    redLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S50$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    S50$writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    usart.writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    S50$writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    usart.writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    S50$writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    S50$writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    S50$writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    S50$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    S50$readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    usart.readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    S50$readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    S50$isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    usart.isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    zEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    xEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    zEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S32DigitalOutput$set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    xEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S25DigitalInput$read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    button1Input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_USARTReadString
    i2_USARTWriteLine->i2_USARTWriteString
    i2_Led_open->i2_DigitalOutput_open
    _softUSARTWriteString->_softusart_yaz
    _USARTReadChar->_USARTDataReady

Critical Paths under _main in BANK0

    _main->_Application_init
    _Application_loop->_DigitalInput_getValue
    _Application_loop->_Led_close
    _Application_loop->_Led_open
    _Application_loop->_USARTWriteLine
    _USARTWriteLine->_USARTWriteString
    _Led_open->_DigitalOutput_open
    _Led_close->_DigitalOutput_close
    _Application_init->_USARTInit
    _USARTInit->_calculateSpbrg
    _calculateSpbrg->___aldiv
    _LedConfigurator_config->_DigitalOutput_init
    _ButtonConfigurator_config->_DigitalInput_init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6014
                                             36 BANK0      2     2      0
                   _Application_init
                   _Application_loop
 ---------------------------------------------------------------------------------
 (1) _Application_loop                                     2     0      2    1881
                                              4 BANK0      2     0      2
              _DigitalInput_getValue
                          _Led_close
                           _Led_open
                     _USARTWriteLine *
 ---------------------------------------------------------------------------------
 (2) _USARTWriteLine                                       2     0      2     436
                                              2 BANK0      2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     245
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Led_open                                             2     0      2     598
                                              2 BANK0      2     0      2
                 _DigitalOutput_open
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_open                                   2     0      2     301
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Led_close                                            2     0      2     543
                                              2 BANK0      2     0      2
                _DigitalOutput_close
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_close                                  2     0      2     301
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DigitalInput_getValue                                4     2      2     214
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Application_init                                     4     2      2    4099
                                             32 BANK0      4     2      2
          _ButtonConfigurator_config
                        _Button_init
             _LedConfigurator_config
                           _Led_init
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            6     0      6    1422
                                             26 BANK0      6     0      6
                     _calculateSpbrg
                   _enableInterrupts
                     _setupFunctions
 ---------------------------------------------------------------------------------
 (3) _setupFunctions                                       2     0      2     400
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _enableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateSpbrg                                      12     8      4     780
                                             14 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _Led_init                                             8     4      4     335
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LedConfigurator_config                               0     0      0    1716
                 _DigitalOutput_init
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_init                                   8     4      4    1716
                                              0 BANK0      8     4      4
                        _blueLedInit *
                         _redLedInit *
                     _xEngineDirInit *
                  _xEngineMotionInit *
                     _yEngineDirInit *
                  _yEngineMotionInit *
                      _yellowLedInit *
                     _zEngineDirInit *
                  _zEngineMotionInit *
 ---------------------------------------------------------------------------------
 (4) _zEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _zEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _yellowLedInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _yEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _yEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _xEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _xEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _redLedInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _blueLedInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Button_init                                          8     4      4     313
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ButtonConfigurator_config                            0     0      0     279
                  _DigitalInput_init
 ---------------------------------------------------------------------------------
 (3) _DigitalInput_init                                    8     4      4     279
                                              0 BANK0      8     4      4
                        _button1Init *
 ---------------------------------------------------------------------------------
 (4) _button1Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 32    32      0     913
                                             15 COMRAM    32    32      0
                    _USARTReadString *
               _softUSARTWriteString
                         i2_Led_open
                   i2_USARTWriteLine *
 ---------------------------------------------------------------------------------
 (6) i2_USARTWriteLine                                     2     0      2     145
                                              2 COMRAM     2     0      2
                 i2_USARTWriteString
 ---------------------------------------------------------------------------------
 (7) i2_USARTWriteString                                   2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) i2_Led_open                                           2     0      2     118
                                              2 COMRAM     2     0      2
               i2_DigitalOutput_open
 ---------------------------------------------------------------------------------
 (7) i2_DigitalOutput_open                                 2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _softUSARTWriteString                                 2     0      2     190
                                              2 COMRAM     2     0      2
                      _softusart_yaz
 ---------------------------------------------------------------------------------
 (7) _softusart_yaz                                        2     2      0      69
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USARTReadString                                     12     8      4     337
                                              3 COMRAM    12     8      4
                      _USARTReadChar
 ---------------------------------------------------------------------------------
 (7) _USARTReadChar                                        0     0      0       0
                     _USARTDataReady
 ---------------------------------------------------------------------------------
 (8) _USARTDataReady                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_init
     _ButtonConfigurator_config
       _DigitalInput_init
         _button1Init *
     _Button_init
     _LedConfigurator_config
       _DigitalOutput_init
         _blueLedInit *
         _redLedInit *
         _xEngineDirInit *
         _xEngineMotionInit *
         _yEngineDirInit *
         _yEngineMotionInit *
         _yellowLedInit *
         _zEngineDirInit *
         _zEngineMotionInit *
     _Led_init
     _USARTInit
       _calculateSpbrg
         ___aldiv
       _enableInterrupts
       _setupFunctions
   _Application_loop
     _DigitalInput_getValue
     _Led_close
       _DigitalOutput_close
     _Led_open
       _DigitalOutput_open
     _USARTWriteLine *
       _USARTWriteString

 _ISR (ROOT)
   _USARTReadString *
     _USARTReadChar
       _USARTDataReady
   _softUSARTWriteString *
     _softusart_yaz
   i2_Led_open *
     i2_DigitalOutput_open
   i2_USARTWriteLine *
     i2_USARTWriteString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      63       5       77.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2F      5B       1       72.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      15        0.0%
DATA                 0      0      BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 13 14:06:52 2020

                   ?_USARTDataReady 0001                   USARTInit@baudRate 00D9  
                    _yEngineDirInit 1092                       fp__redLedInit 0000  
                                _L1 0659                                  _L2 0655  
                                _L3 0651                                  _L4 064D  
                                _L5 0649                                  _L6 0645  
                                _P1 0641                                  l62 10A8  
                                _P2 063D                                  _P3 0639  
                                _P4 0635                                  l65 10A4  
                                _P5 0631                                  l59 10AC  
                                l83 0D10                                  _bp 0669  
                                _cp 061D                         __CFG_BORV$3 000000  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_LVP$ON 000000                                 l200 10B0  
                               l114 0BB2                                 l212 1098  
                               l109 0984                                 l127 0FA8  
                               l215 1094                                 l240 0EC2  
                               l218 1090                                 l243 0EEE  
                               l237 0FFE                                 l610 0FC8  
                               l194 10A0                                 l442 0BC2  
                               l604 10B4                                 l197 109C  
                               l446 0C28                                 l449 0F64  
                               l570 0E32                                 l490 0A4C  
                               l564 0E96                                 l493 108C  
                               l573 104A                                 l567 1084  
                               l496 0C9C                                 l576 1062  
                               l499 0DFC                                 l692 07C0  
                               _GIE 007F97                        __CFG_CPB$OFF 000000  
                      __CFG_CPD$OFF 000000                                 _ISR 0008  
                    ?_USARTReadChar 0001                                 _lg2 062D  
                 _DigitalInput_init 0E6A              __size_of_yellowLedInit 0004  
                  _yEngineDirOutput 0046                    fp__yellowLedInit 0000  
                               _ovt 0621                                 tosl 000FFD  
                               wreg 000FE8                  ?_DigitalInput_init 00BD  
        __end_ofi2_USARTWriteString 0D7C                      fp__button1Init 0000  
                              ?_ISR 0001                     ?_calculateSpbrg 00CB  
                      __CFG_WDT$OFF 000000                                l3091 0F72  
               fp_i2_USARTWriteLine 0000                                l2801 07B0  
                              l3089 0F66                                l2741 10AA  
                              l2805 0DFE                                l2813 1034  
                              l2901 0E98                                l2821 0BF2  
                              l2751 10AE                                l2743 10A6  
                              l2807 0E06                                l2831 09C0  
                              l2815 104C                                l2911 0EC4  
                              l2903 0EAE                                l2823 0BF8  
                              l2745 10A2                                l2753 1096  
                              l2809 0E22                                l2761 06B4  
                              l2841 0A24                                l2833 09D4  
                              l2825 0986                                l2921 08F4  
                              l2905 107A                                l2913 0EDA  
                              l2817 0BBE                                l2747 109E  
                              l2755 1092                                l2771 06EA  
                              l2763 06BA                                l2843 0A38  
                              l2835 09E8                                l2827 0996  
                              l2931 0956                                l2923 08F8  
                              l2907 107A                                l2819 0BD0  
                              l2915 0F4A                                l2853 0E6A  
                              l2749 109A                                l2757 108E  
                              l2781 072C                                l2773 06FA  
                              l2765 06C8                                l2845 1086  
                              l2837 09FC                                l2829 09AC  
                              l2933 097C                                l2925 0916  
                              l2917 08BA                                l2941 0B38  
                              l2759 10B2                                l2855 0E72  
                              l2863 0C9E                                l2791 077E  
                              l2783 0738                                l2775 06FE  
                              l2767 06D8                                l2847 0C2A  
                              l2839 0A10                                l2871 0DCA  
                              l2927 0934                                l2919 08D8  
                              l2943 0B5E                                l2857 0E8E  
                              l2793 0780                                l2785 0746  
                              l2777 070E                                l2769 06DC  
                              l2849 0C5E                                l2881 0DEC  
                              l2873 0DE4                                l2865 0DC0  
                              l2929 0952                                l2945 0B6C  
                              l2937 0B08                                l2859 0E8E  
                              l2795 078A                                l2787 0750  
                              l2779 0724                                l2883 0DEE  
                              l2875 0DE6                                l2867 0DC4  
                              l2947 0B7E                                l2939 0B16  
                              l2893 0FAA                                l2789 076E  
                              l2797 0790                                l2885 0DF0  
                              l2877 0DE8                                l2869 0DC8  
                              l2949 0BA4                                l2895 0F88  
                              l2887 0FE6                                l2799 07A0  
                              l2879 0DEA                                l2897 0F98  
                              l2889 0FEE                                STR_1 06A6  
                              STR_2 069A                                STR_3 06B0  
                              STR_4 067D                                _BRGH 007D62  
                              _CREN 007D5C                                _LATA 000F89  
                              _LATB 000F8A                                _LATC 000F8B  
                              _LATD 000F8C                                _LATE 000F8D  
                              u1820 06C8                                u1900 0BF0  
                              u1821 06C4                                u1830 06EA  
                              u1910 0C18                                u1831 06E6  
                              u1840 0724                                u1920 0C28  
                              u1841 0720                                u1921 0C24  
                              u1850 0746                                u1851 0742  
                              u1907 0BE6                                u1860 076E  
                              u1861 076A                                u1917 0C0E  
                              u1870 07A0                                u1950 0B38  
                              u1871 079C                                u1935 0C3C  
                              u1951 0B34                                u1890 0BD0  
                              u1891 0BCC                                _PEIE 007F96  
                              u1948 0E78                                u1949 0E8E  
                              u1888 0E0C                                u1968 0B4A  
                              u1889 0E22                                u1969 0B5E  
                              u1978 0B90                                u1979 0BA4  
                              _RCIE 007CED                                _RCIF 007CF5  
                              _SPEN 007D5F                 _zEngineMotionOutput 004E  
                              _TXIF 007CF4                                _TXEN 007D65  
                              _SYNC 007D64                 ??_DigitalInput_init 00C1  
            __end_of_USARTWriteLine 0F66                                _cp_h 0679  
                              _cp_l 0675                                _dp_h 0609  
                              _dp_l 0601                                _main 0F66  
                              _huge 0661                                fsr0h 000FEA  
                              _tiny 065D                                fsr1h 000FE2  
                              indf0 000FEF                                fsr2h 000FDA  
                              fsr0l 000FE9                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 005C      __size_of_DigitalInput_getValue 000C  
     __end_of_DigitalInput_getValue 1086                                start 000E  
                     __CFG_IESO$OFF 000000           DigitalOutput_close@output 00BD  
                      _yellowLedSet 000000              __end_of_yEngineDirInit 1096  
          __end_ofi2_USARTWriteLine 101A                        ___param_bank 000000  
                             ??_ISR 0010                       _softusart_yaz 0D7C  
                      ?_button1Init 0001           __end_of_DigitalInput_init 0E98  
                   __end_of___aldiv 07C2                               ?_main 0001  
                     ??_Button_init 00C1                               _CARRY 007EC0  
                             i2l122 0886                               i2l240 0F18  
                             i2l410 0FE4                               i2l422 1032  
                             i2l431 0B06                               i2l352 0E68  
                             i2l442 0D16                               i2l356 0DB4  
                             i2l348 0E38                               i2l357 0DBE  
                             i2l446 0D7A                               i2l449 1018  
                             i2l573 1078                               _RCREG 000FAE  
                             _SPBRG 000FAF            _USARTWriteLine$intlevel0 0F4A  
                 _xEngineMotionInit 109E                               _TXREG 000FAD  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                         i2_redLedSet 000000  
                    __CFG_EBTR3$OFF 000000                    USARTWriteLine@ln 00BF  
                ?_xEngineMotionInit 0001                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                             _lg2_h 0629                               _lg2_l 0625  
                    __CFG_EBTRB$OFF 000000                               _errno 0030  
                             _ivln2 0619                     __end_of_ivln2_h 0675  
                   __end_of_ivln2_l 0619                               _two24 0665  
                  ?_USARTReadString 0004                         ?i2_Led_open 0003  
                             _usart 00A1                               pclath 000FFA  
                             tablat 000FF5                    _enableInterrupts 1086  
                __size_of_USARTInit 003E                 ??_xEngineMotionInit 00BD  
                             plusw1 000FE3                               plusw2 000FDB  
                   ?_USARTWriteLine 00BF                               ttemp5 005D  
                             ttemp6 0060                               ttemp7 0064  
                             status 000FD8                               wtemp8 005D  
                     _yellowLedInit 10A6             softUSARTWriteString@str 0003  
                   ?_yEngineDirInit 0001         ??_ButtonConfigurator_config 00C5  
                    __CFG_MCLRE$OFF 000000                     __initialization 0F1A  
                  __end_of_Led_init 1000                    __end_of_Led_open 0EC4  
                      __end_of_cp_h 067D                        __end_of_cp_l 0679  
                      __end_of_dp_h 0611                        __end_of_dp_l 0609  
                      __end_of_main 0F88                        __end_of_huge 0665  
        i2DigitalOutput_open@output 0001                        __end_of_tiny 0661  
                    _zEngineDirInit 108E                      ?_softusart_yaz 0001  
                      i2_blueLedSet 000000                    ??_setupFunctions 00BF  
                   ??_USARTReadChar 0004           __end_of_xEngineMotionInit 10A2  
                            ??_main 00E1                       __activetblptr 000002  
              __size_of_blueLedInit 0004                _softUSARTWriteString 0E34  
     __size_ofi2_DigitalOutput_open 0016                              ISR@tmp 001C  
                __size_of_Led_close 002C            __end_of_Application_init 0986  
               __end_of_Button_init 0FAA            __end_of_Application_loop 0BB4  
                 _yEngineMotionInit 109A               fp_i2_USARTWriteString 0000  
                            i2l2253 0FCA                              i2l2511 1000  
                            i2l2433 0E34                              i2l2451 0A62  
                            i2l2371 0DA4                              i2l2355 0D7E  
                            i2l2435 0E46                              i2l2507 0EF0  
                            i2l2461 0AB0                              i2l2453 0A68  
                            i2l2373 0DB6                              i2l2365 0D8C  
                            i2l2357 0D80                              i2l2437 0E4C  
                            i2l2509 0F04                              i2l2375 101A  
                            i2l2455 0A78                              i2l2463 0AB4  
                            i2l2367 0D92                              i2l2359 0D88  
                            i2l2439 0E50                              i2l2391 0D24  
                            i2l2377 101A                              i2l2457 0A8A  
                            i2l2465 0AEA                              i2l2449 0A4E  
                            i2l2369 0D9C                              i2l2393 0D46  
                            i2l2379 1030                              i2l2459 0AA0  
                            i2l2395 0D4A                              i2l2397 1064  
                            i2l2389 0D12                              i2l2961 0808  
                            i2l2963 081A                              i2l2965 0848  
                            i2l2967 086E                              i2l2959 07F4  
                            i2l2969 087A                              _OSCCON 000FD3  
                ?_yEngineMotionInit 0001                              _TRISB0 007C98  
                            _TRISB1 007C99                              _TRISC0 007CA0  
                            _TRISB2 007C9A                              _TRISC1 007CA1  
                            _TRISD0 007CA8                              _TRISC2 007CA2  
                            _TRISD1 007CA9                              _TRISC3 007CA3  
                            _TRISD2 007CAA                              _TRISC6 007CA6  
                            _TRISD5 007CAD                              _TRISC7 007CA7  
                            _TRISD6 007CAE                      ?_yellowLedInit 0001  
               fp__USARTWriteString 0000                      __CFG_XINST$OFF 000000  
            __end_of_zEngineDirInit 1092                 ??_yEngineMotionInit 00BD  
                         ??___aldiv 00C5                      __CFG_STVREN$ON 000000  
                            _redLed 00B5            __end_of_USARTWriteString 0C2A  
                            _button 009D                              clear_0 0F20  
                            clear_1 0F2C                 __size_ofi2_Led_open 002A  
        __size_of_DigitalInput_init 002E                   __end_of_USARTInit 0DFE  
      __size_of_DigitalOutput_close 0018               ?_softUSARTWriteString 0003  
                _DigitalOutput_init 0DFE           _ButtonConfigurator_config 0FAA  
                _DigitalOutput_open 1034                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8           __end_of_yEngineMotionInit 109E  
               ?_DigitalOutput_init 00BD                 ?_DigitalOutput_open 00BD  
                  ??_xEngineDirInit 00BD                          __accesstop 0080  
           __end_of__initialization 0F32             ?_LedConfigurator_config 0001  
                   __CFG_PBADEN$OFF 000000                    ??_USARTDataReady 0003  
                     ___rparam_used 000001                   _zEngineMotionInit 10AE  
                   ?_zEngineDirInit 0001                     ??_softusart_yaz 0001  
                ?_zEngineMotionInit 0001                 Application_init@app 00DF  
                    __pcstackCOMRAM 0001                   __end_of_Led_close 0EF0  
                     __end_of_lg2_h 062D                       __end_of_lg2_l 0629  
                    i2_yellowLedSet 000000                ??_DigitalOutput_init 00C1  
              ??_DigitalOutput_open 00BF                       __end_of_ivln2 061D  
               Application_loop@app 00C1                       __end_of_two24 0669  
                        __end_of_L1 065D                          __end_of_L2 0659  
                        __end_of_L3 0655                          __end_of_L4 0651  
                        __end_of_L5 064D                          __end_of_L6 0649  
                        __end_of_P1 0645                          __end_of_P2 0641  
                        __end_of_P3 063D                          __end_of_P4 0639  
                        __end_of_P5 0635                 ??_zEngineMotionInit 00BD  
                        __end_of_bp 0671                          __end_of_cp 0621  
              Button_init@onPressed 00BF          __size_of_xEngineMotionInit 0004  
                       _Button_init 0F88                __size_of_button1Init 0004  
                  ??_calculateSpbrg 00CF                           ?_Led_init 00BD  
                         ?_Led_open 00BF                          __pbssBANK0 0080  
    __end_of_LedConfigurator_config 0D12                     ??_yellowLedInit 00BD  
         __end_of_zEngineMotionInit 10B2            DigitalOutput_init@output 00C1  
        DigitalInput_getValue@input 00BD                  i2_USARTWriteString 0D12  
                 ?i2_USARTWriteLine 0003                          _blueLedSet 000000  
                ??i2_USARTWriteLine 0005                  USARTReadString@buf 0004  
                USARTReadString@tmp 000F                 ?i2_USARTWriteString 0001  
          __end_of_enableInterrupts 108E              ??_softUSARTWriteString 0005  
                   i2_xEngineDirSet 000000          __size_of_yEngineMotionInit 0004  
                  ??_USARTWriteLine 00C1                  USARTWriteInt@F2579 0094  
                        ??_Led_init 00C1                        ??i2_Led_open 0005  
                        ??_Led_open 00C1                ??i2_USARTWriteString 0003  
               _xEngineMotionOutput 0056                      USARTInit@usart 00D7  
                  ??_yEngineDirInit 00BD                             __Hparam 0000  
                        _redLedInit 10AA                             __Lparam 0000  
             _DigitalInput_getValue 107A                             ___aldiv 06B4  
          DigitalOutput_open@output 00BD                        __psmallconst 0600  
                           __pcinit 0F1A                             __ramtop 0600  
                           _blueLed 0032                  __end_ofi2_Led_open 0F1A  
                           __ptext0 0F66                             __ptext1 0B08  
                           __ptext2 0F40                             __ptext3 0BB4  
                           __ptext4 0E98                             __ptext5 1034  
                           __ptext6 0EC4                             __ptext7 104C  
                           __ptext8 107A                             __ptext9 08BA  
                      __size_of_ISR 08B2                             _ivln2_h 0671  
                           _ivln2_l 0615                    ___aldiv@dividend 00BD  
                           main@app 00E1                   ?_Application_init 00DD  
                 ?_Application_loop 00C1                      __pintcode_body 07C2  
              end_of_initialization 0F32                  ??_Application_init 00DF  
                ??_Application_loop 00C3  __size_of_ButtonConfigurator_config 0020  
                i2USARTWriteLine@ln 0003          __size_of_zEngineMotionInit 0004  
                     __Lmediumconst 0000                             int_func 07C2  
               _DigitalOutput_close 104C        __end_ofi2_DigitalOutput_open 107A  
          __size_of_USARTReadString 00BA                  fp__USARTReadString 0000  
                  ___aldiv@quotient 00C7                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
                     ??_blueLedInit 00BD                   ?_USARTWriteString 00BD  
                  _xEngineDirOutput 004A                           _PORTDbits 000F83  
              ?_DigitalOutput_close 00BD               __end_of_USARTReadChar 1034  
                ??_USARTWriteString 00BF                           _USARTInit 0DC0  
                   _yellowLedOutput 003A                 setupFunctions@usart 00BD  
                  ??_zEngineDirInit 00BD                fp__xEngineMotionInit 0000  
            ?_DigitalInput_getValue 00BD                         ?_redLedInit 0001  
                  _xEngineMotionSet 000000                           _Led_close 0EC4  
             ??_DigitalOutput_close 00BF                        ?_Button_init 00BD  
               start_initialization 0F1A                          ?_USARTInit 00D7  
               __end_of_blueLedInit 10A6                         __end_of_ISR 08BA  
                       __end_of_lg2 0631                    _zEngineDirOutput 0042  
                       __end_of_ovt 0625             __size_of_setupFunctions 00C8  
         USARTReadString@max_length 0006              DigitalOutput_init@init 00BD  
                 __size_of_Led_init 001A                    USARTReadString@i 000D  
                 __size_of_Led_open 002C                    __CFG_OSC$INTIO67 000000  
                      _redLedOutput 003E                       i2Led_open@led 0003  
              fp__yEngineMotionInit 0000               __end_of_softusart_yaz 0DC0  
       __size_of_DigitalOutput_init 0036                       ??_button1Init 00BD  
                  __CFG_LPT1OSC$OFF 000000         __size_of_DigitalOutput_open 0018  
                 ??_USARTReadString 0008                          ?_Led_close 00BF  
                 ?_enableInterrupts 0001                  ??_enableInterrupts 00BD  
              i2_DigitalOutput_open 1064                         __pbssCOMRAM 0030  
                      _button1Input 005A           __size_ofi2_USARTWriteLine 001A  
                     __pcstackBANK0 00BD                 __size_of_redLedInit 0004  
                 __end_ofsqrtf@tiny 0615                            ISR@F3567 0080  
                  Button_init@buton 00C1                    Button_init@input 00BD  
             __end_of_yellowLedInit 10AA                   __CFG_CCP2MX$PORTC 000000  
                         __pintcode 0008                            ?___aldiv 00BD  
           __size_of_xEngineDirInit 0004                   fp__xEngineDirInit 0000  
           __size_of_USARTDataReady 001C                   fp__USARTDataReady 0000  
                       _blueLedInit 10A2                fp__zEngineMotionInit 0000  
                         fabsf@F463 0099                         __smallconst 0600  
             ?i2_DigitalOutput_open 0001       __size_of_softUSARTWriteString 0036  
               __end_of_button1Init 10B6                         ??_USARTInit 00DD  
                         _redLedSet 000000         __size_ofi2_USARTWriteString 006A  
               _yEngineMotionOutput 0052                     ___aldiv@divisor 00C1  
           __size_of_calculateSpbrg 0074                     ___aldiv@counter 00C5  
                          _LATBbits 000F8A                            _LATCbits 000F8B  
                          _LATDbits 000F8C                            i2u110_40 0FDC  
                          i2u110_41 0FD4                            i2u110_48 0FDE  
                          i2u200_41 0812                            i2u121_40 0D24  
                          i2u121_41 0D20                            i2u122_40 0D44  
                          i2u201_48 0834                            i2u201_49 0848  
                          i2u122_47 0D3A                            i2u131_40 0A78  
                          i2u123_40 0D6A                            i2u202_48 085A  
                          i2u131_41 0A74                            i2u202_49 086E  
                          i2u123_47 0D60                            i2u132_40 0A8A  
                          i2u124_40 0D7A                            i2u132_41 0A86  
                          i2u124_41 0D76                            i2u133_40 0A9C  
                          i2u133_41 0A98                            i2u117_45 0D9A  
                          i2u117_47 0D9C                            i2u134_40 0AEA  
                          i2u118_40 0DB4                            i2u134_41 0AE6  
                          i2u118_41 0DB0                            i2u119_40 1030  
                          i2u119_41 102C                            i2u128_40 0E46  
                          i2u128_41 0E42                            i2u129_40 0E68  
                          i2u129_41 0E64                            i2u227_47 0D82  
                          i2u228_47 0D9E                            i2u229_47 0DB8  
                          _PIR1bits 000F9E                            i2u199_40 0808  
                          i2u199_41 0804                       _blueLedOutput 00B9  
                  __CFG_WDTPS$16384 000000           __size_of_Application_init 00CC  
         __size_of_Application_loop 00AC               i2USARTWriteString@str 0001  
                       ??_Led_close 00C1                           _yellowLed 0036  
          ??_LedConfigurator_config 00C5                __size_of_Button_init 0022  
                    _setupFunctions 0986                            _Led_init 0FE6  
                          _Led_open 0E98           __size_of_USARTWriteString 0076  
           ??_DigitalInput_getValue 00BF               DigitalOutput_init@set 00BF  
                 softusart_yaz@veri 0001                        ??_redLedInit 00BD  
           __size_of_USARTWriteLine 0026                   fp__USARTWriteLine 0000  
                          __Hrparam 0000                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000             __size_of_yEngineDirInit 0004  
                 fp__yEngineDirInit 0000                    __size_of___aldiv 010E  
                       _button1Init 10B2                         _button1Read 000000  
            ??i2_DigitalOutput_open 0003              __end_of_setupFunctions 0A4E  
                  i2_USARTWriteLine 1000                      Led_init@output 00BD  
                          __ptext10 0DC0                            __ptext11 0986  
                          __ptext20 1096                            __ptext12 1086  
                          __ptext21 109A                            __ptext13 0C2A  
                          __ptext30 10B2                            __ptext22 109E  
                          __ptext14 06B4                            __ptext23 10A2  
                          __ptext15 0FE6                            __ptext40 0FCA  
                          __ptext32 1000                            __ptext24 10A6  
                          __ptext16 0C9E                            __ptext41 0000  
                          __ptext33 0D12                            __ptext25 10AA  
                          __ptext17 0DFE                            __ptext34 0EF0  
                          __ptext26 10AE                            __ptext18 108E  
                          __ptext35 1064                            __ptext27 0F88  
                          __ptext19 1092                            __ptext36 0E34  
                          __ptext28 0FAA                            __ptext37 0D7C  
                          __ptext29 0E6A                            __ptext38 0A4E  
                __end_of_redLedInit 10AE                            __ptext39 101A  
                    softusart_yaz@i 0002                       __size_of_main 0022  
                   _USARTReadString 0A4E              __size_of_USARTReadChar 001A  
                  fp__USARTReadChar 0000          ?_ButtonConfigurator_config 0001  
       __end_of_DigitalOutput_close 1064                      _xEngineDirInit 1096  
                          int$flags 005C                 calculateSpbrg@bolum 00D3  
                    _USARTDataReady 0FCA                     ?_setupFunctions 00BD  
                i2_xEngineMotionSet 000000     __size_of_LedConfigurator_config 0074  
                    fp__blueLedInit 0000                            intlevel2 0000  
                    _calculateSpbrg 0C2A                           sqrtf@tiny 0611  
         __size_of_enableInterrupts 0008              __end_of_xEngineDirInit 109A  
            DigitalInput_init@buton 00C3   __end_of_ButtonConfigurator_config 0FCA  
            __end_of_USARTDataReady 0FE6                       _xEngineDirSet 000000  
        __end_of_DigitalOutput_init 0E34          __end_of_DigitalOutput_open 104C  
                  _Application_init 08BA                        Led_close@led 00BF  
                  _Application_loop 0B08                 USARTWriteString@str 00BD  
           __size_of_zEngineDirInit 0004                   fp__zEngineDirInit 0000  
                      ?_blueLedInit 0001          _USARTWriteString$intlevel0 0BBE  
                     _USARTReadChar 101A                       _USARTReadByte 000000  
             DigitalInput_init@init 00BD               DigitalInput_init@read 00BF  
                      ___aldiv@sign 00C6             __end_of_USARTReadString 0B08  
            __end_of_calculateSpbrg 0C9E                          i2_Led_open 0EF0  
                       Led_init@led 00C1                    _USARTWriteString 0BB4  
            __size_of_softusart_yaz 0044              calculateSpbrg@baudRate 00CB  
                   _USARTWriteFloat 000000                         Led_open@led 00BF  
      __end_of_softUSARTWriteString 0E6A                      _USARTWriteByte 000000  
                    _USARTWriteLine 0F40                      _USARTWriteLong 000000  
                   ?_xEngineDirInit 0001                       _USARTWriteInt 000000  
            _LedConfigurator_config 0C9E  
