

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 13 18:25:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.10
    92                           ; Generated 31/07/2019 GMT
    93                           ; 
    94                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4520 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126 ;; Function _USARTReadByte is unused but had its address taken
   127  0000                     
   128 ;; Function _USARTWriteByte is unused but had its address taken
   129  0000                     
   130 ;; Function _USARTWriteInt is unused but had its address taken
   131  0000                     
   132 ;; Function _USARTWriteLong is unused but had its address taken
   133  0000                     
   134 ;; Function _USARTWriteFloat is unused but had its address taken
   135  0000                     
   136                           	psect	smallconst
   137  000600                     __psmallconst:
   138                           	opt callstack 0
   139  000600  00                 	db	0
   140  000601  0000               	dw	0
   141  000603  0000               	dw	0
   142  000605  CFDC               	dw	53212
   143  000607  35D1               	dw	13777
   144  000609                     __end_of_dp_l:
   145                           	opt callstack 0
   146  000609  0000               	dw	0
   147  00060B  0000               	dw	0
   148  00060D  C000               	dw	49152
   149  00060F  3F15               	dw	16149
   150  000611                     __end_of_dp_h:
   151                           	opt callstack 0
   152  000611  4260               	dw	16992
   153  000613  0DA2               	dw	3490
   154  000615                     __end_ofsqrtf@tiny:
   155                           	opt callstack 0
   156  000615  A570               	dw	42352
   157  000617  36EC               	dw	14060
   158  000619                     __end_of_ivln2_l:
   159                           	opt callstack 0
   160  000619  AA3B               	dw	43579
   161  00061B  3FB8               	dw	16312
   162  00061D                     __end_of_ivln2:
   163                           	opt callstack 0
   164  00061D  384F               	dw	14415
   165  00061F  3F76               	dw	16246
   166  000621                     __end_of_cp:
   167                           	opt callstack 0
   168  000621  AA3C               	dw	43580
   169  000623  3338               	dw	13112
   170  000625                     __end_of_ovt:
   171                           	opt callstack 0
   172  000625  BE8C               	dw	48780
   173  000627  35BF               	dw	13759
   174  000629                     __end_of_lg2_l:
   175                           	opt callstack 0
   176  000629  7200               	dw	29184
   177  00062B  3F31               	dw	16177
   178  00062D                     __end_of_lg2_h:
   179                           	opt callstack 0
   180  00062D  7218               	dw	29208
   181  00062F  3F31               	dw	16177
   182  000631                     __end_of_lg2:
   183                           	opt callstack 0
   184  000631  BB4C               	dw	47948
   185  000633  3331               	dw	13105
   186  000635                     __end_of_P5:
   187                           	opt callstack 0
   188  000635  EA0E               	dw	59918
   189  000637  B5DD               	dw	46557
   190  000639                     __end_of_P4:
   191                           	opt callstack 0
   192  000639  B355               	dw	45909
   193  00063B  388A               	dw	14474
   194  00063D                     __end_of_P3:
   195                           	opt callstack 0
   196  00063D  0B61               	dw	2913
   197  00063F  BB36               	dw	47926
   198  000641                     __end_of_P2:
   199                           	opt callstack 0
   200  000641  AAAB               	dw	43691
   201  000643  3E2A               	dw	15914
   202  000645                     __end_of_P1:
   203                           	opt callstack 0
   204  000645  F142               	dw	61762
   205  000647  3E53               	dw	15955
   206  000649                     __end_of_L6:
   207                           	opt callstack 0
   208  000649  3255               	dw	12885
   209  00064B  3E6C               	dw	15980
   210  00064D                     __end_of_L5:
   211                           	opt callstack 0
   212  00064D  A305               	dw	41733
   213  00064F  3E8B               	dw	16011
   214  000651                     __end_of_L4:
   215                           	opt callstack 0
   216  000651  AAAB               	dw	43691
   217  000653  3EAA               	dw	16042
   218  000655                     __end_of_L3:
   219                           	opt callstack 0
   220  000655  6DB7               	dw	28087
   221  000657  3EDB               	dw	16091
   222  000659                     __end_of_L2:
   223                           	opt callstack 0
   224  000659  999A               	dw	39322
   225  00065B  3F19               	dw	16153
   226  00065D                     __end_of_L1:
   227                           	opt callstack 0
   228  00065D  4260               	dw	16992
   229  00065F  0DA2               	dw	3490
   230  000661                     __end_of_tiny:
   231                           	opt callstack 0
   232  000661  F2CA               	dw	62154
   233  000663  7149               	dw	29001
   234  000665                     __end_of_huge:
   235                           	opt callstack 0
   236  000665  0000               	dw	0
   237  000667  4B80               	dw	19328
   238  000669                     __end_of_two24:
   239                           	opt callstack 0
   240  000669  0000               	dw	0
   241  00066B  3F80               	dw	16256
   242  00066D  0000               	dw	0
   243  00066F  3FC0               	dw	16320
   244  000671                     __end_of_bp:
   245                           	opt callstack 0
   246  000671  AA00               	dw	43520
   247  000673  3FB8               	dw	16312
   248  000675                     __end_of_ivln2_h:
   249                           	opt callstack 0
   250  000675  23C6               	dw	9158
   251  000677  B8F6               	dw	47350
   252  000679                     __end_of_cp_l:
   253                           	opt callstack 0
   254  000679  4000               	dw	16384
   255  00067B  3F76               	dw	16246
   256  00067D                     __end_of_cp_h:
   257                           	opt callstack 0
   258  0000                     _SPBRG	set	4015
   259  0000                     _OSCCON	set	4051
   260  0000                     _TXREG	set	4013
   261  0000                     _RCREG	set	4014
   262  0000                     _PIR1bits	set	3998
   263  0000                     _PORTDbits	set	3971
   264  0000                     _LATDbits	set	3980
   265  0000                     _LATBbits	set	3978
   266  0000                     _LATCbits	set	3979
   267  0000                     _LATE	set	3981
   268  0000                     _LATD	set	3980
   269  0000                     _LATC	set	3979
   270  0000                     _LATB	set	3978
   271  0000                     _LATA	set	3977
   272  0000                     _TRISD2	set	31914
   273  0000                     _TRISC3	set	31907
   274  0000                     _TRISD0	set	31912
   275  0000                     _TRISD1	set	31913
   276  0000                     _CREN	set	32092
   277  0000                     _TXEN	set	32101
   278  0000                     _TRISC7	set	31911
   279  0000                     _TRISC6	set	31910
   280  0000                     _SPEN	set	32095
   281  0000                     _SYNC	set	32100
   282  0000                     _BRGH	set	32098
   283  0000                     _RCIE	set	31981
   284  0000                     _PEIE	set	32662
   285  0000                     _GIE	set	32663
   286  0000                     _TXIF	set	31988
   287  0000                     _RCIF	set	31989
   288  0000                     _CARRY	set	32448
   289  0000                     _TRISD6	set	31918
   290  0000                     _TRISD5	set	31917
   291  0000                     _TRISB2	set	31898
   292  0000                     _TRISB1	set	31897
   293  0000                     _TRISB0	set	31896
   294  0000                     _TRISC2	set	31906
   295  0000                     _TRISC1	set	31905
   296  0000                     _TRISC0	set	31904
   297  00067D  50                 	db	80	;'P'
   298  00067E  6F                 	db	111	;'o'
   299  00067F  69                 	db	105	;'i'
   300  000680  6E                 	db	110	;'n'
   301  000681  74                 	db	116	;'t'
   302  000682  3A                 	db	58	;':'
   303  000683  7B                 	db	123
   304  000684  78                 	db	120	;'x'
   305  000685  3A                 	db	58	;':'
   306  000686  25                 	db	37
   307  000687  2E                 	db	46
   308  000688  33                 	db	51	;'3'
   309  000689  66                 	db	102	;'f'
   310  00068A  2C                 	db	44
   311  00068B  79                 	db	121	;'y'
   312  00068C  3A                 	db	58	;':'
   313  00068D  25                 	db	37
   314  00068E  2E                 	db	46
   315  00068F  33                 	db	51	;'3'
   316  000690  66                 	db	102	;'f'
   317  000691  2C                 	db	44
   318  000692  7A                 	db	122	;'z'
   319  000693  3A                 	db	58	;':'
   320  000694  25                 	db	37
   321  000695  2E                 	db	46
   322  000696  33                 	db	51	;'3'
   323  000697  66                 	db	102	;'f'
   324  000698  7D                 	db	125
   325  000699  00                 	db	0
   326  00069A                     STR_1:
   327  00069A  62                 	db	98	;'b'
   328  00069B  61                 	db	97	;'a'
   329  00069C  73                 	db	115	;'s'
   330  00069D  C4                 	db	-60
   331  00069E  B1                 	db	-79
   332  00069F  6C                 	db	108	;'l'
   333  0006A0  64                 	db	100	;'d'
   334  0006A1  C4                 	db	-60
   335  0006A2  B1                 	db	-79
   336  0006A3  00                 	db	0
   337  0006A4                     STR_2:
   338  0006A4  0D                 	db	13
   339  0006A5  0A                 	db	10
   340  0006A6  00                 	db	0
   341  0000                     
   342                           ; #config settings
   343  0006A7  00                 	db	0	; dummy byte at the end
   344  0000                     
   345                           	psect	cinit
   346  0030E0                     __pcinit:
   347                           	opt callstack 0
   348  0030E0                     start_initialization:
   349                           	opt callstack 0
   350  0030E0                     __initialization:
   351                           	opt callstack 0
   352                           
   353                           ; Clear objects allocated to BANK1 (113 bytes)
   354  0030E0  EE01  F000         	lfsr	0,__pbssBANK1
   355  0030E4  0E71               	movlw	113
   356  0030E6                     clear_0:
   357  0030E6  6AEE               	clrf	postinc0,c
   358  0030E8  06E8               	decf	wreg,f,c
   359  0030EA  E1FD               	bnz	clear_0
   360                           
   361                           ; Clear objects allocated to COMRAM (46 bytes)
   362  0030EC  EE00  F032         	lfsr	0,__pbssCOMRAM
   363  0030F0  0E2E               	movlw	46
   364  0030F2                     clear_1:
   365  0030F2  6AEE               	clrf	postinc0,c
   366  0030F4  06E8               	decf	wreg,f,c
   367  0030F6  E1FD               	bnz	clear_1
   368  0030F8                     end_of_initialization:
   369                           	opt callstack 0
   370  0030F8                     __end_of__initialization:
   371                           	opt callstack 0
   372  0030F8  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373  0030FA  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374  0030FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   375  0030FE  6EF8               	movwf	tblptru,c
   376  003100  0100               	movlb	0
   377  003102  EFA9  F018         	goto	_main	;jump to C main() function
   378                           
   379                           	psect	bssCOMRAM
   380  000032                     __pbssCOMRAM:
   381                           	opt callstack 0
   382  000032                     	ds	4
   383  000036                     _errno:
   384                           	opt callstack 0
   385  000036                     	ds	2
   386  000038                     _button:
   387                           	opt callstack 0
   388  000038                     	ds	4
   389  00003C                     _redLed:
   390                           	opt callstack 0
   391  00003C                     	ds	4
   392  000040                     _blueLed:
   393                           	opt callstack 0
   394  000040                     	ds	4
   395  000044                     _yellowLed:
   396                           	opt callstack 0
   397  000044                     	ds	4
   398  000048                     _zEngineDirOutput:
   399                           	opt callstack 0
   400  000048                     	ds	4
   401  00004C                     _yEngineDirOutput:
   402                           	opt callstack 0
   403  00004C                     	ds	4
   404  000050                     _xEngineDirOutput:
   405                           	opt callstack 0
   406  000050                     	ds	4
   407  000054                     _zEngineMotionOutput:
   408                           	opt callstack 0
   409  000054                     	ds	4
   410  000058                     _yEngineMotionOutput:
   411                           	opt callstack 0
   412  000058                     	ds	4
   413  00005C                     _xEngineMotionOutput:
   414                           	opt callstack 0
   415  00005C                     	ds	4
   416                           
   417                           	psect	bssBANK1
   418  000100                     __pbssBANK1:
   419                           	opt callstack 0
   420  000100                     ISR@F3535:
   421                           	opt callstack 0
   422  000100                     	ds	20
   423  000114                     	ds	5
   424  000119                     _motionController:
   425                           	opt callstack 0
   426  000119                     	ds	54
   427  00014F                     _usart:
   428                           	opt callstack 0
   429  00014F                     	ds	20
   430  000163                     _blueLedOutput:
   431                           	opt callstack 0
   432  000163                     	ds	4
   433  000167                     _yellowLedOutput:
   434                           	opt callstack 0
   435  000167                     	ds	4
   436  00016B                     _redLedOutput:
   437                           	opt callstack 0
   438  00016B                     	ds	4
   439  00016F                     _button1Input:
   440                           	opt callstack 0
   441  00016F                     	ds	2
   442                           
   443                           	psect	cstackBANK1
   444  000171                     __pcstackBANK1:
   445                           	opt callstack 0
   446  000171                     MotionController_control@rateY:
   447                           	opt callstack 0
   448  000171                     MotionController_init@motionController:
   449                           	opt callstack 0
   450                           
   451                           ; 54 bytes @ 0x0
   452  000171                     	ds	4
   453  000175                     MotionController_control@rateZ:
   454                           	opt callstack 0
   455                           
   456                           ; 4 bytes @ 0x4
   457  000175                     	ds	4
   458  000179                     MotionController_control@rateX:
   459                           	opt callstack 0
   460                           
   461                           ; 4 bytes @ 0x8
   462  000179                     	ds	4
   463  00017D                     MotionController_control@rateZ_858:
   464                           	opt callstack 0
   465                           
   466                           ; 4 bytes @ 0xC
   467  00017D                     	ds	4
   468  000181                     MotionController_control@rateY_861:
   469                           	opt callstack 0
   470                           
   471                           ; 4 bytes @ 0x10
   472  000181                     	ds	4
   473  000185                     MotionController_control@rateX_862:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0x14
   477  000185                     	ds	4
   478  000189                     MotionController_control@dx:
   479                           	opt callstack 0
   480                           
   481                           ; 4 bytes @ 0x18
   482  000189                     	ds	4
   483  00018D                     MotionController_control@dy:
   484                           	opt callstack 0
   485                           
   486                           ; 4 bytes @ 0x1C
   487  00018D                     	ds	4
   488  000191                     MotionController_control@dz:
   489                           	opt callstack 0
   490                           
   491                           ; 4 bytes @ 0x20
   492  000191                     	ds	4
   493  000195                     MotionController_control@p1:
   494                           	opt callstack 0
   495                           
   496                           ; 4 bytes @ 0x24
   497  000195                     	ds	4
   498  000199                     MotionController_control@p2:
   499                           	opt callstack 0
   500                           
   501                           ; 4 bytes @ 0x28
   502  000199                     	ds	4
   503  00019D                     MotionController_control@p1_859:
   504                           	opt callstack 0
   505                           
   506                           ; 4 bytes @ 0x2C
   507  00019D                     	ds	4
   508  0001A1                     MotionController_control@p2_860:
   509                           	opt callstack 0
   510                           
   511                           ; 4 bytes @ 0x30
   512  0001A1                     	ds	4
   513  0001A5                     MotionController_control@p1_863:
   514                           	opt callstack 0
   515                           
   516                           ; 4 bytes @ 0x34
   517  0001A5                     	ds	4
   518  0001A9                     MotionController_control@p2_864:
   519                           	opt callstack 0
   520                           
   521                           ; 4 bytes @ 0x38
   522  0001A9                     	ds	4
   523  0001AD                     MotionController_control@xs:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x3C
   527  0001AD                     	ds	2
   528  0001AF                     MotionController_control@ys:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x3E
   532  0001AF                     	ds	2
   533  0001B1                     MotionController_control@zs:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x40
   537  0001B1                     	ds	2
   538  0001B3                     MotionController_control@currentCoord:
   539                           	opt callstack 0
   540                           
   541                           ; 12 bytes @ 0x42
   542  0001B3                     	ds	12
   543  0001BF                     MotionController_control@destinationCoord:
   544                           	opt callstack 0
   545                           
   546                           ; 12 bytes @ 0x4E
   547  0001BF                     	ds	12
   548  0001CB                     MotionController_control@intDz:
   549                           	opt callstack 0
   550                           
   551                           ; 4 bytes @ 0x5A
   552  0001CB                     	ds	4
   553  0001CF                     MotionController_control@intDx:
   554                           	opt callstack 0
   555                           
   556                           ; 4 bytes @ 0x5E
   557  0001CF                     	ds	4
   558  0001D3                     MotionController_control@intDy:
   559                           	opt callstack 0
   560                           
   561                           ; 4 bytes @ 0x62
   562  0001D3                     	ds	4
   563  0001D7                     ?_Application_init:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x66
   567  0001D7                     	ds	2
   568                           
   569                           	psect	cstackBANK0
   570  000080                     __pcstackBANK0:
   571                           	opt callstack 0
   572  000080                     ?_DigitalInput_init:
   573                           	opt callstack 0
   574  000080                     ?_button1Read:
   575                           	opt callstack 0
   576  000080                     ?_Led_init:
   577                           	opt callstack 0
   578  000080                     ?_Button_init:
   579                           	opt callstack 0
   580  000080                     ?___fladd:
   581                           	opt callstack 0
   582  000080                     ?___fldiv:
   583                           	opt callstack 0
   584  000080                     ?_Engine_getStepPerMetrice:
   585                           	opt callstack 0
   586  000080                     ?_Engine_getCurrentCoord:
   587                           	opt callstack 0
   588  000080                     ?_Engine_getDestinationCoord:
   589                           	opt callstack 0
   590  000080                     ?_DigitalOutput_init:
   591                           	opt callstack 0
   592  000080                     ?___aldiv:
   593                           	opt callstack 0
   594  000080                     ?_Engine_init:
   595                           	opt callstack 0
   596  000080                     Button_init@input:
   597                           	opt callstack 0
   598  000080                     Engine_init@motionOutput:
   599                           	opt callstack 0
   600  000080                     Engine_setStepPerMetrice@engine:
   601                           	opt callstack 0
   602  000080                     Engine_getStepPerMetrice@engine:
   603                           	opt callstack 0
   604  000080                     Engine_getCurrentCoord@engine:
   605                           	opt callstack 0
   606  000080                     Engine_getDestinationCoord@engine:
   607                           	opt callstack 0
   608  000080                     DigitalInput_init@init:
   609                           	opt callstack 0
   610  000080                     DigitalOutput_init@init:
   611                           	opt callstack 0
   612  000080                     Led_init@output:
   613                           	opt callstack 0
   614  000080                     USARTWriteString@str:
   615                           	opt callstack 0
   616  000080                     setupFunctions@usart:
   617                           	opt callstack 0
   618  000080                     blueLedSet@button:
   619                           	opt callstack 0
   620  000080                     button1Read@in:
   621                           	opt callstack 0
   622  000080                     ___aldiv@dividend:
   623                           	opt callstack 0
   624  000080                     ___flge@ff1:
   625                           	opt callstack 0
   626  000080                     ___fladd@b:
   627                           	opt callstack 0
   628  000080                     ___fldiv@b:
   629                           	opt callstack 0
   630                           
   631                           ; 4 bytes @ 0x0
   632  000080                     	ds	2
   633  000082                     ??_button1Read:
   634  000082                     Button_init@onPressed:
   635                           	opt callstack 0
   636  000082                     Engine_init@dirOutput:
   637                           	opt callstack 0
   638  000082                     xEngineMotionSet@value:
   639                           	opt callstack 0
   640  000082                     xEngineDirSet@value:
   641                           	opt callstack 0
   642  000082                     DigitalInput_init@read:
   643                           	opt callstack 0
   644  000082                     DigitalOutput_init@set:
   645                           	opt callstack 0
   646  000082                     USARTWriteLine@ln:
   647                           	opt callstack 0
   648  000082                     redLedSet@value:
   649                           	opt callstack 0
   650  000082                     yellowLedSet@value:
   651                           	opt callstack 0
   652  000082                     blueLedSet@value:
   653                           	opt callstack 0
   654  000082                     Engine_setStepPerMetrice@stepPerMm:
   655                           	opt callstack 0
   656                           
   657                           ; 4 bytes @ 0x2
   658  000082                     	ds	1
   659  000083                     ?_DigitalInput_getValue:
   660                           	opt callstack 0
   661  000083                     DigitalInput_getValue@input:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x3
   665  000083                     	ds	1
   666  000084                     ?___flmul:
   667                           	opt callstack 0
   668  000084                     ?_Point_init3D:
   669                           	opt callstack 0
   670  000084                     DigitalInput_init@input:
   671                           	opt callstack 0
   672  000084                     DigitalOutput_set@outputable:
   673                           	opt callstack 0
   674  000084                     Button_init@buton:
   675                           	opt callstack 0
   676  000084                     DigitalOutput_init@output:
   677                           	opt callstack 0
   678  000084                     Led_init@led:
   679                           	opt callstack 0
   680  000084                     Point_init3D@x:
   681                           	opt callstack 0
   682  000084                     ___aldiv@divisor:
   683                           	opt callstack 0
   684  000084                     ___flge@ff2:
   685                           	opt callstack 0
   686  000084                     ___fladd@a:
   687                           	opt callstack 0
   688  000084                     ___fldiv@a:
   689                           	opt callstack 0
   690  000084                     ___flmul@b:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x4
   694  000084                     	ds	1
   695  000085                     DigitalInput_getValue@val:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x5
   699  000085                     	ds	1
   700  000086                     DigitalOutput_set@value:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0x6
   704  000086                     	ds	1
   705  000087                     ?_Button_isPressed:
   706                           	opt callstack 0
   707  000087                     Button_isPressed@button:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x7
   711  000087                     	ds	1
   712  000088                     ??___fladd:
   713  000088                     ??___fldiv:
   714  000088                     ??___flge:
   715  000088                     ___aldiv@counter:
   716                           	opt callstack 0
   717  000088                     DigitalOutput_open@output:
   718                           	opt callstack 0
   719  000088                     DigitalOutput_close@output:
   720                           	opt callstack 0
   721  000088                     Point_init3D@y:
   722                           	opt callstack 0
   723  000088                     ___flmul@a:
   724                           	opt callstack 0
   725                           
   726                           ; 4 bytes @ 0x8
   727  000088                     	ds	1
   728  000089                     ___aldiv@sign:
   729                           	opt callstack 0
   730  000089                     Button_isPressed@value:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x9
   734  000089                     	ds	1
   735  00008A                     Engine_step@engine:
   736                           	opt callstack 0
   737  00008A                     Led_open@led:
   738                           	opt callstack 0
   739  00008A                     Led_close@led:
   740                           	opt callstack 0
   741  00008A                     ___aldiv@quotient:
   742                           	opt callstack 0
   743                           
   744                           ; 4 bytes @ 0xA
   745  00008A                     	ds	2
   746  00008C                     ??___flmul:
   747  00008C                     ___fladd@signs:
   748                           	opt callstack 0
   749  00008C                     Application_loop@app:
   750                           	opt callstack 0
   751  00008C                     Engine_step@dir:
   752                           	opt callstack 0
   753  00008C                     Point_init3D@z:
   754                           	opt callstack 0
   755  00008C                     ___fldiv@rem:
   756                           	opt callstack 0
   757                           
   758                           ; 4 bytes @ 0xC
   759  00008C                     	ds	1
   760  00008D                     ___fladd@aexp:
   761                           	opt callstack 0
   762                           
   763                           ; 1 bytes @ 0xD
   764  00008D                     	ds	1
   765  00008E                     ?_calculateSpbrg:
   766                           	opt callstack 0
   767  00008E                     ___fladd@bexp:
   768                           	opt callstack 0
   769  00008E                     calculateSpbrg@baudRate:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0xE
   773  00008E                     	ds	1
   774  00008F                     ___fladd@grs:
   775                           	opt callstack 0
   776                           
   777                           ; 1 bytes @ 0xF
   778  00008F                     	ds	1
   779  000090                     ?___flsub:
   780                           	opt callstack 0
   781  000090                     ___fldiv@sign:
   782                           	opt callstack 0
   783  000090                     ___flmul@sign:
   784                           	opt callstack 0
   785  000090                     ___flsub@b:
   786                           	opt callstack 0
   787  000090                     Point_init3D@point:
   788                           	opt callstack 0
   789                           
   790                           ; 12 bytes @ 0x10
   791  000090                     	ds	1
   792  000091                     ___flmul@aexp:
   793                           	opt callstack 0
   794  000091                     ___fldiv@new_exp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x11
   798  000091                     	ds	1
   799  000092                     ??_calculateSpbrg:
   800  000092                     ___flmul@grs:
   801                           	opt callstack 0
   802  000092                     Engine_init@engine:
   803                           	opt callstack 0
   804                           
   805                           ; 18 bytes @ 0x12
   806  000092                     	ds	1
   807  000093                     ___fldiv@grs:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x13
   811  000093                     	ds	1
   812  000094                     ___flsub@a:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x14
   816  000094                     	ds	2
   817  000096                     ___flmul@bexp:
   818                           	opt callstack 0
   819  000096                     calculateSpbrg@bolum:
   820                           	opt callstack 0
   821                           
   822                           ; 4 bytes @ 0x16
   823  000096                     	ds	1
   824  000097                     ___fldiv@bexp:
   825                           	opt callstack 0
   826  000097                     ___flmul@prod:
   827                           	opt callstack 0
   828                           
   829                           ; 4 bytes @ 0x17
   830  000097                     	ds	1
   831  000098                     ?___fltol:
   832                           	opt callstack 0
   833  000098                     ___fldiv@aexp:
   834                           	opt callstack 0
   835  000098                     ___fltol@f1:
   836                           	opt callstack 0
   837                           
   838                           ; 4 bytes @ 0x18
   839  000098                     	ds	2
   840  00009A                     USARTInit@usart:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x1A
   844  00009A                     	ds	1
   845  00009B                     ___flmul@temp:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0x1B
   849  00009B                     	ds	1
   850  00009C                     ??___fltol:
   851  00009C                     ?_MotionController_getCurrentCoord:
   852                           	opt callstack 0
   853  00009C                     ?_MotionController_getDestinationCoord:
   854                           	opt callstack 0
   855  00009C                     MotionController_getCurrentCoord@motionController:
   856                           	opt callstack 0
   857  00009C                     MotionController_getDestinationCoord@motionController:
   858                           	opt callstack 0
   859  00009C                     USARTInit@baudRate:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x1C
   863  00009C                     	ds	4
   864  0000A0                     ___fltol@sign1:
   865                           	opt callstack 0
   866                           
   867                           ; 1 bytes @ 0x20
   868  0000A0                     	ds	1
   869  0000A1                     ___fltol@exp1:
   870                           	opt callstack 0
   871                           
   872                           ; 1 bytes @ 0x21
   873  0000A1                     	ds	1
   874  0000A2                     ?_abs:
   875                           	opt callstack 0
   876  0000A2                     abs@a:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x22
   880  0000A2                     	ds	2
   881  0000A4                     ??_abs:
   882  0000A4                     ?_MotionController_init:
   883                           	opt callstack 0
   884                           
   885                           ; 54 bytes @ 0x24
   886  0000A4                     	ds	2
   887  0000A6                     ?___xxtofl:
   888                           	opt callstack 0
   889  0000A6                     ___xxtofl@val:
   890                           	opt callstack 0
   891                           
   892                           ; 4 bytes @ 0x26
   893  0000A6                     	ds	2
   894  0000A8                     
   895                           ; 1 bytes @ 0x28
   896  0000A8                     	ds	2
   897  0000AA                     ??___xxtofl:
   898                           
   899                           ; 1 bytes @ 0x2A
   900  0000AA                     	ds	4
   901  0000AE                     ___xxtofl@sign:
   902                           	opt callstack 0
   903                           
   904                           ; 1 bytes @ 0x2E
   905  0000AE                     	ds	1
   906  0000AF                     ___xxtofl@exp:
   907                           	opt callstack 0
   908                           
   909                           ; 1 bytes @ 0x2F
   910  0000AF                     	ds	1
   911  0000B0                     ___xxtofl@arg:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0x30
   915  0000B0                     	ds	4
   916  0000B4                     MotionController_control@motionController:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x34
   920  0000B4                     	ds	2
   921  0000B6                     
   922                           ; 1 bytes @ 0x36
   923  0000B6                     	ds	36
   924  0000DA                     Application_init@app:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x5A
   928  0000DA                     	ds	2
   929  0000DC                     main@app:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0x5C
   933  0000DC                     	ds	2
   934                           
   935                           	psect	cstackCOMRAM
   936  000001                     __pcstackCOMRAM:
   937                           	opt callstack 0
   938  000001                     ?_USARTDataReady:
   939                           	opt callstack 0
   940  000001                     i2USARTWriteString@str:
   941                           	opt callstack 0
   942  000001                     i2blueLedSet@button:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x0
   946  000001                     	ds	2
   947  000003                     ??_USARTDataReady:
   948  000003                     i2xEngineMotionSet@value:
   949                           	opt callstack 0
   950  000003                     i2xEngineDirSet@value:
   951                           	opt callstack 0
   952  000003                     i2USARTWriteLine@ln:
   953                           	opt callstack 0
   954  000003                     i2redLedSet@value:
   955                           	opt callstack 0
   956  000003                     i2yellowLedSet@value:
   957                           	opt callstack 0
   958  000003                     i2blueLedSet@value:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x2
   962  000003                     	ds	1
   963  000004                     USARTReadString@buf:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x3
   967  000004                     	ds	1
   968  000005                     i2DigitalOutput_set@outputable:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x4
   972  000005                     	ds	1
   973  000006                     USARTReadString@max_length:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x5
   977  000006                     	ds	1
   978  000007                     i2DigitalOutput_set@value:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x6
   982  000007                     	ds	1
   983  000008                     ??_USARTReadString:
   984                           
   985                           ; 1 bytes @ 0x7
   986  000008                     	ds	1
   987  000009                     i2DigitalOutput_open@output:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x8
   991  000009                     	ds	2
   992  00000B                     i2Led_open@led:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0xA
   996  00000B                     	ds	2
   997  00000D                     USARTReadString@i:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0xC
  1001  00000D                     	ds	2
  1002  00000F                     USARTReadString@tmp:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 1 bytes @ 0xE
  1006  00000F                     	ds	1
  1007  000010                     ??_ISR:
  1008                           
  1009                           ; 1 bytes @ 0xF
  1010  000010                     	ds	14
  1011  00001E                     ISR@tmp:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 20 bytes @ 0x1D
  1015  00001E                     	ds	20
  1016                           
  1017 ;;
  1018 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1019 ;;
  1020 ;; *************** function _main *****************
  1021 ;; Defined at:
  1022 ;;		line 17 in file "main.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  app             2   92[BANK0 ] struct .
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2  568[None  ] int 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         0       0       0       0       0       0       0
  1037 ;;      Locals:         0       2       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         0       2       0       0       0       0       0
  1040 ;;Total ram usage:        2 bytes
  1041 ;; Hardware stack levels required when called:   11
  1042 ;; This function calls:
  1043 ;;		_Application_init
  1044 ;;		_Application_loop
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text0
  1051  003152                     __ptext0:
  1052                           	opt callstack 0
  1053  003152                     _main:
  1054                           	opt callstack 20
  1055  003152                     
  1056                           ;main.c: 19:     Application app = Application_init();
  1057  003152  EC99  F010         	call	_Application_init	;wreg free
  1058  003156  C1D7  F0DC         	movff	?_Application_init,main@app
  1059  00315A  C1D8  F0DD         	movff	?_Application_init+1,main@app+1
  1060  00315E                     l569:
  1061                           
  1062                           ;main.c: 24:         Application_loop(&app);
  1063  00315E  0EDC               	movlw	low main@app
  1064  003160  0100               	movlb	0	; () banked
  1065  003162  6F8C               	movwf	Application_loop@app& (0+255),b
  1066  003164  0E00               	movlw	high main@app
  1067  003166  6F8D               	movwf	(Application_loop@app+1)& (0+255),b
  1068  003168  ECD7  F014         	call	_Application_loop	;wreg free
  1069  00316C  EFAF  F018         	goto	l569
  1070  003170  EF07  F000         	goto	start
  1071  003174                     __end_of_main:
  1072                           	opt callstack 0
  1073                           
  1074 ;; *************** function _Application_loop *****************
  1075 ;; Defined at:
  1076 ;;		line 79 in file "application/Application.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  app             2   12[BANK0 ] PTR struct .
  1079 ;;		 -> main@app(2), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1091 ;;      Params:         0       2       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0
  1094 ;;      Totals:         0       2       0       0       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    9
  1098 ;; This function calls:
  1099 ;;		_Button_isPressed
  1100 ;;		_Led_close
  1101 ;;		_Led_open
  1102 ;;		_USARTWriteLine
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text1
  1109  0029AE                     __ptext1:
  1110                           	opt callstack 0
  1111  0029AE                     _Application_loop:
  1112                           	opt callstack 21
  1113  0029AE                     
  1114                           ;application/Application.c: 89:     Led_open(&redLed);
  1115  0029AE  0E3C               	movlw	low _redLed
  1116  0029B0  0100               	movlb	0	; () banked
  1117  0029B2  6F8A               	movwf	Led_open@led& (0+255),b
  1118  0029B4  0E00               	movlw	high _redLed
  1119  0029B6  6F8B               	movwf	(Led_open@led+1)& (0+255),b
  1120  0029B8  ECEE  F017         	call	_Led_open	;wreg free
  1121                           
  1122                           ;application/Application.c: 92:     if (Button_isPressed(&button)) {
  1123  0029BC  0E38               	movlw	low _button
  1124  0029BE  0100               	movlb	0	; () banked
  1125  0029C0  6F87               	movwf	Button_isPressed@button& (0+255),b
  1126  0029C2  0E00               	movlw	high _button
  1127  0029C4  6F88               	movwf	(Button_isPressed@button+1)& (0+255),b
  1128  0029C6  EC96  F018         	call	_Button_isPressed	;wreg free
  1129  0029CA  0100               	movlb	0	; () banked
  1130  0029CC  5187               	movf	?_Button_isPressed& (0+255),w,b
  1131  0029CE  1188               	iorwf	(?_Button_isPressed+1)& (0+255),w,b
  1132  0029D0  B4D8               	btfsc	status,2,c
  1133  0029D2  EFED  F014         	goto	u5681
  1134  0029D6  EFEF  F014         	goto	u5680
  1135  0029DA                     u5681:
  1136  0029DA  EF12  F015         	goto	l5088
  1137  0029DE                     u5680:
  1138  0029DE                     
  1139                           ; BSR set to: 0
  1140                           ;application/Application.c: 94:         usart.writeLine("basÄ±ldÄ±");
  1141  0029DE  0E9A               	movlw	low STR_1
  1142  0029E0  6F82               	movwf	USARTWriteLine@ln& (0+255),b
  1143  0029E2  0E06               	movlw	high STR_1
  1144  0029E4  6F83               	movwf	(USARTWriteLine@ln+1)& (0+255),b
  1145  0029E6  EE21  F059         	lfsr	2,_usart+10
  1146  0029EA  D802               	call	u5698
  1147  0029EC  EF02  F015         	goto	u5699
  1148  0029F0                     u5698:
  1149  0029F0  0005               	push	
  1150  0029F2  6EFA               	movwf	pclath,c
  1151  0029F4  50DE               	movf	postinc2,w,c
  1152  0029F6  6EFD               	movwf	tosl,c
  1153  0029F8  50DE               	movf	postinc2,w,c
  1154  0029FA  6EFE               	movwf	tosh,c
  1155  0029FC  50F8               	movf	tblptru,w,c
  1156  0029FE  6EFF               	movwf	tosu,c
  1157  002A00  50FA               	movf	pclath,w,c
  1158  002A02  0012               	return		;indir
  1159  002A04                     u5699:
  1160  002A04                     
  1161                           ;application/Application.c: 95:         Led_open(&blueLed);
  1162  002A04  0E40               	movlw	low _blueLed
  1163  002A06  0100               	movlb	0	; () banked
  1164  002A08  6F8A               	movwf	Led_open@led& (0+255),b
  1165  002A0A  0E00               	movlw	high _blueLed
  1166  002A0C  6F8B               	movwf	(Led_open@led+1)& (0+255),b
  1167  002A0E  ECEE  F017         	call	_Led_open	;wreg free
  1168  002A12                     
  1169                           ;application/Application.c: 96:         Led_close(&yellowLed);
  1170  002A12  0E44               	movlw	low _yellowLed
  1171  002A14  0100               	movlb	0	; () banked
  1172  002A16  6F8A               	movwf	Led_close@led& (0+255),b
  1173  002A18  0E00               	movlw	high _yellowLed
  1174  002A1A  6F8B               	movwf	(Led_close@led+1)& (0+255),b
  1175  002A1C  EC04  F018         	call	_Led_close	;wreg free
  1176                           
  1177                           ;application/Application.c: 98:     } else {
  1178  002A20  EF18  F015         	goto	l70
  1179  002A24                     l5088:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;application/Application.c: 101:         Led_close(&blueLed);
  1183  002A24  0E40               	movlw	low _blueLed
  1184  002A26  6F8A               	movwf	Led_close@led& (0+255),b
  1185  002A28  0E00               	movlw	high _blueLed
  1186  002A2A  6F8B               	movwf	(Led_close@led+1)& (0+255),b
  1187  002A2C  EC04  F018         	call	_Led_close	;wreg free
  1188  002A30                     l70:
  1189  002A30  0012               	return		;funcret
  1190  002A32                     __end_of_Application_loop:
  1191                           	opt callstack 0
  1192                           
  1193 ;; *************** function _USARTWriteLine *****************
  1194 ;; Defined at:
  1195 ;;		line 93 in file "usart/UsartFunctions.h"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  ln              2    2[BANK0 ] PTR const unsigned char 
  1198 ;;		 -> ISR@tmp(20), STR_1(10), 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1210 ;;      Params:         0       2       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0
  1213 ;;      Totals:         0       2       0       0       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    6
  1217 ;; This function calls:
  1218 ;;		_USARTWriteString
  1219 ;; This function is called by:
  1220 ;;		_setupFunctions
  1221 ;;		_Application_loop
  1222 ;;		_ISR
  1223 ;;		_printDebug
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text2
  1228  003106                     __ptext2:
  1229                           	opt callstack 0
  1230  003106                     _USARTWriteLine:
  1231                           	opt callstack 0
  1232                           
  1233                           ;Skip over the trampoline to the duplicate function for level 2
  1234  003106  A260               	btfss	int$flags,1,c
  1235  003108  EF88  F018         	goto	_USARTWriteLine$intlevel0
  1236  00310C  EF43  F019         	goto	i2_USARTWriteLine
  1237  003110                     _USARTWriteLine$intlevel0:
  1238                           	opt callstack 23
  1239  003110                     
  1240                           ;usart/UsartFunctions.h: 94:     USARTWriteString(ln);
  1241  003110  C082  F080         	movff	USARTWriteLine@ln,USARTWriteString@str
  1242  003114  C083  F081         	movff	USARTWriteLine@ln+1,USARTWriteString@str+1
  1243  003118  ECD4  F015         	call	_USARTWriteString	;wreg free
  1244                           
  1245                           ;usart/UsartFunctions.h: 95:     USARTWriteString("\r\n");
  1246  00311C  0EA4               	movlw	low STR_2
  1247  00311E  0100               	movlb	0	; () banked
  1248  003120  6F80               	movwf	USARTWriteString@str& (0+255),b
  1249  003122  0E06               	movlw	high STR_2
  1250  003124  6F81               	movwf	(USARTWriteString@str+1)& (0+255),b
  1251  003126  ECD4  F015         	call	_USARTWriteString	;wreg free
  1252  00312A  0012               	return		;funcret
  1253  00312C                     __end_of_USARTWriteLine:
  1254                           	opt callstack 0
  1255                           
  1256 ;; *************** function _USARTWriteString *****************
  1257 ;; Defined at:
  1258 ;;		line 71 in file "usart/UsartFunctions.h"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  1261 ;;		 -> STR_2(3), ISR@tmp(20), STR_1(10), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1273 ;;      Params:         0       2       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0
  1276 ;;      Totals:         0       2       0       0       0       0       0
  1277 ;;Total ram usage:        2 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    5
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_USARTWriteLine
  1284 ;;		_setupFunctions
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text3
  1289  002BA8                     __ptext3:
  1290                           	opt callstack 0
  1291  002BA8                     _USARTWriteString:
  1292                           	opt callstack 0
  1293                           
  1294                           ;Skip over the trampoline to the duplicate function for level 2
  1295  002BA8  A260               	btfss	int$flags,1,c
  1296  002BAA  EFD9  F015         	goto	_USARTWriteString$intlevel0
  1297  002BAE  EF83  F016         	goto	i2_USARTWriteString
  1298  002BB2                     _USARTWriteString$intlevel0:
  1299                           	opt callstack 23
  1300  002BB2                     
  1301                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  1302  002BB2  EFF6  F015         	goto	l4442
  1303  002BB6                     l425:
  1304  002BB6  A89E               	btfss	3998,4,c	;volatile
  1305  002BB8  EFE0  F015         	goto	u4721
  1306  002BBC  EFE2  F015         	goto	u4720
  1307  002BC0                     u4721:
  1308  002BC0  EFDB  F015         	goto	l425
  1309  002BC4                     u4720:
  1310  002BC4                     
  1311                           ;usart/UsartFunctions.h: 77:         TXREG = (*str);
  1312  002BC4  C080  FFF6         	movff	USARTWriteString@str,tblptrl
  1313  002BC8  C081  FFF7         	movff	USARTWriteString@str+1,tblptrh
  1314  002BCC  6AF8               	clrf	tblptru,c
  1315  002BCE  0E05               	movlw	(high __ramtop+-1)
  1316  002BD0  64F7               	cpfsgt	tblptrh,c
  1317  002BD2  D003               	bra	u4737
  1318  002BD4  0008               	tblrd		*
  1319  002BD6  50F5               	movf	tablat,w,c
  1320  002BD8  D005               	bra	u4730
  1321  002BDA                     u4737:
  1322  002BDA  CFF6 FFE9          	movff	tblptrl,fsr0l
  1323  002BDE  CFF7 FFEA          	movff	tblptrh,fsr0h
  1324  002BE2  50EF               	movf	indf0,w,c
  1325  002BE4                     u4730:
  1326  002BE4  6EAD               	movwf	173,c	;volatile
  1327  002BE6                     
  1328                           ;usart/UsartFunctions.h: 80:         str++;
  1329  002BE6  0100               	movlb	0	; () banked
  1330  002BE8  4B80               	infsnz	USARTWriteString@str& (0+255),f,b
  1331  002BEA  2B81               	incf	(USARTWriteString@str+1)& (0+255),f,b
  1332  002BEC                     l4442:
  1333                           
  1334                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  1335  002BEC  C080  FFF6         	movff	USARTWriteString@str,tblptrl
  1336  002BF0  C081  FFF7         	movff	USARTWriteString@str+1,tblptrh
  1337  002BF4  6AF8               	clrf	tblptru,c
  1338  002BF6  0E05               	movlw	(high __ramtop+-1)
  1339  002BF8  64F7               	cpfsgt	tblptrh,c
  1340  002BFA  D003               	bra	u4747
  1341  002BFC  0008               	tblrd		*
  1342  002BFE  50F5               	movf	tablat,w,c
  1343  002C00  D005               	bra	u4740
  1344  002C02                     u4747:
  1345  002C02  CFF6 FFE9          	movff	tblptrl,fsr0l
  1346  002C06  CFF7 FFEA          	movff	tblptrh,fsr0h
  1347  002C0A  50EF               	movf	indf0,w,c
  1348  002C0C                     u4740:
  1349  002C0C  0900               	iorlw	0
  1350  002C0E  A4D8               	btfss	status,2,c
  1351  002C10  EF0C  F016         	goto	u4751
  1352  002C14  EF0E  F016         	goto	u4750
  1353  002C18                     u4751:
  1354  002C18  EFDB  F015         	goto	l425
  1355  002C1C                     u4750:
  1356  002C1C  0012               	return		;funcret
  1357  002C1E                     __end_of_USARTWriteString:
  1358                           	opt callstack 0
  1359                           
  1360 ;; *************** function _Led_open *****************
  1361 ;; Defined at:
  1362 ;;		line 11 in file "led/Led.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  led             2   10[BANK0 ] PTR struct Led
  1365 ;;		 -> blueLed(4), redLed(4), yellowLed(4), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1377 ;;      Params:         0       2       0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0
  1380 ;;      Totals:         0       2       0       0       0       0       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    8
  1384 ;; This function calls:
  1385 ;;		_DigitalOutput_open
  1386 ;; This function is called by:
  1387 ;;		_Application_loop
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text4
  1392  002FDC                     __ptext4:
  1393                           	opt callstack 0
  1394  002FDC                     _Led_open:
  1395                           	opt callstack 21
  1396  002FDC                     
  1397                           ;led/Led.c: 12:     led->isOpen = 1;
  1398  002FDC  0100               	movlb	0	; () banked
  1399  002FDE  EE20 F002          	lfsr	2,2
  1400  002FE2  518A               	movf	Led_open@led& (0+255),w,b
  1401  002FE4  26D9               	addwf	fsr2l,f,c
  1402  002FE6  518B               	movf	(Led_open@led+1)& (0+255),w,b
  1403  002FE8  22DA               	addwfc	fsr2h,f,c
  1404  002FEA  0E01               	movlw	1
  1405  002FEC  6EDE               	movwf	postinc2,c
  1406  002FEE  0E00               	movlw	0
  1407  002FF0  6EDD               	movwf	postdec2,c
  1408  002FF2                     
  1409                           ; BSR set to: 0
  1410                           ;led/Led.c: 13:     DigitalOutput_open(led->output);
  1411  002FF2  C08A  FFD9         	movff	Led_open@led,fsr2l
  1412  002FF6  C08B  FFDA         	movff	Led_open@led+1,fsr2h
  1413  002FFA  CFDE F088          	movff	postinc2,DigitalOutput_open@output
  1414  002FFE  CFDD F089          	movff	postdec2,DigitalOutput_open@output+1
  1415  003002  EC1A  F018         	call	_DigitalOutput_open	;wreg free
  1416  003006  0012               	return		;funcret
  1417  003008                     __end_of_Led_open:
  1418                           	opt callstack 0
  1419                           
  1420 ;; *************** function _Led_close *****************
  1421 ;; Defined at:
  1422 ;;		line 16 in file "led/Led.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  led             2   10[BANK0 ] PTR struct Led
  1425 ;;		 -> blueLed(4), yellowLed(4), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       2       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0
  1440 ;;      Totals:         0       2       0       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    8
  1444 ;; This function calls:
  1445 ;;		_DigitalOutput_close
  1446 ;; This function is called by:
  1447 ;;		_Application_loop
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text5
  1452  003008                     __ptext5:
  1453                           	opt callstack 0
  1454  003008                     _Led_close:
  1455                           	opt callstack 21
  1456  003008                     
  1457                           ;led/Led.c: 17:     led->isOpen = 0;
  1458  003008  0100               	movlb	0	; () banked
  1459  00300A  EE20 F002          	lfsr	2,2
  1460  00300E  518A               	movf	Led_close@led& (0+255),w,b
  1461  003010  26D9               	addwf	fsr2l,f,c
  1462  003012  518B               	movf	(Led_close@led+1)& (0+255),w,b
  1463  003014  22DA               	addwfc	fsr2h,f,c
  1464  003016  0E00               	movlw	0
  1465  003018  6EDE               	movwf	postinc2,c
  1466  00301A  0E00               	movlw	0
  1467  00301C  6EDD               	movwf	postdec2,c
  1468  00301E                     
  1469                           ; BSR set to: 0
  1470                           ;led/Led.c: 18:     DigitalOutput_close(led->output);
  1471  00301E  C08A  FFD9         	movff	Led_close@led,fsr2l
  1472  003022  C08B  FFDA         	movff	Led_close@led+1,fsr2h
  1473  003026  CFDE F088          	movff	postinc2,DigitalOutput_close@output
  1474  00302A  CFDD F089          	movff	postdec2,DigitalOutput_close@output+1
  1475  00302E  EC30  F018         	call	_DigitalOutput_close	;wreg free
  1476  003032  0012               	return		;funcret
  1477  003034                     __end_of_Led_close:
  1478                           	opt callstack 0
  1479                           
  1480 ;; *************** function _Button_isPressed *****************
  1481 ;; Defined at:
  1482 ;;		line 17 in file "button/Button.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  button          2    7[BANK0 ] PTR struct Button
  1485 ;;		 -> button(4), 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  value           2    9[BANK0 ] int 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2    7[BANK0 ] int 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         0       2       0       0       0       0       0
  1498 ;;      Locals:         0       2       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0
  1500 ;;      Totals:         0       4       0       0       0       0       0
  1501 ;;Total ram usage:        4 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    7
  1504 ;; This function calls:
  1505 ;;		_DigitalInput_getValue
  1506 ;; This function is called by:
  1507 ;;		_Application_loop
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text6
  1512  00312C                     __ptext6:
  1513                           	opt callstack 0
  1514  00312C                     _Button_isPressed:
  1515                           	opt callstack 22
  1516  00312C                     
  1517                           ;button/Button.c: 18:     int value = DigitalInput_getValue(button->input) ;
  1518  00312C  C087  FFD9         	movff	Button_isPressed@button,fsr2l
  1519  003130  C088  FFDA         	movff	Button_isPressed@button+1,fsr2h
  1520  003134  CFDE F083          	movff	postinc2,DigitalInput_getValue@input
  1521  003138  CFDD F084          	movff	postdec2,DigitalInput_getValue@input+1
  1522  00313C  ECB8  F016         	call	_DigitalInput_getValue	;wreg free
  1523  003140  C083  F089         	movff	?_DigitalInput_getValue,Button_isPressed@value
  1524  003144  C084  F08A         	movff	?_DigitalInput_getValue+1,Button_isPressed@value+1
  1525  003148                     
  1526                           ;button/Button.c: 19:     return value;
  1527  003148  C089  F087         	movff	Button_isPressed@value,?_Button_isPressed
  1528  00314C  C08A  F088         	movff	Button_isPressed@value+1,?_Button_isPressed+1
  1529  003150  0012               	return		;funcret
  1530  003152                     __end_of_Button_isPressed:
  1531                           	opt callstack 0
  1532                           
  1533 ;; *************** function _DigitalInput_getValue *****************
  1534 ;; Defined at:
  1535 ;;		line 13 in file "io/digitalinput/DigitalInput.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  input           2    3[BANK0 ] PTR struct DigitalInput
  1538 ;;		 -> button1Input(2), 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  val             2    5[BANK0 ] int 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2    3[BANK0 ] int 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         0       2       0       0       0       0       0
  1551 ;;      Locals:         0       2       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0
  1553 ;;      Totals:         0       4       0       0       0       0       0
  1554 ;;Total ram usage:        4 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    6
  1557 ;; This function calls:
  1558 ;;		_button1Read
  1559 ;; This function is called by:
  1560 ;;		_Button_isPressed
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text7
  1565  002D70                     __ptext7:
  1566                           	opt callstack 0
  1567  002D70                     _DigitalInput_getValue:
  1568                           	opt callstack 22
  1569  002D70                     
  1570                           ;io/digitalinput/DigitalInput.c: 14:     int val = input->read(input);
  1571  002D70  C083  F080         	movff	DigitalInput_getValue@input,button1Read@in
  1572  002D74  C084  F081         	movff	DigitalInput_getValue@input+1,button1Read@in+1
  1573  002D78  C083  FFD9         	movff	DigitalInput_getValue@input,fsr2l
  1574  002D7C  C084  FFDA         	movff	DigitalInput_getValue@input+1,fsr2h
  1575  002D80  D802               	call	u4648
  1576  002D82  EFCD  F016         	goto	u4649
  1577  002D86                     u4648:
  1578  002D86  0005               	push	
  1579  002D88  6EFA               	movwf	pclath,c
  1580  002D8A  50DE               	movf	postinc2,w,c
  1581  002D8C  6EFD               	movwf	tosl,c
  1582  002D8E  50DE               	movf	postinc2,w,c
  1583  002D90  6EFE               	movwf	tosh,c
  1584  002D92  50F8               	movf	tblptru,w,c
  1585  002D94  6EFF               	movwf	tosu,c
  1586  002D96  50FA               	movf	pclath,w,c
  1587  002D98  0012               	return		;indir
  1588  002D9A                     u4649:
  1589  002D9A  C080  F085         	movff	?_button1Read,DigitalInput_getValue@val
  1590  002D9E  C081  F086         	movff	?_button1Read+1,DigitalInput_getValue@val+1
  1591  002DA2                     
  1592                           ;io/digitalinput/DigitalInput.c: 15:     if(val){
  1593  002DA2  0100               	movlb	0	; () banked
  1594  002DA4  5185               	movf	DigitalInput_getValue@val& (0+255),w,b
  1595  002DA6  1186               	iorwf	(DigitalInput_getValue@val+1)& (0+255),w,b
  1596  002DA8  B4D8               	btfsc	status,2,c
  1597  002DAA  EFD9  F016         	goto	u4651
  1598  002DAE  EFDB  F016         	goto	u4650
  1599  002DB2                     u4651:
  1600  002DB2  EFE1  F016         	goto	l4390
  1601  002DB6                     u4650:
  1602  002DB6                     
  1603                           ; BSR set to: 0
  1604                           ;io/digitalinput/DigitalInput.c: 16:         return val;
  1605  002DB6  C085  F083         	movff	DigitalInput_getValue@val,?_DigitalInput_getValue
  1606  002DBA  C086  F084         	movff	DigitalInput_getValue@val+1,?_DigitalInput_getValue+1
  1607  002DBE  EFE5  F016         	goto	l172
  1608  002DC2                     l4390:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;io/digitalinput/DigitalInput.c: 19:     return 0;
  1612  002DC2  0E00               	movlw	0
  1613  002DC4  6F84               	movwf	(?_DigitalInput_getValue+1)& (0+255),b
  1614  002DC6  0E00               	movlw	0
  1615  002DC8  6F83               	movwf	?_DigitalInput_getValue& (0+255),b
  1616  002DCA                     l172:
  1617                           
  1618                           ; BSR set to: 0
  1619  002DCA  0012               	return		;funcret
  1620  002DCC                     __end_of_DigitalInput_getValue:
  1621                           	opt callstack 0
  1622                           
  1623 ;; *************** function _button1Read *****************
  1624 ;; Defined at:
  1625 ;;		line 8 in file "button/ButtonConfigurator.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  in              2    0[BANK0 ] PTR struct DigitalInput
  1628 ;;		 -> button1Input(2), 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2    0[BANK0 ] int 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1640 ;;      Params:         0       2       0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0
  1642 ;;      Temps:          0       1       0       0       0       0       0
  1643 ;;      Totals:         0       3       0       0       0       0       0
  1644 ;;Total ram usage:        3 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    5
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_ButtonConfigurator_config
  1651 ;;		_DigitalInput_getValue
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text8
  1656  003196                     __ptext8:
  1657                           	opt callstack 0
  1658  003196                     _button1Read:
  1659                           	opt callstack 22
  1660  003196                     
  1661                           ;button/ButtonConfigurator.c: 9:     return PORTDbits.RD2;
  1662  003196  B483               	btfsc	131,2,c	;volatile
  1663  003198  EFD0  F018         	goto	u4181
  1664  00319C  EFD5  F018         	goto	u4180
  1665  0031A0                     u4181:
  1666  0031A0  0100               	movlb	0	; () banked
  1667  0031A2  6B82               	clrf	??_button1Read& (0+255),b
  1668  0031A4  2B82               	incf	??_button1Read& (0+255),f,b
  1669  0031A6  EFD7  F018         	goto	u4188
  1670  0031AA                     u4180:
  1671  0031AA  0100               	movlb	0	; () banked
  1672  0031AC  6B82               	clrf	??_button1Read& (0+255),b
  1673  0031AE                     u4188:
  1674  0031AE  5182               	movf	??_button1Read& (0+255),w,b
  1675  0031B0  6F80               	movwf	?_button1Read& (0+255),b
  1676  0031B2  6B81               	clrf	(?_button1Read+1)& (0+255),b
  1677  0031B4                     
  1678                           ; BSR set to: 0
  1679  0031B4  0012               	return		;funcret
  1680  0031B6                     __end_of_button1Read:
  1681                           	opt callstack 0
  1682                           
  1683 ;; *************** function _Application_init *****************
  1684 ;; Defined at:
  1685 ;;		line 21 in file "application/Application.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  app             2   90[BANK0 ] struct .
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2  102[BANK1 ] struct .
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1699 ;;      Params:         0       0       2       0       0       0       0
  1700 ;;      Locals:         0       2       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0
  1702 ;;      Totals:         0       2       2       0       0       0       0
  1703 ;;Total ram usage:        4 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:   10
  1706 ;; This function calls:
  1707 ;;		_ButtonConfigurator_config
  1708 ;;		_Button_init
  1709 ;;		_LedConfigurator_config
  1710 ;;		_Led_init
  1711 ;;		_MotionController_control
  1712 ;;		_MotionController_init
  1713 ;;		_USARTInit
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text9
  1720  002132                     __ptext9:
  1721                           	opt callstack 0
  1722  002132                     _Application_init:
  1723                           	opt callstack 20
  1724  002132                     
  1725                           ;application/Application.c: 22:     Application app;;application/Application.c: 23:     
      +                          app.id = 0;
  1726  002132  0E00               	movlw	0
  1727  002134  0100               	movlb	0	; () banked
  1728  002136  6FDB               	movwf	(Application_init@app+1)& (0+255),b
  1729  002138  0E00               	movlw	0
  1730  00213A  6FDA               	movwf	Application_init@app& (0+255),b
  1731                           
  1732                           ;application/Application.c: 25:     LATA = 0;
  1733  00213C  0E00               	movlw	0
  1734  00213E  6E89               	movwf	137,c	;volatile
  1735                           
  1736                           ;application/Application.c: 26:     LATB = 0;
  1737  002140  0E00               	movlw	0
  1738  002142  6E8A               	movwf	138,c	;volatile
  1739                           
  1740                           ;application/Application.c: 27:     LATC = 0;
  1741  002144  0E00               	movlw	0
  1742  002146  6E8B               	movwf	139,c	;volatile
  1743                           
  1744                           ;application/Application.c: 28:     LATD = 0;
  1745  002148  0E00               	movlw	0
  1746  00214A  6E8C               	movwf	140,c	;volatile
  1747                           
  1748                           ;application/Application.c: 29:     LATE = 0;
  1749  00214C  0E00               	movlw	0
  1750  00214E  6E8D               	movwf	141,c	;volatile
  1751  002150                     
  1752                           ; BSR set to: 0
  1753                           ;application/Application.c: 30:     USARTInit(&usart, 9600);
  1754  002150  0E4F               	movlw	low _usart
  1755  002152  6F9A               	movwf	USARTInit@usart& (0+255),b
  1756  002154  0E01               	movlw	high _usart
  1757  002156  6F9B               	movwf	(USARTInit@usart+1)& (0+255),b
  1758  002158  0E80               	movlw	128
  1759  00215A  6F9C               	movwf	USARTInit@baudRate& (0+255),b
  1760  00215C  0E25               	movlw	37
  1761  00215E  6F9D               	movwf	(USARTInit@baudRate+1)& (0+255),b
  1762  002160  0E00               	movlw	0
  1763  002162  6F9E               	movwf	(USARTInit@baudRate+2)& (0+255),b
  1764  002164  0E00               	movlw	0
  1765  002166  6F9F               	movwf	(USARTInit@baudRate+3)& (0+255),b
  1766  002168  EC4D  F017         	call	_USARTInit	;wreg free
  1767  00216C                     
  1768                           ;application/Application.c: 31:     motionController = MotionController_init();
  1769  00216C  ECA7  F013         	call	_MotionController_init	;wreg free
  1770  002170  EE21  F019         	lfsr	2,_motionController
  1771  002174  0E35               	movlw	53
  1772  002176                     u5671:
  1773  002176  CFEB FFDB          	movff	plusw0,plusw2
  1774  00217A  06E8               	decf	wreg,f,c
  1775  00217C  E2FC               	bc	u5671
  1776  00217E                     
  1777                           ;application/Application.c: 32:     motionController.x.destinationCoord = 20;
  1778  00217E  0E00               	movlw	0
  1779  002180  0101               	movlb	1	; () banked
  1780  002182  6F1D               	movwf	(_motionController+4)& (0+255),b
  1781  002184  0E00               	movlw	0
  1782  002186  6F1E               	movwf	(_motionController+5)& (0+255),b
  1783  002188  0EA0               	movlw	160
  1784  00218A  6F1F               	movwf	(_motionController+6)& (0+255),b
  1785  00218C  0E41               	movlw	65
  1786  00218E  6F20               	movwf	(_motionController+7)& (0+255),b
  1787  002190                     
  1788                           ; BSR set to: 1
  1789                           ;application/Application.c: 33:     motionController.y.destinationCoord = 60;
  1790  002190  0E00               	movlw	0
  1791  002192  6F2F               	movwf	(_motionController+22)& (0+255),b
  1792  002194  0E00               	movlw	0
  1793  002196  6F30               	movwf	(_motionController+23)& (0+255),b
  1794  002198  0E70               	movlw	112
  1795  00219A  6F31               	movwf	(_motionController+24)& (0+255),b
  1796  00219C  0E42               	movlw	66
  1797  00219E  6F32               	movwf	(_motionController+25)& (0+255),b
  1798  0021A0                     
  1799                           ; BSR set to: 1
  1800                           ;application/Application.c: 34:     motionController.z.destinationCoord = 150;
  1801  0021A0  0E00               	movlw	0
  1802  0021A2  6F41               	movwf	(_motionController+40)& (0+255),b
  1803  0021A4  0E00               	movlw	0
  1804  0021A6  6F42               	movwf	(_motionController+41)& (0+255),b
  1805  0021A8  0E16               	movlw	22
  1806  0021AA  6F43               	movwf	(_motionController+42)& (0+255),b
  1807  0021AC  0E43               	movlw	67
  1808  0021AE  6F44               	movwf	(_motionController+43)& (0+255),b
  1809  0021B0                     
  1810                           ; BSR set to: 1
  1811                           ;application/Application.c: 38:     MotionController_control(&motionController);
  1812  0021B0  0E19               	movlw	low _motionController
  1813  0021B2  0100               	movlb	0	; () banked
  1814  0021B4  6FB4               	movwf	MotionController_control@motionController& (0+255),b
  1815  0021B6  0E01               	movlw	high _motionController
  1816  0021B8  6FB5               	movwf	(MotionController_control@motionController+1)& (0+255),b
  1817  0021BA  EC54  F003         	call	_MotionController_control	;wreg free
  1818  0021BE                     
  1819                           ;application/Application.c: 51:     LedConfigurator_config();
  1820  0021BE  EC49  F016         	call	_LedConfigurator_config	;wreg free
  1821  0021C2                     
  1822                           ;application/Application.c: 53:     yellowLed = Led_init(&yellowLedOutput);
  1823  0021C2  0E67               	movlw	low _yellowLedOutput
  1824  0021C4  0100               	movlb	0	; () banked
  1825  0021C6  6F80               	movwf	Led_init@output& (0+255),b
  1826  0021C8  0E01               	movlw	high _yellowLedOutput
  1827  0021CA  6F81               	movwf	(Led_init@output+1)& (0+255),b
  1828  0021CC  EC36  F019         	call	_Led_init	;wreg free
  1829  0021D0  C080  F044         	movff	?_Led_init,_yellowLed
  1830  0021D4  C081  F045         	movff	?_Led_init+1,_yellowLed+1
  1831  0021D8  C082  F046         	movff	?_Led_init+2,_yellowLed+2
  1832  0021DC  C083  F047         	movff	?_Led_init+3,_yellowLed+3
  1833  0021E0                     
  1834                           ;application/Application.c: 55:     redLed = Led_init(&redLedOutput);
  1835  0021E0  0E6B               	movlw	low _redLedOutput
  1836  0021E2  0100               	movlb	0	; () banked
  1837  0021E4  6F80               	movwf	Led_init@output& (0+255),b
  1838  0021E6  0E01               	movlw	high _redLedOutput
  1839  0021E8  6F81               	movwf	(Led_init@output+1)& (0+255),b
  1840  0021EA  EC36  F019         	call	_Led_init	;wreg free
  1841  0021EE  C080  F03C         	movff	?_Led_init,_redLed
  1842  0021F2  C081  F03D         	movff	?_Led_init+1,_redLed+1
  1843  0021F6  C082  F03E         	movff	?_Led_init+2,_redLed+2
  1844  0021FA  C083  F03F         	movff	?_Led_init+3,_redLed+3
  1845  0021FE                     
  1846                           ;application/Application.c: 57:     blueLed = Led_init(&blueLedOutput);
  1847  0021FE  0E63               	movlw	low _blueLedOutput
  1848  002200  0100               	movlb	0	; () banked
  1849  002202  6F80               	movwf	Led_init@output& (0+255),b
  1850  002204  0E01               	movlw	high _blueLedOutput
  1851  002206  6F81               	movwf	(Led_init@output+1)& (0+255),b
  1852  002208  EC36  F019         	call	_Led_init	;wreg free
  1853  00220C  C080  F040         	movff	?_Led_init,_blueLed
  1854  002210  C081  F041         	movff	?_Led_init+1,_blueLed+1
  1855  002214  C082  F042         	movff	?_Led_init+2,_blueLed+2
  1856  002218  C083  F043         	movff	?_Led_init+3,_blueLed+3
  1857  00221C                     
  1858                           ;application/Application.c: 59:     ButtonConfigurator_config();
  1859  00221C  EC0B  F019         	call	_ButtonConfigurator_config	;wreg free
  1860  002220                     
  1861                           ;application/Application.c: 61:     button = Button_init(&button1Input, 0);
  1862  002220  0E6F               	movlw	low _button1Input
  1863  002222  0100               	movlb	0	; () banked
  1864  002224  6F80               	movwf	Button_init@input& (0+255),b
  1865  002226  0E01               	movlw	high _button1Input
  1866  002228  6F81               	movwf	(Button_init@input+1)& (0+255),b
  1867  00222A  0E00               	movlw	0
  1868  00222C  6F82               	movwf	Button_init@onPressed& (0+255),b
  1869  00222E  0E00               	movlw	0
  1870  002230  6F83               	movwf	(Button_init@onPressed+1)& (0+255),b
  1871  002232  ECBA  F018         	call	_Button_init	;wreg free
  1872  002236  C080  F038         	movff	?_Button_init,_button
  1873  00223A  C081  F039         	movff	?_Button_init+1,_button+1
  1874  00223E  C082  F03A         	movff	?_Button_init+2,_button+2
  1875  002242  C083  F03B         	movff	?_Button_init+3,_button+3
  1876  002246                     
  1877                           ;application/Application.c: 75:     return app;
  1878  002246  C0DA  F1D7         	movff	Application_init@app,?_Application_init
  1879  00224A  C0DB  F1D8         	movff	Application_init@app+1,?_Application_init+1
  1880  00224E  0012               	return		;funcret
  1881  002250                     __end_of_Application_init:
  1882                           	opt callstack 0
  1883                           
  1884 ;; *************** function _USARTInit *****************
  1885 ;; Defined at:
  1886 ;;		line 42 in file "usart/Usart.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  usart           2   26[BANK0 ] PTR struct .
  1889 ;;		 -> usart(20), 
  1890 ;;  baudRate        4   28[BANK0 ] long 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1902 ;;      Params:         0       6       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0
  1905 ;;      Totals:         0       6       0       0       0       0       0
  1906 ;;Total ram usage:        6 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    7
  1909 ;; This function calls:
  1910 ;;		_calculateSpbrg
  1911 ;;		_enableInterrupts
  1912 ;;		_setupFunctions
  1913 ;; This function is called by:
  1914 ;;		_Application_init
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text10
  1919  002E9A                     __ptext10:
  1920                           	opt callstack 0
  1921  002E9A                     _USARTInit:
  1922                           	opt callstack 22
  1923  002E9A                     
  1924                           ;usart/Usart.c: 45:     enableInterrupts();
  1925  002E9A  ECB7  F019         	call	_enableInterrupts	;wreg free
  1926  002E9E                     
  1927                           ;usart/Usart.c: 47:      OSCCON = 0x72;
  1928  002E9E  0E72               	movlw	114
  1929  002EA0  6ED3               	movwf	211,c	;volatile
  1930  002EA2                     
  1931                           ;usart/Usart.c: 49:     BRGH = 1;
  1932  002EA2  84AC               	bsf	4012,2,c	;volatile
  1933  002EA4                     
  1934                           ;usart/Usart.c: 50:     SPBRG = calculateSpbrg(baudRate);
  1935  002EA4  C09C  F08E         	movff	USARTInit@baudRate,calculateSpbrg@baudRate
  1936  002EA8  C09D  F08F         	movff	USARTInit@baudRate+1,calculateSpbrg@baudRate+1
  1937  002EAC  C09E  F090         	movff	USARTInit@baudRate+2,calculateSpbrg@baudRate+2
  1938  002EB0  C09F  F091         	movff	USARTInit@baudRate+3,calculateSpbrg@baudRate+3
  1939  002EB4  EC0F  F016         	call	_calculateSpbrg	;wreg free
  1940  002EB8  0100               	movlb	0	; () banked
  1941  002EBA  518E               	movf	?_calculateSpbrg& (0+255),w,b
  1942  002EBC  6EAF               	movwf	175,c	;volatile
  1943  002EBE                     
  1944                           ; BSR set to: 0
  1945                           ;usart/Usart.c: 53:     SYNC = 0;
  1946  002EBE  98AC               	bcf	4012,4,c	;volatile
  1947  002EC0                     
  1948                           ; BSR set to: 0
  1949                           ;usart/Usart.c: 54:     SPEN = 1;
  1950  002EC0  8EAB               	bsf	4011,7,c	;volatile
  1951  002EC2                     
  1952                           ; BSR set to: 0
  1953                           ;usart/Usart.c: 56:     TRISC6 = 1;
  1954  002EC2  8C94               	bsf	3988,6,c	;volatile
  1955  002EC4                     
  1956                           ; BSR set to: 0
  1957                           ;usart/Usart.c: 57:     TRISC7 = 1;
  1958  002EC4  8E94               	bsf	3988,7,c	;volatile
  1959  002EC6                     
  1960                           ; BSR set to: 0
  1961                           ;usart/Usart.c: 58:     TXEN = 1;
  1962  002EC6  8AAC               	bsf	4012,5,c	;volatile
  1963  002EC8                     
  1964                           ; BSR set to: 0
  1965                           ;usart/Usart.c: 60:     CREN = 1;
  1966  002EC8  88AB               	bsf	4011,4,c	;volatile
  1967  002ECA                     
  1968                           ; BSR set to: 0
  1969                           ;usart/Usart.c: 61:     setupFunctions(usart);
  1970  002ECA  C09A  F080         	movff	USARTInit@usart,setupFunctions@usart
  1971  002ECE  C09B  F081         	movff	USARTInit@usart+1,setupFunctions@usart+1
  1972  002ED2  EC16  F014         	call	_setupFunctions	;wreg free
  1973  002ED6  0012               	return		;funcret
  1974  002ED8                     __end_of_USARTInit:
  1975                           	opt callstack 0
  1976                           
  1977 ;; *************** function _setupFunctions *****************
  1978 ;; Defined at:
  1979 ;;		line 12 in file "usart/Usart.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  usart           2    0[BANK0 ] PTR struct .
  1982 ;;		 -> usart(20), 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         0       2       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0
  1997 ;;      Totals:         0       2       0       0       0       0       0
  1998 ;;Total ram usage:        2 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    5
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_USARTInit
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text11
  2009  00282C                     __ptext11:
  2010                           	opt callstack 0
  2011  00282C                     _setupFunctions:
  2012                           	opt callstack 23
  2013  00282C                     
  2014                           ;usart/Usart.c: 14:     usart->isDataReady = USARTDataReady;
  2015  00282C  C080  FFD9         	movff	setupFunctions@usart,fsr2l
  2016  002830  C081  FFDA         	movff	setupFunctions@usart+1,fsr2h
  2017  002834  0E36               	movlw	low _USARTDataReady
  2018  002836  6EDE               	movwf	postinc2,c
  2019  002838  0E32               	movlw	high _USARTDataReady
  2020  00283A  6EDD               	movwf	postdec2,c
  2021  00283C                     
  2022                           ;usart/Usart.c: 17:     usart->readByte = USARTReadByte;
  2023  00283C  0100               	movlb	0	; () banked
  2024  00283E  EE20 F012          	lfsr	2,18
  2025  002842  5180               	movf	setupFunctions@usart& (0+255),w,b
  2026  002844  26D9               	addwf	fsr2l,f,c
  2027  002846  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2028  002848  22DA               	addwfc	fsr2h,f,c
  2029  00284A  0E00               	movlw	0
  2030  00284C  6EDE               	movwf	postinc2,c
  2031  00284E  0E00               	movlw	0
  2032  002850  6EDD               	movwf	postdec2,c
  2033  002852                     
  2034                           ; BSR set to: 0
  2035                           ;usart/Usart.c: 18:     usart->readChar = USARTReadChar;
  2036  002852  EE20 F002          	lfsr	2,2
  2037  002856  5180               	movf	setupFunctions@usart& (0+255),w,b
  2038  002858  26D9               	addwf	fsr2l,f,c
  2039  00285A  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2040  00285C  22DA               	addwfc	fsr2h,f,c
  2041  00285E  0EA0               	movlw	low _USARTReadChar
  2042  002860  6EDE               	movwf	postinc2,c
  2043  002862  0E32               	movlw	high _USARTReadChar
  2044  002864  6EDD               	movwf	postdec2,c
  2045  002866                     
  2046                           ; BSR set to: 0
  2047                           ;usart/Usart.c: 19:     usart->readString = USARTReadString;
  2048  002866  EE20 F004          	lfsr	2,4
  2049  00286A  5180               	movf	setupFunctions@usart& (0+255),w,b
  2050  00286C  26D9               	addwf	fsr2l,f,c
  2051  00286E  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2052  002870  22DA               	addwfc	fsr2h,f,c
  2053  002872  0EF4               	movlw	low _USARTReadString
  2054  002874  6EDE               	movwf	postinc2,c
  2055  002876  0E28               	movlw	high _USARTReadString
  2056  002878  6EDD               	movwf	postdec2,c
  2057  00287A                     
  2058                           ; BSR set to: 0
  2059                           ;usart/Usart.c: 22:     usart->writeByte = USARTWriteByte;
  2060  00287A  EE20 F006          	lfsr	2,6
  2061  00287E  5180               	movf	setupFunctions@usart& (0+255),w,b
  2062  002880  26D9               	addwf	fsr2l,f,c
  2063  002882  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2064  002884  22DA               	addwfc	fsr2h,f,c
  2065  002886  0E00               	movlw	0
  2066  002888  6EDE               	movwf	postinc2,c
  2067  00288A  0E00               	movlw	0
  2068  00288C  6EDD               	movwf	postdec2,c
  2069  00288E                     
  2070                           ; BSR set to: 0
  2071                           ;usart/Usart.c: 23:     usart->writeInt = USARTWriteInt;
  2072  00288E  EE20 F00C          	lfsr	2,12
  2073  002892  5180               	movf	setupFunctions@usart& (0+255),w,b
  2074  002894  26D9               	addwf	fsr2l,f,c
  2075  002896  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2076  002898  22DA               	addwfc	fsr2h,f,c
  2077  00289A  0E00               	movlw	0
  2078  00289C  6EDE               	movwf	postinc2,c
  2079  00289E  0E00               	movlw	0
  2080  0028A0  6EDD               	movwf	postdec2,c
  2081  0028A2                     
  2082                           ; BSR set to: 0
  2083                           ;usart/Usart.c: 24:     usart->writeLong = USARTWriteLong;
  2084  0028A2  EE20 F00E          	lfsr	2,14
  2085  0028A6  5180               	movf	setupFunctions@usart& (0+255),w,b
  2086  0028A8  26D9               	addwf	fsr2l,f,c
  2087  0028AA  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2088  0028AC  22DA               	addwfc	fsr2h,f,c
  2089  0028AE  0E00               	movlw	0
  2090  0028B0  6EDE               	movwf	postinc2,c
  2091  0028B2  0E00               	movlw	0
  2092  0028B4  6EDD               	movwf	postdec2,c
  2093  0028B6                     
  2094                           ; BSR set to: 0
  2095                           ;usart/Usart.c: 25:     usart->writeFloat = USARTWriteFloat;
  2096  0028B6  EE20 F010          	lfsr	2,16
  2097  0028BA  5180               	movf	setupFunctions@usart& (0+255),w,b
  2098  0028BC  26D9               	addwf	fsr2l,f,c
  2099  0028BE  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2100  0028C0  22DA               	addwfc	fsr2h,f,c
  2101  0028C2  0E00               	movlw	0
  2102  0028C4  6EDE               	movwf	postinc2,c
  2103  0028C6  0E00               	movlw	0
  2104  0028C8  6EDD               	movwf	postdec2,c
  2105  0028CA                     
  2106                           ; BSR set to: 0
  2107                           ;usart/Usart.c: 26:     usart->writeLine = USARTWriteLine;
  2108  0028CA  EE20 F00A          	lfsr	2,10
  2109  0028CE  5180               	movf	setupFunctions@usart& (0+255),w,b
  2110  0028D0  26D9               	addwf	fsr2l,f,c
  2111  0028D2  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2112  0028D4  22DA               	addwfc	fsr2h,f,c
  2113  0028D6  0E06               	movlw	low _USARTWriteLine
  2114  0028D8  6EDE               	movwf	postinc2,c
  2115  0028DA  0E31               	movlw	high _USARTWriteLine
  2116  0028DC  6EDD               	movwf	postdec2,c
  2117  0028DE                     
  2118                           ; BSR set to: 0
  2119                           ;usart/Usart.c: 27:     usart->writeString = USARTWriteString;
  2120  0028DE  EE20 F008          	lfsr	2,8
  2121  0028E2  5180               	movf	setupFunctions@usart& (0+255),w,b
  2122  0028E4  26D9               	addwf	fsr2l,f,c
  2123  0028E6  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  2124  0028E8  22DA               	addwfc	fsr2h,f,c
  2125  0028EA  0EA8               	movlw	low _USARTWriteString
  2126  0028EC  6EDE               	movwf	postinc2,c
  2127  0028EE  0E2B               	movlw	high _USARTWriteString
  2128  0028F0  6EDD               	movwf	postdec2,c
  2129  0028F2                     
  2130                           ; BSR set to: 0
  2131  0028F2  0012               	return		;funcret
  2132  0028F4                     __end_of_setupFunctions:
  2133                           	opt callstack 0
  2134                           
  2135 ;; *************** function _enableInterrupts *****************
  2136 ;; Defined at:
  2137 ;;		line 32 in file "usart/Usart.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		None
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2151 ;;      Params:         0       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    5
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_USARTInit
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text12
  2166  00336E                     __ptext12:
  2167                           	opt callstack 0
  2168  00336E                     _enableInterrupts:
  2169                           	opt callstack 23
  2170  00336E                     
  2171                           ;usart/Usart.c: 33:     GIE = 1;
  2172  00336E  8EF2               	bsf	4082,7,c	;volatile
  2173                           
  2174                           ;usart/Usart.c: 34:     PEIE = 1;
  2175  003370  8CF2               	bsf	4082,6,c	;volatile
  2176                           
  2177                           ;usart/Usart.c: 35:     RCIE = 1;
  2178  003372  8A9D               	bsf	3997,5,c	;volatile
  2179  003374  0012               	return		;funcret
  2180  003376                     __end_of_enableInterrupts:
  2181                           	opt callstack 0
  2182                           
  2183 ;; *************** function _calculateSpbrg *****************
  2184 ;; Defined at:
  2185 ;;		line 37 in file "usart/Usart.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  baudRate        4   14[BANK0 ] long 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  bolum           4   22[BANK0 ] long 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  4   14[BANK0 ] long 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2199 ;;      Params:         0       4       0       0       0       0       0
  2200 ;;      Locals:         0       4       0       0       0       0       0
  2201 ;;      Temps:          0       4       0       0       0       0       0
  2202 ;;      Totals:         0      12       0       0       0       0       0
  2203 ;;Total ram usage:       12 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    6
  2206 ;; This function calls:
  2207 ;;		___aldiv
  2208 ;; This function is called by:
  2209 ;;		_USARTInit
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text13
  2214  002C1E                     __ptext13:
  2215                           	opt callstack 0
  2216  002C1E                     _calculateSpbrg:
  2217                           	opt callstack 22
  2218  002C1E                     
  2219                           ;usart/Usart.c: 38:     long bolum = 16 * baudRate;
  2220  002C1E  C08E  F092         	movff	calculateSpbrg@baudRate,??_calculateSpbrg
  2221  002C22  C08F  F093         	movff	calculateSpbrg@baudRate+1,??_calculateSpbrg+1
  2222  002C26  C090  F094         	movff	calculateSpbrg@baudRate+2,??_calculateSpbrg+2
  2223  002C2A  C091  F095         	movff	calculateSpbrg@baudRate+3,??_calculateSpbrg+3
  2224  002C2E  0E04               	movlw	4
  2225  002C30                     u4765:
  2226  002C30  90D8               	bcf	status,0,c
  2227  002C32  0100               	movlb	0	; () banked
  2228  002C34  3792               	rlcf	??_calculateSpbrg& (0+255),f,b
  2229  002C36  3793               	rlcf	(??_calculateSpbrg+1)& (0+255),f,b
  2230  002C38  3794               	rlcf	(??_calculateSpbrg+2)& (0+255),f,b
  2231  002C3A  3795               	rlcf	(??_calculateSpbrg+3)& (0+255),f,b
  2232  002C3C  2EE8               	decfsz	wreg,f,c
  2233  002C3E  EF18  F016         	goto	u4765
  2234  002C42  C092  F096         	movff	??_calculateSpbrg,calculateSpbrg@bolum
  2235  002C46  C093  F097         	movff	??_calculateSpbrg+1,calculateSpbrg@bolum+1
  2236  002C4A  C094  F098         	movff	??_calculateSpbrg+2,calculateSpbrg@bolum+2
  2237  002C4E  C095  F099         	movff	??_calculateSpbrg+3,calculateSpbrg@bolum+3
  2238  002C52                     
  2239                           ; BSR set to: 0
  2240                           ;usart/Usart.c: 39:     return ((8000000 / bolum) - 1);
  2241  002C52  0E00               	movlw	0
  2242  002C54  6F80               	movwf	___aldiv@dividend& (0+255),b
  2243  002C56  0E12               	movlw	18
  2244  002C58  6F81               	movwf	(___aldiv@dividend+1)& (0+255),b
  2245  002C5A  0E7A               	movlw	122
  2246  002C5C  6F82               	movwf	(___aldiv@dividend+2)& (0+255),b
  2247  002C5E  0E00               	movlw	0
  2248  002C60  6F83               	movwf	(___aldiv@dividend+3)& (0+255),b
  2249  002C62  C096  F084         	movff	calculateSpbrg@bolum,___aldiv@divisor
  2250  002C66  C097  F085         	movff	calculateSpbrg@bolum+1,___aldiv@divisor+1
  2251  002C6A  C098  F086         	movff	calculateSpbrg@bolum+2,___aldiv@divisor+2
  2252  002C6E  C099  F087         	movff	calculateSpbrg@bolum+3,___aldiv@divisor+3
  2253  002C72  EC28  F011         	call	___aldiv	;wreg free
  2254  002C76  0EFF               	movlw	255
  2255  002C78  0100               	movlb	0	; () banked
  2256  002C7A  2580               	addwf	?___aldiv& (0+255),w,b
  2257  002C7C  6F8E               	movwf	?_calculateSpbrg& (0+255),b
  2258  002C7E  0EFF               	movlw	255
  2259  002C80  2181               	addwfc	(?___aldiv+1)& (0+255),w,b
  2260  002C82  6F8F               	movwf	(?_calculateSpbrg+1)& (0+255),b
  2261  002C84  0EFF               	movlw	255
  2262  002C86  2182               	addwfc	(?___aldiv+2)& (0+255),w,b
  2263  002C88  6F90               	movwf	(?_calculateSpbrg+2)& (0+255),b
  2264  002C8A  0EFF               	movlw	255
  2265  002C8C  2183               	addwfc	(?___aldiv+3)& (0+255),w,b
  2266  002C8E  6F91               	movwf	(?_calculateSpbrg+3)& (0+255),b
  2267  002C90                     
  2268                           ; BSR set to: 0
  2269  002C90  0012               	return		;funcret
  2270  002C92                     __end_of_calculateSpbrg:
  2271                           	opt callstack 0
  2272                           
  2273 ;; *************** function ___aldiv *****************
  2274 ;; Defined at:
  2275 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  dividend        4    0[BANK0 ] long 
  2278 ;;  divisor         4    4[BANK0 ] long 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  quotient        4   10[BANK0 ] long 
  2281 ;;  sign            1    9[BANK0 ] unsigned char 
  2282 ;;  counter         1    8[BANK0 ] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  4    0[BANK0 ] long 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2292 ;;      Params:         0       8       0       0       0       0       0
  2293 ;;      Locals:         0       6       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0
  2295 ;;      Totals:         0      14       0       0       0       0       0
  2296 ;;Total ram usage:       14 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    5
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_calculateSpbrg
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text14
  2307  002250                     __ptext14:
  2308                           	opt callstack 0
  2309  002250                     ___aldiv:
  2310                           	opt callstack 22
  2311  002250  0E00               	movlw	0
  2312  002252  0100               	movlb	0	; () banked
  2313  002254  6F89               	movwf	___aldiv@sign& (0+255),b
  2314  002256                     
  2315                           ; BSR set to: 0
  2316  002256  BF87               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  2317  002258  EF32  F011         	goto	u4190
  2318  00225C  EF30  F011         	goto	u4191
  2319  002260                     u4191:
  2320  002260  EF3C  F011         	goto	l4146
  2321  002264                     u4190:
  2322  002264                     
  2323                           ; BSR set to: 0
  2324  002264  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  2325  002266  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  2326  002268  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  2327  00226A  6D84               	negf	___aldiv@divisor& (0+255),b
  2328  00226C  0E00               	movlw	0
  2329  00226E  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  2330  002270  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  2331  002272  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  2332  002274                     
  2333                           ; BSR set to: 0
  2334  002274  0E01               	movlw	1
  2335  002276  6F89               	movwf	___aldiv@sign& (0+255),b
  2336  002278                     l4146:
  2337                           
  2338                           ; BSR set to: 0
  2339  002278  BF83               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  2340  00227A  EF43  F011         	goto	u4200
  2341  00227E  EF41  F011         	goto	u4201
  2342  002282                     u4201:
  2343  002282  EF4D  F011         	goto	l4152
  2344  002286                     u4200:
  2345  002286                     
  2346                           ; BSR set to: 0
  2347  002286  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  2348  002288  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  2349  00228A  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  2350  00228C  6D80               	negf	___aldiv@dividend& (0+255),b
  2351  00228E  0E00               	movlw	0
  2352  002290  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  2353  002292  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  2354  002294  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  2355  002296                     
  2356                           ; BSR set to: 0
  2357  002296  0E01               	movlw	1
  2358  002298  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  2359  00229A                     l4152:
  2360                           
  2361                           ; BSR set to: 0
  2362  00229A  0E00               	movlw	0
  2363  00229C  6F8A               	movwf	___aldiv@quotient& (0+255),b
  2364  00229E  0E00               	movlw	0
  2365  0022A0  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  2366  0022A2  0E00               	movlw	0
  2367  0022A4  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  2368  0022A6  0E00               	movlw	0
  2369  0022A8  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  2370  0022AA                     
  2371                           ; BSR set to: 0
  2372  0022AA  5184               	movf	___aldiv@divisor& (0+255),w,b
  2373  0022AC  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  2374  0022AE  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  2375  0022B0  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  2376  0022B2  B4D8               	btfsc	status,2,c
  2377  0022B4  EF5E  F011         	goto	u4211
  2378  0022B8  EF60  F011         	goto	u4210
  2379  0022BC                     u4211:
  2380  0022BC  EF96  F011         	goto	l4174
  2381  0022C0                     u4210:
  2382  0022C0                     
  2383                           ; BSR set to: 0
  2384  0022C0  0E01               	movlw	1
  2385  0022C2  6F88               	movwf	___aldiv@counter& (0+255),b
  2386  0022C4  EF6A  F011         	goto	l4160
  2387  0022C8                     l4158:
  2388                           
  2389                           ; BSR set to: 0
  2390  0022C8  90D8               	bcf	status,0,c
  2391  0022CA  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  2392  0022CC  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  2393  0022CE  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  2394  0022D0  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  2395  0022D2  2B88               	incf	___aldiv@counter& (0+255),f,b
  2396  0022D4                     l4160:
  2397                           
  2398                           ; BSR set to: 0
  2399  0022D4  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  2400  0022D6  EF6F  F011         	goto	u4221
  2401  0022DA  EF71  F011         	goto	u4220
  2402  0022DE                     u4221:
  2403  0022DE  EF64  F011         	goto	l4158
  2404  0022E2                     u4220:
  2405  0022E2                     l4162:
  2406                           
  2407                           ; BSR set to: 0
  2408  0022E2  90D8               	bcf	status,0,c
  2409  0022E4  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  2410  0022E6  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  2411  0022E8  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  2412  0022EA  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  2413  0022EC                     
  2414                           ; BSR set to: 0
  2415  0022EC  5184               	movf	___aldiv@divisor& (0+255),w,b
  2416  0022EE  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  2417  0022F0  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2418  0022F2  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  2419  0022F4  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2420  0022F6  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  2421  0022F8  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2422  0022FA  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  2423  0022FC  A0D8               	btfss	status,0,c
  2424  0022FE  EF83  F011         	goto	u4231
  2425  002302  EF85  F011         	goto	u4230
  2426  002306                     u4231:
  2427  002306  EF8E  F011         	goto	l4170
  2428  00230A                     u4230:
  2429  00230A                     
  2430                           ; BSR set to: 0
  2431  00230A  5184               	movf	___aldiv@divisor& (0+255),w,b
  2432  00230C  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  2433  00230E  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2434  002310  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  2435  002312  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2436  002314  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  2437  002316  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2438  002318  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  2439  00231A                     
  2440                           ; BSR set to: 0
  2441  00231A  818A               	bsf	___aldiv@quotient& (0+255),0,b
  2442  00231C                     l4170:
  2443                           
  2444                           ; BSR set to: 0
  2445  00231C  90D8               	bcf	status,0,c
  2446  00231E  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  2447  002320  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  2448  002322  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  2449  002324  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  2450  002326                     
  2451                           ; BSR set to: 0
  2452  002326  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  2453  002328  EF71  F011         	goto	l4162
  2454  00232C                     l4174:
  2455                           
  2456                           ; BSR set to: 0
  2457  00232C  5189               	movf	___aldiv@sign& (0+255),w,b
  2458  00232E  B4D8               	btfsc	status,2,c
  2459  002330  EF9C  F011         	goto	u4241
  2460  002334  EF9E  F011         	goto	u4240
  2461  002338                     u4241:
  2462  002338  EFA6  F011         	goto	l4178
  2463  00233C                     u4240:
  2464  00233C                     
  2465                           ; BSR set to: 0
  2466  00233C  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2467  00233E  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2468  002340  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2469  002342  6D8A               	negf	___aldiv@quotient& (0+255),b
  2470  002344  0E00               	movlw	0
  2471  002346  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2472  002348  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2473  00234A  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2474  00234C                     l4178:
  2475                           
  2476                           ; BSR set to: 0
  2477  00234C  C08A  F080         	movff	___aldiv@quotient,?___aldiv
  2478  002350  C08B  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  2479  002354  C08C  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  2480  002358  C08D  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  2481  00235C                     
  2482                           ; BSR set to: 0
  2483  00235C  0012               	return		;funcret
  2484  00235E                     __end_of___aldiv:
  2485                           	opt callstack 0
  2486                           
  2487 ;; *************** function _MotionController_init *****************
  2488 ;; Defined at:
  2489 ;;		line 15 in file "motioncontroller/MotionController.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  motionContro   54    0[BANK1 ] struct MotionController
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  54   36[BANK0 ] struct MotionController
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2503 ;;      Params:         0      54       0       0       0       0       0
  2504 ;;      Locals:         0       0      54       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0
  2506 ;;      Totals:         0      54      54       0       0       0       0
  2507 ;;Total ram usage:      108 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    8
  2510 ;; This function calls:
  2511 ;;		_EngineConfigurator_configEngines
  2512 ;;		_Engine_init
  2513 ;;		_Engine_setStepPerMetrice
  2514 ;; This function is called by:
  2515 ;;		_Application_init
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text15
  2520  00274E                     __ptext15:
  2521                           	opt callstack 0
  2522  00274E                     _MotionController_init:
  2523                           	opt callstack 21
  2524  00274E                     
  2525                           ;motioncontroller/MotionController.c: 16:     MotionController motionController;;motionc
      +                          ontroller/MotionController.c: 17:     EngineConfigurator_configEngines();
  2526  00274E  EC34  F013         	call	_EngineConfigurator_configEngines	;wreg free
  2527  002752                     
  2528                           ;motioncontroller/MotionController.c: 18:     motionController.x = Engine_init(&xEngineM
      +                          otionOutput,&xEngineDirOutput);
  2529  002752  0E5C               	movlw	low _xEngineMotionOutput
  2530  002754  0100               	movlb	0	; () banked
  2531  002756  6F80               	movwf	Engine_init@motionOutput& (0+255),b
  2532  002758  0E00               	movlw	high _xEngineMotionOutput
  2533  00275A  6F81               	movwf	(Engine_init@motionOutput+1)& (0+255),b
  2534  00275C  0E50               	movlw	low _xEngineDirOutput
  2535  00275E  6F82               	movwf	Engine_init@dirOutput& (0+255),b
  2536  002760  0E00               	movlw	high _xEngineDirOutput
  2537  002762  6F83               	movwf	(Engine_init@dirOutput+1)& (0+255),b
  2538  002764  EC6C  F017         	call	_Engine_init	;wreg free
  2539  002768  EE21  F071         	lfsr	2,MotionController_init@motionController
  2540  00276C  0E11               	movlw	17
  2541  00276E                     u5421:
  2542  00276E  CFEB FFDB          	movff	plusw0,plusw2
  2543  002772  06E8               	decf	wreg,f,c
  2544  002774  E2FC               	bc	u5421
  2545  002776                     
  2546                           ;motioncontroller/MotionController.c: 19:     motionController.y = Engine_init(&yEngineM
      +                          otionOutput,&yEngineDirOutput);
  2547  002776  0E58               	movlw	low _yEngineMotionOutput
  2548  002778  0100               	movlb	0	; () banked
  2549  00277A  6F80               	movwf	Engine_init@motionOutput& (0+255),b
  2550  00277C  0E00               	movlw	high _yEngineMotionOutput
  2551  00277E  6F81               	movwf	(Engine_init@motionOutput+1)& (0+255),b
  2552  002780  0E4C               	movlw	low _yEngineDirOutput
  2553  002782  6F82               	movwf	Engine_init@dirOutput& (0+255),b
  2554  002784  0E00               	movlw	high _yEngineDirOutput
  2555  002786  6F83               	movwf	(Engine_init@dirOutput+1)& (0+255),b
  2556  002788  EC6C  F017         	call	_Engine_init	;wreg free
  2557  00278C  EE21  F083         	lfsr	2,MotionController_init@motionController+18
  2558  002790  0E11               	movlw	17
  2559  002792                     u5431:
  2560  002792  CFEB FFDB          	movff	plusw0,plusw2
  2561  002796  06E8               	decf	wreg,f,c
  2562  002798  E2FC               	bc	u5431
  2563  00279A                     
  2564                           ;motioncontroller/MotionController.c: 20:     motionController.z = Engine_init(&zEngineM
      +                          otionOutput,&zEngineDirOutput);
  2565  00279A  0E54               	movlw	low _zEngineMotionOutput
  2566  00279C  0100               	movlb	0	; () banked
  2567  00279E  6F80               	movwf	Engine_init@motionOutput& (0+255),b
  2568  0027A0  0E00               	movlw	high _zEngineMotionOutput
  2569  0027A2  6F81               	movwf	(Engine_init@motionOutput+1)& (0+255),b
  2570  0027A4  0E48               	movlw	low _zEngineDirOutput
  2571  0027A6  6F82               	movwf	Engine_init@dirOutput& (0+255),b
  2572  0027A8  0E00               	movlw	high _zEngineDirOutput
  2573  0027AA  6F83               	movwf	(Engine_init@dirOutput+1)& (0+255),b
  2574  0027AC  EC6C  F017         	call	_Engine_init	;wreg free
  2575  0027B0  EE21  F095         	lfsr	2,MotionController_init@motionController+36
  2576  0027B4  0E11               	movlw	17
  2577  0027B6                     u5441:
  2578  0027B6  CFEB FFDB          	movff	plusw0,plusw2
  2579  0027BA  06E8               	decf	wreg,f,c
  2580  0027BC  E2FC               	bc	u5441
  2581  0027BE                     
  2582                           ;motioncontroller/MotionController.c: 21:     Engine_setStepPerMetrice(&(motionControlle
      +                          r.x), 50);
  2583  0027BE  0E71               	movlw	low MotionController_init@motionController
  2584  0027C0  0100               	movlb	0	; () banked
  2585  0027C2  6F80               	movwf	Engine_setStepPerMetrice@engine& (0+255),b
  2586  0027C4  0E01               	movlw	high MotionController_init@motionController
  2587  0027C6  6F81               	movwf	(Engine_setStepPerMetrice@engine+1)& (0+255),b
  2588  0027C8  0E00               	movlw	0
  2589  0027CA  6F82               	movwf	Engine_setStepPerMetrice@stepPerMm& (0+255),b
  2590  0027CC  0E00               	movlw	0
  2591  0027CE  6F83               	movwf	(Engine_setStepPerMetrice@stepPerMm+1)& (0+255),b
  2592  0027D0  0E48               	movlw	72
  2593  0027D2  6F84               	movwf	(Engine_setStepPerMetrice@stepPerMm+2)& (0+255),b
  2594  0027D4  0E42               	movlw	66
  2595  0027D6  6F85               	movwf	(Engine_setStepPerMetrice@stepPerMm+3)& (0+255),b
  2596  0027D8  ECDB  F018         	call	_Engine_setStepPerMetrice	;wreg free
  2597  0027DC                     
  2598                           ;motioncontroller/MotionController.c: 22:     Engine_setStepPerMetrice(&(motionControlle
      +                          r.y), 50);
  2599  0027DC  0E83               	movlw	low (MotionController_init@motionController+18)
  2600  0027DE  0100               	movlb	0	; () banked
  2601  0027E0  6F80               	movwf	Engine_setStepPerMetrice@engine& (0+255),b
  2602  0027E2  0E01               	movlw	high (MotionController_init@motionController+18)
  2603  0027E4  6F81               	movwf	(Engine_setStepPerMetrice@engine+1)& (0+255),b
  2604  0027E6  0E00               	movlw	0
  2605  0027E8  6F82               	movwf	Engine_setStepPerMetrice@stepPerMm& (0+255),b
  2606  0027EA  0E00               	movlw	0
  2607  0027EC  6F83               	movwf	(Engine_setStepPerMetrice@stepPerMm+1)& (0+255),b
  2608  0027EE  0E48               	movlw	72
  2609  0027F0  6F84               	movwf	(Engine_setStepPerMetrice@stepPerMm+2)& (0+255),b
  2610  0027F2  0E42               	movlw	66
  2611  0027F4  6F85               	movwf	(Engine_setStepPerMetrice@stepPerMm+3)& (0+255),b
  2612  0027F6  ECDB  F018         	call	_Engine_setStepPerMetrice	;wreg free
  2613  0027FA                     
  2614                           ;motioncontroller/MotionController.c: 23:     Engine_setStepPerMetrice(&(motionControlle
      +                          r.z), 50);
  2615  0027FA  0E95               	movlw	low (MotionController_init@motionController+36)
  2616  0027FC  0100               	movlb	0	; () banked
  2617  0027FE  6F80               	movwf	Engine_setStepPerMetrice@engine& (0+255),b
  2618  002800  0E01               	movlw	high (MotionController_init@motionController+36)
  2619  002802  6F81               	movwf	(Engine_setStepPerMetrice@engine+1)& (0+255),b
  2620  002804  0E00               	movlw	0
  2621  002806  6F82               	movwf	Engine_setStepPerMetrice@stepPerMm& (0+255),b
  2622  002808  0E00               	movlw	0
  2623  00280A  6F83               	movwf	(Engine_setStepPerMetrice@stepPerMm+1)& (0+255),b
  2624  00280C  0E48               	movlw	72
  2625  00280E  6F84               	movwf	(Engine_setStepPerMetrice@stepPerMm+2)& (0+255),b
  2626  002810  0E42               	movlw	66
  2627  002812  6F85               	movwf	(Engine_setStepPerMetrice@stepPerMm+3)& (0+255),b
  2628  002814  ECDB  F018         	call	_Engine_setStepPerMetrice	;wreg free
  2629  002818                     
  2630                           ;motioncontroller/MotionController.c: 24:     return motionController;
  2631  002818  EE21  F071         	lfsr	2,MotionController_init@motionController
  2632  00281C  EE00  F0A4         	lfsr	0,?_MotionController_init
  2633  002820  0E35               	movlw	53
  2634  002822                     u5451:
  2635  002822  CFDB FFEB          	movff	plusw2,plusw0
  2636  002826  06E8               	decf	wreg,f,c
  2637  002828  E2FC               	bc	u5451
  2638  00282A  0012               	return		;funcret
  2639  00282C                     __end_of_MotionController_init:
  2640                           	opt callstack 0
  2641                           
  2642 ;; *************** function _Engine_setStepPerMetrice *****************
  2643 ;; Defined at:
  2644 ;;		line 11 in file "engine/Engine.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  engine          2    0[BANK0 ] PTR struct Engine
  2647 ;;		 -> MotionController_init@motionController(54), 
  2648 ;;  stepPerMm       4    2[BANK0 ] float 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2660 ;;      Params:         0       6       0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0
  2663 ;;      Totals:         0       6       0       0       0       0       0
  2664 ;;Total ram usage:        6 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    5
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_MotionController_init
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text16
  2675  0031B6                     __ptext16:
  2676                           	opt callstack 0
  2677  0031B6                     _Engine_setStepPerMetrice:
  2678                           	opt callstack 23
  2679  0031B6                     
  2680                           ;engine/Engine.c: 12:         engine->stepPerMetrice = stepPerMm;
  2681  0031B6  0100               	movlb	0	; () banked
  2682  0031B8  EE20 F00E          	lfsr	2,14
  2683  0031BC  5180               	movf	Engine_setStepPerMetrice@engine& (0+255),w,b
  2684  0031BE  26D9               	addwf	fsr2l,f,c
  2685  0031C0  5181               	movf	(Engine_setStepPerMetrice@engine+1)& (0+255),w,b
  2686  0031C2  22DA               	addwfc	fsr2h,f,c
  2687  0031C4  C082  FFDE         	movff	Engine_setStepPerMetrice@stepPerMm,postinc2
  2688  0031C8  C083  FFDE         	movff	Engine_setStepPerMetrice@stepPerMm+1,postinc2
  2689  0031CC  C084  FFDE         	movff	Engine_setStepPerMetrice@stepPerMm+2,postinc2
  2690  0031D0  C085  FFDE         	movff	Engine_setStepPerMetrice@stepPerMm+3,postinc2
  2691  0031D4                     
  2692                           ; BSR set to: 0
  2693  0031D4  0012               	return		;funcret
  2694  0031D6                     __end_of_Engine_setStepPerMetrice:
  2695                           	opt callstack 0
  2696                           
  2697 ;; *************** function _Engine_init *****************
  2698 ;; Defined at:
  2699 ;;		line 3 in file "engine/Engine.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  motionOutput    2    0[BANK0 ] PTR struct DigitalOutput
  2702 ;;		 -> zEngineMotionOutput(4), yEngineMotionOutput(4), xEngineMotionOutput(4), 
  2703 ;;  dirOutput       2    2[BANK0 ] PTR struct DigitalOutput
  2704 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  engine         18   18[BANK0 ] struct Engine
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  18    0[BANK0 ] struct Engine
  2709 ;; Registers used:
  2710 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2716 ;;      Params:         0      18       0       0       0       0       0
  2717 ;;      Locals:         0      18       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0
  2719 ;;      Totals:         0      36       0       0       0       0       0
  2720 ;;Total ram usage:       36 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    5
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_MotionController_init
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text17
  2731  002ED8                     __ptext17:
  2732                           	opt callstack 0
  2733  002ED8                     _Engine_init:
  2734                           	opt callstack 23
  2735  002ED8                     
  2736                           ;engine/Engine.c: 4:         Engine engine;;engine/Engine.c: 5:         engine.motionOut
      +                          put = motionOutput;
  2737  002ED8  C080  F09C         	movff	Engine_init@motionOutput,Engine_init@engine+10
  2738  002EDC  C081  F09D         	movff	Engine_init@motionOutput+1,Engine_init@engine+11
  2739                           
  2740                           ;engine/Engine.c: 6:         engine.dirOutput = dirOutput;
  2741  002EE0  C082  F09E         	movff	Engine_init@dirOutput,Engine_init@engine+12
  2742  002EE4  C083  F09F         	movff	Engine_init@dirOutput+1,Engine_init@engine+13
  2743  002EE8                     
  2744                           ;engine/Engine.c: 7:         engine.stepPerMetrice = 1;
  2745  002EE8  0E00               	movlw	0
  2746  002EEA  0100               	movlb	0	; () banked
  2747  002EEC  6FA0               	movwf	(Engine_init@engine+14)& (0+255),b
  2748  002EEE  0E00               	movlw	0
  2749  002EF0  6FA1               	movwf	(Engine_init@engine+15)& (0+255),b
  2750  002EF2  0E80               	movlw	128
  2751  002EF4  6FA2               	movwf	(Engine_init@engine+16)& (0+255),b
  2752  002EF6  0E3F               	movlw	63
  2753  002EF8  6FA3               	movwf	(Engine_init@engine+17)& (0+255),b
  2754  002EFA                     
  2755                           ; BSR set to: 0
  2756                           ;engine/Engine.c: 8:         return engine;
  2757  002EFA  EE20  F092         	lfsr	2,Engine_init@engine
  2758  002EFE  EE00  F080         	lfsr	0,?_Engine_init
  2759  002F02  0E11               	movlw	17
  2760  002F04                     u4661:
  2761  002F04  CFDB FFEB          	movff	plusw2,plusw0
  2762  002F08  06E8               	decf	wreg,f,c
  2763  002F0A  E2FC               	bc	u4661
  2764  002F0C                     
  2765                           ; BSR set to: 0
  2766  002F0C  0012               	return		;funcret
  2767  002F0E                     __end_of_Engine_init:
  2768                           	opt callstack 0
  2769                           
  2770 ;; *************** function _EngineConfigurator_configEngines *****************
  2771 ;; Defined at:
  2772 ;;		line 6 in file "motioncontroller/MotionController.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2786 ;;      Params:         0       0       0       0       0       0       0
  2787 ;;      Locals:         0       0       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0
  2789 ;;      Totals:         0       0       0       0       0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    7
  2793 ;; This function calls:
  2794 ;;		_DigitalOutput_init
  2795 ;; This function is called by:
  2796 ;;		_MotionController_init
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text18
  2801  002668                     __ptext18:
  2802                           	opt callstack 0
  2803  002668                     _EngineConfigurator_configEngines:
  2804                           	opt callstack 21
  2805  002668                     
  2806                           ;motioncontroller/MotionController.c: 7:     xEngineMotionOutput = DigitalOutput_init(xE
      +                          ngineMotionInit, xEngineMotionSet);
  2807  002668  0E92               	movlw	low _xEngineMotionInit
  2808  00266A  0100               	movlb	0	; () banked
  2809  00266C  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  2810  00266E  0E33               	movlw	high _xEngineMotionInit
  2811  002670  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2812  002672  0E02               	movlw	low _xEngineMotionSet
  2813  002674  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  2814  002676  0E33               	movlw	high _xEngineMotionSet
  2815  002678  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2816  00267A  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  2817  00267E  C080  F05C         	movff	?_DigitalOutput_init,_xEngineMotionOutput
  2818  002682  C081  F05D         	movff	?_DigitalOutput_init+1,_xEngineMotionOutput+1
  2819  002686  C082  F05E         	movff	?_DigitalOutput_init+2,_xEngineMotionOutput+2
  2820  00268A  C083  F05F         	movff	?_DigitalOutput_init+3,_xEngineMotionOutput+3
  2821                           
  2822                           ;motioncontroller/MotionController.c: 8:     yEngineMotionOutput = DigitalOutput_init(yE
      +                          ngineMotionInit, xEngineMotionSet);
  2823  00268E  0E8E               	movlw	low _yEngineMotionInit
  2824  002690  0100               	movlb	0	; () banked
  2825  002692  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  2826  002694  0E33               	movlw	high _yEngineMotionInit
  2827  002696  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2828  002698  0E02               	movlw	low _xEngineMotionSet
  2829  00269A  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  2830  00269C  0E33               	movlw	high _xEngineMotionSet
  2831  00269E  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2832  0026A0  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  2833  0026A4  C080  F058         	movff	?_DigitalOutput_init,_yEngineMotionOutput
  2834  0026A8  C081  F059         	movff	?_DigitalOutput_init+1,_yEngineMotionOutput+1
  2835  0026AC  C082  F05A         	movff	?_DigitalOutput_init+2,_yEngineMotionOutput+2
  2836  0026B0  C083  F05B         	movff	?_DigitalOutput_init+3,_yEngineMotionOutput+3
  2837                           
  2838                           ;motioncontroller/MotionController.c: 9:     zEngineMotionOutput = DigitalOutput_init(zE
      +                          ngineMotionInit, xEngineMotionSet);
  2839  0026B4  0E96               	movlw	low _zEngineMotionInit
  2840  0026B6  0100               	movlb	0	; () banked
  2841  0026B8  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  2842  0026BA  0E33               	movlw	high _zEngineMotionInit
  2843  0026BC  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2844  0026BE  0E02               	movlw	low _xEngineMotionSet
  2845  0026C0  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  2846  0026C2  0E33               	movlw	high _xEngineMotionSet
  2847  0026C4  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2848  0026C6  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  2849  0026CA  C080  F054         	movff	?_DigitalOutput_init,_zEngineMotionOutput
  2850  0026CE  C081  F055         	movff	?_DigitalOutput_init+1,_zEngineMotionOutput+1
  2851  0026D2  C082  F056         	movff	?_DigitalOutput_init+2,_zEngineMotionOutput+2
  2852  0026D6  C083  F057         	movff	?_DigitalOutput_init+3,_zEngineMotionOutput+3
  2853                           
  2854                           ;motioncontroller/MotionController.c: 10:     xEngineDirOutput = DigitalOutput_init(xEng
      +                          ineDirInit, xEngineDirSet);
  2855  0026DA  0E8A               	movlw	low _xEngineDirInit
  2856  0026DC  0100               	movlb	0	; () banked
  2857  0026DE  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  2858  0026E0  0E33               	movlw	high _xEngineDirInit
  2859  0026E2  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2860  0026E4  0EEA               	movlw	low _xEngineDirSet
  2861  0026E6  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  2862  0026E8  0E32               	movlw	high _xEngineDirSet
  2863  0026EA  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2864  0026EC  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  2865  0026F0  C080  F050         	movff	?_DigitalOutput_init,_xEngineDirOutput
  2866  0026F4  C081  F051         	movff	?_DigitalOutput_init+1,_xEngineDirOutput+1
  2867  0026F8  C082  F052         	movff	?_DigitalOutput_init+2,_xEngineDirOutput+2
  2868  0026FC  C083  F053         	movff	?_DigitalOutput_init+3,_xEngineDirOutput+3
  2869                           
  2870                           ;motioncontroller/MotionController.c: 11:     yEngineDirOutput = DigitalOutput_init(yEng
      +                          ineDirInit, xEngineDirSet);
  2871  002700  0E86               	movlw	low _yEngineDirInit
  2872  002702  0100               	movlb	0	; () banked
  2873  002704  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  2874  002706  0E33               	movlw	high _yEngineDirInit
  2875  002708  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2876  00270A  0EEA               	movlw	low _xEngineDirSet
  2877  00270C  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  2878  00270E  0E32               	movlw	high _xEngineDirSet
  2879  002710  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2880  002712  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  2881  002716  C080  F04C         	movff	?_DigitalOutput_init,_yEngineDirOutput
  2882  00271A  C081  F04D         	movff	?_DigitalOutput_init+1,_yEngineDirOutput+1
  2883  00271E  C082  F04E         	movff	?_DigitalOutput_init+2,_yEngineDirOutput+2
  2884  002722  C083  F04F         	movff	?_DigitalOutput_init+3,_yEngineDirOutput+3
  2885                           
  2886                           ;motioncontroller/MotionController.c: 12:     zEngineDirOutput = DigitalOutput_init(zEng
      +                          ineDirInit, xEngineDirSet);
  2887  002726  0E82               	movlw	low _zEngineDirInit
  2888  002728  0100               	movlb	0	; () banked
  2889  00272A  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  2890  00272C  0E33               	movlw	high _zEngineDirInit
  2891  00272E  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2892  002730  0EEA               	movlw	low _xEngineDirSet
  2893  002732  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  2894  002734  0E32               	movlw	high _xEngineDirSet
  2895  002736  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2896  002738  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  2897  00273C  C080  F048         	movff	?_DigitalOutput_init,_zEngineDirOutput
  2898  002740  C081  F049         	movff	?_DigitalOutput_init+1,_zEngineDirOutput+1
  2899  002744  C082  F04A         	movff	?_DigitalOutput_init+2,_zEngineDirOutput+2
  2900  002748  C083  F04B         	movff	?_DigitalOutput_init+3,_zEngineDirOutput+3
  2901  00274C  0012               	return		;funcret
  2902  00274E                     __end_of_EngineConfigurator_configEngines:
  2903                           	opt callstack 0
  2904                           
  2905 ;; *************** function _MotionController_control *****************
  2906 ;; Defined at:
  2907 ;;		line 28 in file "motioncontroller/MotionController.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  motionContro    2   52[BANK0 ] PTR struct MotionControl
  2910 ;;		 -> motionController(54), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  p2              4   56[BANK1 ] float 
  2913 ;;  p1              4   52[BANK1 ] float 
  2914 ;;  rateX           4   20[BANK1 ] float 
  2915 ;;  rateY           4   16[BANK1 ] float 
  2916 ;;  p2              4   48[BANK1 ] float 
  2917 ;;  p1              4   44[BANK1 ] float 
  2918 ;;  rateZ           4   12[BANK1 ] float 
  2919 ;;  rateX           4    8[BANK1 ] float 
  2920 ;;  p2              4   40[BANK1 ] float 
  2921 ;;  p1              4   36[BANK1 ] float 
  2922 ;;  rateZ           4    4[BANK1 ] float 
  2923 ;;  rateY           4    0[BANK1 ] float 
  2924 ;;  destinationC   12   78[BANK1 ] struct Point
  2925 ;;  currentCoord   12   66[BANK1 ] struct Point
  2926 ;;  intDy           4   98[BANK1 ] float 
  2927 ;;  intDx           4   94[BANK1 ] float 
  2928 ;;  intDz           4   90[BANK1 ] float 
  2929 ;;  dz              4   32[BANK1 ] float 
  2930 ;;  dy              4   28[BANK1 ] float 
  2931 ;;  dx              4   24[BANK1 ] float 
  2932 ;;  zs              2   64[BANK1 ] int 
  2933 ;;  ys              2   62[BANK1 ] int 
  2934 ;;  xs              2   60[BANK1 ] int 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2944 ;;      Params:         0       2       0       0       0       0       0
  2945 ;;      Locals:         0       0     102       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0
  2947 ;;      Totals:         0       2     102       0       0       0       0
  2948 ;;Total ram usage:      104 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    9
  2951 ;; This function calls:
  2952 ;;		_Engine_getStepPerMetrice
  2953 ;;		_Engine_step
  2954 ;;		_MotionController_getCurrentCoord
  2955 ;;		_MotionController_getDestinationCoord
  2956 ;;		___fladd
  2957 ;;		___fldiv
  2958 ;;		___flge
  2959 ;;		___flmul
  2960 ;;		___flsub
  2961 ;;		___fltol
  2962 ;;		___xxtofl
  2963 ;;		_abs
  2964 ;; This function is called by:
  2965 ;;		_Application_init
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text19
  2970  0006A8                     __ptext19:
  2971                           	opt callstack 0
  2972  0006A8                     _MotionController_control:
  2973                           	opt callstack 20
  2974  0006A8                     
  2975                           ;motioncontroller/MotionController.c: 29:     Point currentCoord = MotionController_getC
      +                          urrentCoord(motionController);
  2976  0006A8  C0B4  F09C         	movff	MotionController_control@motionController,MotionController_getCurrentCoord@motion
      +                          Controller
  2977  0006AC  C0B5  F09D         	movff	MotionController_control@motionController+1,MotionController_getCurrentCoord@moti
      +                          onController+1
  2978  0006B0  EC96  F015         	call	_MotionController_getCurrentCoord	;wreg free
  2979  0006B4  EE21  F0B3         	lfsr	2,MotionController_control@currentCoord
  2980  0006B8  0E0B               	movlw	11
  2981  0006BA                     u5461:
  2982  0006BA  CFEB FFDB          	movff	plusw0,plusw2
  2983  0006BE  06E8               	decf	wreg,f,c
  2984  0006C0  E2FC               	bc	u5461
  2985                           
  2986                           ;motioncontroller/MotionController.c: 30:     Point destinationCoord = MotionController_
      +                          getDestinationCoord(motionController);
  2987  0006C2  C0B4  F09C         	movff	MotionController_control@motionController,MotionController_getDestinationCoord@mo
      +                          tionController
  2988  0006C6  C0B5  F09D         	movff	MotionController_control@motionController+1,MotionController_getDestinationCoord@
      +                          motionController+1
  2989  0006CA  EC58  F015         	call	_MotionController_getDestinationCoord	;wreg free
  2990  0006CE  EE21  F0BF         	lfsr	2,MotionController_control@destinationCoord
  2991  0006D2  0E0B               	movlw	11
  2992  0006D4                     u5471:
  2993  0006D4  CFEB FFDB          	movff	plusw0,plusw2
  2994  0006D8  06E8               	decf	wreg,f,c
  2995  0006DA  E2FC               	bc	u5471
  2996  0006DC                     
  2997                           ;motioncontroller/MotionController.c: 34:     float dx = destinationCoord.x - currentCoo
      +                          rd.x;
  2998  0006DC  C1BF  F090         	movff	MotionController_control@destinationCoord,___flsub@b
  2999  0006E0  C1C0  F091         	movff	MotionController_control@destinationCoord+1,___flsub@b+1
  3000  0006E4  C1C1  F092         	movff	MotionController_control@destinationCoord+2,___flsub@b+2
  3001  0006E8  C1C2  F093         	movff	MotionController_control@destinationCoord+3,___flsub@b+3
  3002  0006EC  C1B3  F094         	movff	MotionController_control@currentCoord,___flsub@a
  3003  0006F0  C1B4  F095         	movff	MotionController_control@currentCoord+1,___flsub@a+1
  3004  0006F4  C1B5  F096         	movff	MotionController_control@currentCoord+2,___flsub@a+2
  3005  0006F8  C1B6  F097         	movff	MotionController_control@currentCoord+3,___flsub@a+3
  3006  0006FC  ECE6  F016         	call	___flsub	;wreg free
  3007  000700  C090  F189         	movff	?___flsub,MotionController_control@dx
  3008  000704  C091  F18A         	movff	?___flsub+1,MotionController_control@dx+1
  3009  000708  C092  F18B         	movff	?___flsub+2,MotionController_control@dx+2
  3010  00070C  C093  F18C         	movff	?___flsub+3,MotionController_control@dx+3
  3011  000710                     
  3012                           ;motioncontroller/MotionController.c: 35:     float dy = destinationCoord.y - currentCoo
      +                          rd.y;
  3013  000710  C1C3  F090         	movff	MotionController_control@destinationCoord+4,___flsub@b
  3014  000714  C1C4  F091         	movff	MotionController_control@destinationCoord+5,___flsub@b+1
  3015  000718  C1C5  F092         	movff	MotionController_control@destinationCoord+6,___flsub@b+2
  3016  00071C  C1C6  F093         	movff	MotionController_control@destinationCoord+7,___flsub@b+3
  3017  000720  C1B7  F094         	movff	MotionController_control@currentCoord+4,___flsub@a
  3018  000724  C1B8  F095         	movff	MotionController_control@currentCoord+5,___flsub@a+1
  3019  000728  C1B9  F096         	movff	MotionController_control@currentCoord+6,___flsub@a+2
  3020  00072C  C1BA  F097         	movff	MotionController_control@currentCoord+7,___flsub@a+3
  3021  000730  ECE6  F016         	call	___flsub	;wreg free
  3022  000734  C090  F18D         	movff	?___flsub,MotionController_control@dy
  3023  000738  C091  F18E         	movff	?___flsub+1,MotionController_control@dy+1
  3024  00073C  C092  F18F         	movff	?___flsub+2,MotionController_control@dy+2
  3025  000740  C093  F190         	movff	?___flsub+3,MotionController_control@dy+3
  3026  000744                     
  3027                           ;motioncontroller/MotionController.c: 36:     float dz = destinationCoord.z - currentCoo
      +                          rd.z;
  3028  000744  C1C7  F090         	movff	MotionController_control@destinationCoord+8,___flsub@b
  3029  000748  C1C8  F091         	movff	MotionController_control@destinationCoord+9,___flsub@b+1
  3030  00074C  C1C9  F092         	movff	MotionController_control@destinationCoord+10,___flsub@b+2
  3031  000750  C1CA  F093         	movff	MotionController_control@destinationCoord+11,___flsub@b+3
  3032  000754  C1BB  F094         	movff	MotionController_control@currentCoord+8,___flsub@a
  3033  000758  C1BC  F095         	movff	MotionController_control@currentCoord+9,___flsub@a+1
  3034  00075C  C1BD  F096         	movff	MotionController_control@currentCoord+10,___flsub@a+2
  3035  000760  C1BE  F097         	movff	MotionController_control@currentCoord+11,___flsub@a+3
  3036  000764  ECE6  F016         	call	___flsub	;wreg free
  3037  000768  C090  F191         	movff	?___flsub,MotionController_control@dz
  3038  00076C  C091  F192         	movff	?___flsub+1,MotionController_control@dz+1
  3039  000770  C092  F193         	movff	?___flsub+2,MotionController_control@dz+2
  3040  000774  C093  F194         	movff	?___flsub+3,MotionController_control@dz+3
  3041  000778                     
  3042                           ;motioncontroller/MotionController.c: 38:     int xs, ys, zs;;motioncontroller/MotionCon
      +                          troller.c: 40:     if (dx > 0)
  3043  000778  0E00               	movlw	0
  3044  00077A  0100               	movlb	0	; () banked
  3045  00077C  6F80               	movwf	___flge@ff1& (0+255),b
  3046  00077E  0E00               	movlw	0
  3047  000780  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3048  000782  0E00               	movlw	0
  3049  000784  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3050  000786  0E00               	movlw	0
  3051  000788  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3052  00078A  C189  F084         	movff	MotionController_control@dx,___flge@ff2
  3053  00078E  C18A  F085         	movff	MotionController_control@dx+1,___flge@ff2+1
  3054  000792  C18B  F086         	movff	MotionController_control@dx+2,___flge@ff2+2
  3055  000796  C18C  F087         	movff	MotionController_control@dx+3,___flge@ff2+3
  3056  00079A  EC33  F012         	call	___flge	;wreg free
  3057  00079E  0100               	movlb	0	; () banked
  3058  0007A0  B0D8               	btfsc	status,0,c
  3059  0007A2  EFD5  F003         	goto	u5481
  3060  0007A6  EFD7  F003         	goto	u5480
  3061  0007AA                     u5481:
  3062  0007AA  EFDE  F003         	goto	l270
  3063  0007AE                     u5480:
  3064  0007AE                     
  3065                           ; BSR set to: 0
  3066                           ;motioncontroller/MotionController.c: 41:         xs = 1;
  3067  0007AE  0E00               	movlw	0
  3068  0007B0  0101               	movlb	1	; () banked
  3069  0007B2  6FAE               	movwf	(MotionController_control@xs+1)& (0+255),b
  3070  0007B4  0E01               	movlw	1
  3071  0007B6  6FAD               	movwf	MotionController_control@xs& (0+255),b
  3072  0007B8  EFE1  F003         	goto	l4912
  3073  0007BC                     l270:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;motioncontroller/MotionController.c: 43:         xs = -1;
  3077  0007BC  0101               	movlb	1	; () banked
  3078  0007BE  69AD               	setf	MotionController_control@xs& (0+255),b
  3079  0007C0  69AE               	setf	(MotionController_control@xs+1)& (0+255),b
  3080  0007C2                     l4912:
  3081                           
  3082                           ; BSR set to: 1
  3083                           ;motioncontroller/MotionController.c: 45:     if (dy > 0)
  3084  0007C2  0E00               	movlw	0
  3085  0007C4  0100               	movlb	0	; () banked
  3086  0007C6  6F80               	movwf	___flge@ff1& (0+255),b
  3087  0007C8  0E00               	movlw	0
  3088  0007CA  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3089  0007CC  0E00               	movlw	0
  3090  0007CE  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3091  0007D0  0E00               	movlw	0
  3092  0007D2  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3093  0007D4  C18D  F084         	movff	MotionController_control@dy,___flge@ff2
  3094  0007D8  C18E  F085         	movff	MotionController_control@dy+1,___flge@ff2+1
  3095  0007DC  C18F  F086         	movff	MotionController_control@dy+2,___flge@ff2+2
  3096  0007E0  C190  F087         	movff	MotionController_control@dy+3,___flge@ff2+3
  3097  0007E4  EC33  F012         	call	___flge	;wreg free
  3098  0007E8  0100               	movlb	0	; () banked
  3099  0007EA  B0D8               	btfsc	status,0,c
  3100  0007EC  EFFA  F003         	goto	u5491
  3101  0007F0  EFFC  F003         	goto	u5490
  3102  0007F4                     u5491:
  3103  0007F4  EF03  F004         	goto	l272
  3104  0007F8                     u5490:
  3105  0007F8                     
  3106                           ; BSR set to: 0
  3107                           ;motioncontroller/MotionController.c: 46:         ys = 1;
  3108  0007F8  0E00               	movlw	0
  3109  0007FA  0101               	movlb	1	; () banked
  3110  0007FC  6FB0               	movwf	(MotionController_control@ys+1)& (0+255),b
  3111  0007FE  0E01               	movlw	1
  3112  000800  6FAF               	movwf	MotionController_control@ys& (0+255),b
  3113  000802  EF06  F004         	goto	l4916
  3114  000806                     l272:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;motioncontroller/MotionController.c: 48:         ys = -1;
  3118  000806  0101               	movlb	1	; () banked
  3119  000808  69AF               	setf	MotionController_control@ys& (0+255),b
  3120  00080A  69B0               	setf	(MotionController_control@ys+1)& (0+255),b
  3121  00080C                     l4916:
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;motioncontroller/MotionController.c: 50:     if (dz > 0)
  3125  00080C  0E00               	movlw	0
  3126  00080E  0100               	movlb	0	; () banked
  3127  000810  6F80               	movwf	___flge@ff1& (0+255),b
  3128  000812  0E00               	movlw	0
  3129  000814  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3130  000816  0E00               	movlw	0
  3131  000818  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3132  00081A  0E00               	movlw	0
  3133  00081C  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3134  00081E  C191  F084         	movff	MotionController_control@dz,___flge@ff2
  3135  000822  C192  F085         	movff	MotionController_control@dz+1,___flge@ff2+1
  3136  000826  C193  F086         	movff	MotionController_control@dz+2,___flge@ff2+2
  3137  00082A  C194  F087         	movff	MotionController_control@dz+3,___flge@ff2+3
  3138  00082E  EC33  F012         	call	___flge	;wreg free
  3139  000832  0100               	movlb	0	; () banked
  3140  000834  B0D8               	btfsc	status,0,c
  3141  000836  EF1F  F004         	goto	u5501
  3142  00083A  EF21  F004         	goto	u5500
  3143  00083E                     u5501:
  3144  00083E  EF28  F004         	goto	l274
  3145  000842                     u5500:
  3146  000842                     
  3147                           ; BSR set to: 0
  3148                           ;motioncontroller/MotionController.c: 51:         zs = 1;
  3149  000842  0E00               	movlw	0
  3150  000844  0101               	movlb	1	; () banked
  3151  000846  6FB2               	movwf	(MotionController_control@zs+1)& (0+255),b
  3152  000848  0E01               	movlw	1
  3153  00084A  6FB1               	movwf	MotionController_control@zs& (0+255),b
  3154  00084C  EF2B  F004         	goto	l4920
  3155  000850                     l274:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;motioncontroller/MotionController.c: 53:         zs = -1;
  3159  000850  0101               	movlb	1	; () banked
  3160  000852  69B1               	setf	MotionController_control@zs& (0+255),b
  3161  000854  69B2               	setf	(MotionController_control@zs+1)& (0+255),b
  3162  000856                     l4920:
  3163                           
  3164                           ; BSR set to: 1
  3165                           ;motioncontroller/MotionController.c: 55:     dx = abs(destinationCoord.x - currentCoord
      +                          .x);
  3166  000856  C1B3  F094         	movff	MotionController_control@currentCoord,___flsub@a
  3167  00085A  C1B4  F095         	movff	MotionController_control@currentCoord+1,___flsub@a+1
  3168  00085E  C1B5  F096         	movff	MotionController_control@currentCoord+2,___flsub@a+2
  3169  000862  C1B6  F097         	movff	MotionController_control@currentCoord+3,___flsub@a+3
  3170  000866  C1BF  F090         	movff	MotionController_control@destinationCoord,___flsub@b
  3171  00086A  C1C0  F091         	movff	MotionController_control@destinationCoord+1,___flsub@b+1
  3172  00086E  C1C1  F092         	movff	MotionController_control@destinationCoord+2,___flsub@b+2
  3173  000872  C1C2  F093         	movff	MotionController_control@destinationCoord+3,___flsub@b+3
  3174  000876  ECE6  F016         	call	___flsub	;wreg free
  3175  00087A  C090  F098         	movff	?___flsub,___fltol@f1
  3176  00087E  C091  F099         	movff	?___flsub+1,___fltol@f1+1
  3177  000882  C092  F09A         	movff	?___flsub+2,___fltol@f1+2
  3178  000886  C093  F09B         	movff	?___flsub+3,___fltol@f1+3
  3179  00088A  ECAF  F011         	call	___fltol	;wreg free
  3180  00088E  C098  F0A2         	movff	?___fltol,abs@a
  3181  000892  C099  F0A3         	movff	?___fltol+1,abs@a+1
  3182  000896  EC2C  F017         	call	_abs	;wreg free
  3183  00089A  0100               	movlb	0	; () banked
  3184  00089C  C0A2  F0A6         	movff	?_abs,___xxtofl@val
  3185  0008A0  C0A3  F0A7         	movff	?_abs+1,___xxtofl@val+1
  3186  0008A4  0E00               	movlw	0
  3187  0008A6  BFA7               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3188  0008A8  0EFF               	movlw	-1
  3189  0008AA  6FA8               	movwf	(___xxtofl@val+2)& (0+255),b
  3190  0008AC  6FA9               	movwf	(___xxtofl@val+3)& (0+255),b
  3191  0008AE  0E01               	movlw	1
  3192  0008B0  ECBD  F00F         	call	___xxtofl
  3193  0008B4  C0A6  F189         	movff	?___xxtofl,MotionController_control@dx
  3194  0008B8  C0A7  F18A         	movff	?___xxtofl+1,MotionController_control@dx+1
  3195  0008BC  C0A8  F18B         	movff	?___xxtofl+2,MotionController_control@dx+2
  3196  0008C0  C0A9  F18C         	movff	?___xxtofl+3,MotionController_control@dx+3
  3197                           
  3198                           ;motioncontroller/MotionController.c: 56:     dy = abs(destinationCoord.y - currentCoord
      +                          .y);
  3199  0008C4  C1B7  F094         	movff	MotionController_control@currentCoord+4,___flsub@a
  3200  0008C8  C1B8  F095         	movff	MotionController_control@currentCoord+5,___flsub@a+1
  3201  0008CC  C1B9  F096         	movff	MotionController_control@currentCoord+6,___flsub@a+2
  3202  0008D0  C1BA  F097         	movff	MotionController_control@currentCoord+7,___flsub@a+3
  3203  0008D4  C1C3  F090         	movff	MotionController_control@destinationCoord+4,___flsub@b
  3204  0008D8  C1C4  F091         	movff	MotionController_control@destinationCoord+5,___flsub@b+1
  3205  0008DC  C1C5  F092         	movff	MotionController_control@destinationCoord+6,___flsub@b+2
  3206  0008E0  C1C6  F093         	movff	MotionController_control@destinationCoord+7,___flsub@b+3
  3207  0008E4  ECE6  F016         	call	___flsub	;wreg free
  3208  0008E8  C090  F098         	movff	?___flsub,___fltol@f1
  3209  0008EC  C091  F099         	movff	?___flsub+1,___fltol@f1+1
  3210  0008F0  C092  F09A         	movff	?___flsub+2,___fltol@f1+2
  3211  0008F4  C093  F09B         	movff	?___flsub+3,___fltol@f1+3
  3212  0008F8  ECAF  F011         	call	___fltol	;wreg free
  3213  0008FC  C098  F0A2         	movff	?___fltol,abs@a
  3214  000900  C099  F0A3         	movff	?___fltol+1,abs@a+1
  3215  000904  EC2C  F017         	call	_abs	;wreg free
  3216  000908  0100               	movlb	0	; () banked
  3217  00090A  C0A2  F0A6         	movff	?_abs,___xxtofl@val
  3218  00090E  C0A3  F0A7         	movff	?_abs+1,___xxtofl@val+1
  3219  000912  0E00               	movlw	0
  3220  000914  BFA7               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3221  000916  0EFF               	movlw	-1
  3222  000918  6FA8               	movwf	(___xxtofl@val+2)& (0+255),b
  3223  00091A  6FA9               	movwf	(___xxtofl@val+3)& (0+255),b
  3224  00091C  0E01               	movlw	1
  3225  00091E  ECBD  F00F         	call	___xxtofl
  3226  000922  C0A6  F18D         	movff	?___xxtofl,MotionController_control@dy
  3227  000926  C0A7  F18E         	movff	?___xxtofl+1,MotionController_control@dy+1
  3228  00092A  C0A8  F18F         	movff	?___xxtofl+2,MotionController_control@dy+2
  3229  00092E  C0A9  F190         	movff	?___xxtofl+3,MotionController_control@dy+3
  3230                           
  3231                           ;motioncontroller/MotionController.c: 57:     dz = abs(destinationCoord.z - currentCoord
      +                          .z);
  3232  000932  C1BB  F094         	movff	MotionController_control@currentCoord+8,___flsub@a
  3233  000936  C1BC  F095         	movff	MotionController_control@currentCoord+9,___flsub@a+1
  3234  00093A  C1BD  F096         	movff	MotionController_control@currentCoord+10,___flsub@a+2
  3235  00093E  C1BE  F097         	movff	MotionController_control@currentCoord+11,___flsub@a+3
  3236  000942  C1C7  F090         	movff	MotionController_control@destinationCoord+8,___flsub@b
  3237  000946  C1C8  F091         	movff	MotionController_control@destinationCoord+9,___flsub@b+1
  3238  00094A  C1C9  F092         	movff	MotionController_control@destinationCoord+10,___flsub@b+2
  3239  00094E  C1CA  F093         	movff	MotionController_control@destinationCoord+11,___flsub@b+3
  3240  000952  ECE6  F016         	call	___flsub	;wreg free
  3241  000956  C090  F098         	movff	?___flsub,___fltol@f1
  3242  00095A  C091  F099         	movff	?___flsub+1,___fltol@f1+1
  3243  00095E  C092  F09A         	movff	?___flsub+2,___fltol@f1+2
  3244  000962  C093  F09B         	movff	?___flsub+3,___fltol@f1+3
  3245  000966  ECAF  F011         	call	___fltol	;wreg free
  3246  00096A  C098  F0A2         	movff	?___fltol,abs@a
  3247  00096E  C099  F0A3         	movff	?___fltol+1,abs@a+1
  3248  000972  EC2C  F017         	call	_abs	;wreg free
  3249  000976  0100               	movlb	0	; () banked
  3250  000978  C0A2  F0A6         	movff	?_abs,___xxtofl@val
  3251  00097C  C0A3  F0A7         	movff	?_abs+1,___xxtofl@val+1
  3252  000980  0E00               	movlw	0
  3253  000982  BFA7               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3254  000984  0EFF               	movlw	-1
  3255  000986  6FA8               	movwf	(___xxtofl@val+2)& (0+255),b
  3256  000988  6FA9               	movwf	(___xxtofl@val+3)& (0+255),b
  3257  00098A  0E01               	movlw	1
  3258  00098C  ECBD  F00F         	call	___xxtofl
  3259  000990  C0A6  F191         	movff	?___xxtofl,MotionController_control@dz
  3260  000994  C0A7  F192         	movff	?___xxtofl+1,MotionController_control@dz+1
  3261  000998  C0A8  F193         	movff	?___xxtofl+2,MotionController_control@dz+2
  3262  00099C  C0A9  F194         	movff	?___xxtofl+3,MotionController_control@dz+3
  3263  0009A0                     
  3264                           ;motioncontroller/MotionController.c: 59:     float intDx = dx * Engine_getStepPerMetric
      +                          e(&motionController->x);
  3265  0009A0  C0B4  F080         	movff	MotionController_control@motionController,Engine_getStepPerMetrice@engine
  3266  0009A4  C0B5  F081         	movff	MotionController_control@motionController+1,Engine_getStepPerMetrice@engine+1
  3267  0009A8  ECFB  F018         	call	_Engine_getStepPerMetrice	;wreg free
  3268  0009AC  C080  F084         	movff	?_Engine_getStepPerMetrice,___flmul@b
  3269  0009B0  C081  F085         	movff	?_Engine_getStepPerMetrice+1,___flmul@b+1
  3270  0009B4  C082  F086         	movff	?_Engine_getStepPerMetrice+2,___flmul@b+2
  3271  0009B8  C083  F087         	movff	?_Engine_getStepPerMetrice+3,___flmul@b+3
  3272  0009BC  C189  F088         	movff	MotionController_control@dx,___flmul@a
  3273  0009C0  C18A  F089         	movff	MotionController_control@dx+1,___flmul@a+1
  3274  0009C4  C18B  F08A         	movff	MotionController_control@dx+2,___flmul@a+2
  3275  0009C8  C18C  F08B         	movff	MotionController_control@dx+3,___flmul@a+3
  3276  0009CC  ECD9  F00B         	call	___flmul	;wreg free
  3277  0009D0  C084  F1CF         	movff	?___flmul,MotionController_control@intDx
  3278  0009D4  C085  F1D0         	movff	?___flmul+1,MotionController_control@intDx+1
  3279  0009D8  C086  F1D1         	movff	?___flmul+2,MotionController_control@intDx+2
  3280  0009DC  C087  F1D2         	movff	?___flmul+3,MotionController_control@intDx+3
  3281  0009E0                     
  3282                           ;motioncontroller/MotionController.c: 60:     float intDy = dy * Engine_getStepPerMetric
      +                          e(&motionController->y);
  3283  0009E0  0E12               	movlw	18
  3284  0009E2  0100               	movlb	0	; () banked
  3285  0009E4  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3286  0009E6  6F80               	movwf	Engine_getStepPerMetrice@engine& (0+255),b
  3287  0009E8  0E00               	movlw	0
  3288  0009EA  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3289  0009EC  6F81               	movwf	(Engine_getStepPerMetrice@engine+1)& (0+255),b
  3290  0009EE  ECFB  F018         	call	_Engine_getStepPerMetrice	;wreg free
  3291  0009F2  C080  F084         	movff	?_Engine_getStepPerMetrice,___flmul@b
  3292  0009F6  C081  F085         	movff	?_Engine_getStepPerMetrice+1,___flmul@b+1
  3293  0009FA  C082  F086         	movff	?_Engine_getStepPerMetrice+2,___flmul@b+2
  3294  0009FE  C083  F087         	movff	?_Engine_getStepPerMetrice+3,___flmul@b+3
  3295  000A02  C18D  F088         	movff	MotionController_control@dy,___flmul@a
  3296  000A06  C18E  F089         	movff	MotionController_control@dy+1,___flmul@a+1
  3297  000A0A  C18F  F08A         	movff	MotionController_control@dy+2,___flmul@a+2
  3298  000A0E  C190  F08B         	movff	MotionController_control@dy+3,___flmul@a+3
  3299  000A12  ECD9  F00B         	call	___flmul	;wreg free
  3300  000A16  C084  F1D3         	movff	?___flmul,MotionController_control@intDy
  3301  000A1A  C085  F1D4         	movff	?___flmul+1,MotionController_control@intDy+1
  3302  000A1E  C086  F1D5         	movff	?___flmul+2,MotionController_control@intDy+2
  3303  000A22  C087  F1D6         	movff	?___flmul+3,MotionController_control@intDy+3
  3304  000A26                     
  3305                           ;motioncontroller/MotionController.c: 61:     float intDz = dz * Engine_getStepPerMetric
      +                          e(&motionController->z);
  3306  000A26  0E24               	movlw	36
  3307  000A28  0100               	movlb	0	; () banked
  3308  000A2A  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3309  000A2C  6F80               	movwf	Engine_getStepPerMetrice@engine& (0+255),b
  3310  000A2E  0E00               	movlw	0
  3311  000A30  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3312  000A32  6F81               	movwf	(Engine_getStepPerMetrice@engine+1)& (0+255),b
  3313  000A34  ECFB  F018         	call	_Engine_getStepPerMetrice	;wreg free
  3314  000A38  C080  F084         	movff	?_Engine_getStepPerMetrice,___flmul@b
  3315  000A3C  C081  F085         	movff	?_Engine_getStepPerMetrice+1,___flmul@b+1
  3316  000A40  C082  F086         	movff	?_Engine_getStepPerMetrice+2,___flmul@b+2
  3317  000A44  C083  F087         	movff	?_Engine_getStepPerMetrice+3,___flmul@b+3
  3318  000A48  C191  F088         	movff	MotionController_control@dz,___flmul@a
  3319  000A4C  C192  F089         	movff	MotionController_control@dz+1,___flmul@a+1
  3320  000A50  C193  F08A         	movff	MotionController_control@dz+2,___flmul@a+2
  3321  000A54  C194  F08B         	movff	MotionController_control@dz+3,___flmul@a+3
  3322  000A58  ECD9  F00B         	call	___flmul	;wreg free
  3323  000A5C  C084  F1CB         	movff	?___flmul,MotionController_control@intDz
  3324  000A60  C085  F1CC         	movff	?___flmul+1,MotionController_control@intDz+1
  3325  000A64  C086  F1CD         	movff	?___flmul+2,MotionController_control@intDz+2
  3326  000A68  C087  F1CE         	movff	?___flmul+3,MotionController_control@intDz+3
  3327  000A6C                     
  3328                           ;motioncontroller/MotionController.c: 65:     if (intDx >= intDy && intDx >= intDz) {
  3329  000A6C  C1CF  F080         	movff	MotionController_control@intDx,___flge@ff1
  3330  000A70  C1D0  F081         	movff	MotionController_control@intDx+1,___flge@ff1+1
  3331  000A74  C1D1  F082         	movff	MotionController_control@intDx+2,___flge@ff1+2
  3332  000A78  C1D2  F083         	movff	MotionController_control@intDx+3,___flge@ff1+3
  3333  000A7C  C1D3  F084         	movff	MotionController_control@intDy,___flge@ff2
  3334  000A80  C1D4  F085         	movff	MotionController_control@intDy+1,___flge@ff2+1
  3335  000A84  C1D5  F086         	movff	MotionController_control@intDy+2,___flge@ff2+2
  3336  000A88  C1D6  F087         	movff	MotionController_control@intDy+3,___flge@ff2+3
  3337  000A8C  EC33  F012         	call	___flge	;wreg free
  3338  000A90  0100               	movlb	0	; () banked
  3339  000A92  A0D8               	btfss	status,0,c
  3340  000A94  EF4E  F005         	goto	u5511
  3341  000A98  EF50  F005         	goto	u5510
  3342  000A9C                     u5511:
  3343  000A9C  EFB3  F006         	goto	l4958
  3344  000AA0                     u5510:
  3345  000AA0                     
  3346                           ; BSR set to: 0
  3347  000AA0  C1CF  F080         	movff	MotionController_control@intDx,___flge@ff1
  3348  000AA4  C1D0  F081         	movff	MotionController_control@intDx+1,___flge@ff1+1
  3349  000AA8  C1D1  F082         	movff	MotionController_control@intDx+2,___flge@ff1+2
  3350  000AAC  C1D2  F083         	movff	MotionController_control@intDx+3,___flge@ff1+3
  3351  000AB0  C1CB  F084         	movff	MotionController_control@intDz,___flge@ff2
  3352  000AB4  C1CC  F085         	movff	MotionController_control@intDz+1,___flge@ff2+1
  3353  000AB8  C1CD  F086         	movff	MotionController_control@intDz+2,___flge@ff2+2
  3354  000ABC  C1CE  F087         	movff	MotionController_control@intDz+3,___flge@ff2+3
  3355  000AC0  EC33  F012         	call	___flge	;wreg free
  3356  000AC4  0100               	movlb	0	; () banked
  3357  000AC6  A0D8               	btfss	status,0,c
  3358  000AC8  EF68  F005         	goto	u5521
  3359  000ACC  EF6A  F005         	goto	u5520
  3360  000AD0                     u5521:
  3361  000AD0  EFB3  F006         	goto	l4958
  3362  000AD4                     u5520:
  3363  000AD4                     
  3364                           ; BSR set to: 0
  3365                           ;motioncontroller/MotionController.c: 66:         float rateY = intDx / intDy;
  3366  000AD4  C1CF  F080         	movff	MotionController_control@intDx,___fldiv@b
  3367  000AD8  C1D0  F081         	movff	MotionController_control@intDx+1,___fldiv@b+1
  3368  000ADC  C1D1  F082         	movff	MotionController_control@intDx+2,___fldiv@b+2
  3369  000AE0  C1D2  F083         	movff	MotionController_control@intDx+3,___fldiv@b+3
  3370  000AE4  C1D3  F084         	movff	MotionController_control@intDy,___fldiv@a
  3371  000AE8  C1D4  F085         	movff	MotionController_control@intDy+1,___fldiv@a+1
  3372  000AEC  C1D5  F086         	movff	MotionController_control@intDy+2,___fldiv@a+2
  3373  000AF0  C1D6  F087         	movff	MotionController_control@intDy+3,___fldiv@a+3
  3374  000AF4  ECEF  F00D         	call	___fldiv	;wreg free
  3375  000AF8  C080  F171         	movff	?___fldiv,MotionController_control@rateY
  3376  000AFC  C081  F172         	movff	?___fldiv+1,MotionController_control@rateY+1
  3377  000B00  C082  F173         	movff	?___fldiv+2,MotionController_control@rateY+2
  3378  000B04  C083  F174         	movff	?___fldiv+3,MotionController_control@rateY+3
  3379                           
  3380                           ;motioncontroller/MotionController.c: 67:         float rateZ = intDx / intDz;
  3381  000B08  C1CF  F080         	movff	MotionController_control@intDx,___fldiv@b
  3382  000B0C  C1D0  F081         	movff	MotionController_control@intDx+1,___fldiv@b+1
  3383  000B10  C1D1  F082         	movff	MotionController_control@intDx+2,___fldiv@b+2
  3384  000B14  C1D2  F083         	movff	MotionController_control@intDx+3,___fldiv@b+3
  3385  000B18  C1CB  F084         	movff	MotionController_control@intDz,___fldiv@a
  3386  000B1C  C1CC  F085         	movff	MotionController_control@intDz+1,___fldiv@a+1
  3387  000B20  C1CD  F086         	movff	MotionController_control@intDz+2,___fldiv@a+2
  3388  000B24  C1CE  F087         	movff	MotionController_control@intDz+3,___fldiv@a+3
  3389  000B28  ECEF  F00D         	call	___fldiv	;wreg free
  3390  000B2C  C080  F175         	movff	?___fldiv,MotionController_control@rateZ
  3391  000B30  C081  F176         	movff	?___fldiv+1,MotionController_control@rateZ+1
  3392  000B34  C082  F177         	movff	?___fldiv+2,MotionController_control@rateZ+2
  3393  000B38  C083  F178         	movff	?___fldiv+3,MotionController_control@rateZ+3
  3394                           
  3395                           ;motioncontroller/MotionController.c: 68:         float p1;;motioncontroller/MotionContr
      +                          oller.c: 69:         float p2;;motioncontroller/MotionController.c: 70:         for(;int
      +                          Dx>-1;intDx--){
  3396  000B3C  0E00               	movlw	0
  3397  000B3E  0100               	movlb	0	; () banked
  3398  000B40  6F80               	movwf	___flge@ff1& (0+255),b
  3399  000B42  0E00               	movlw	0
  3400  000B44  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3401  000B46  0E80               	movlw	128
  3402  000B48  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3403  000B4A  0EBF               	movlw	191
  3404  000B4C  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3405  000B4E  C1CF  F084         	movff	MotionController_control@intDx,___flge@ff2
  3406  000B52  C1D0  F085         	movff	MotionController_control@intDx+1,___flge@ff2+1
  3407  000B56  C1D1  F086         	movff	MotionController_control@intDx+2,___flge@ff2+2
  3408  000B5A  C1D2  F087         	movff	MotionController_control@intDx+3,___flge@ff2+3
  3409  000B5E  EC33  F012         	call	___flge	;wreg free
  3410  000B62  0100               	movlb	0	; () banked
  3411  000B64  A0D8               	btfss	status,0,c
  3412  000B66  EFB7  F005         	goto	u5531
  3413  000B6A  EFB9  F005         	goto	u5530
  3414  000B6E                     u5531:
  3415  000B6E  EFBB  F005         	goto	l4936
  3416  000B72                     u5530:
  3417  000B72  EF77  F009         	goto	l292
  3418  000B76                     l4936:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;motioncontroller/MotionController.c: 71:             Engine_step(&motionController->x, 
      +                          xs);
  3422  000B76  C0B4  F08A         	movff	MotionController_control@motionController,Engine_step@engine
  3423  000B7A  C0B5  F08B         	movff	MotionController_control@motionController+1,Engine_step@engine+1
  3424  000B7E  C1AD  F08C         	movff	MotionController_control@xs,Engine_step@dir
  3425  000B82  C1AE  F08D         	movff	MotionController_control@xs+1,Engine_step@dir+1
  3426  000B86  EC19  F015         	call	_Engine_step	;wreg free
  3427  000B8A                     
  3428                           ;motioncontroller/MotionController.c: 72:             if (p1 >= rateY) {
  3429  000B8A  C195  F080         	movff	MotionController_control@p1,___flge@ff1
  3430  000B8E  C196  F081         	movff	MotionController_control@p1+1,___flge@ff1+1
  3431  000B92  C197  F082         	movff	MotionController_control@p1+2,___flge@ff1+2
  3432  000B96  C198  F083         	movff	MotionController_control@p1+3,___flge@ff1+3
  3433  000B9A  C171  F084         	movff	MotionController_control@rateY,___flge@ff2
  3434  000B9E  C172  F085         	movff	MotionController_control@rateY+1,___flge@ff2+1
  3435  000BA2  C173  F086         	movff	MotionController_control@rateY+2,___flge@ff2+2
  3436  000BA6  C174  F087         	movff	MotionController_control@rateY+3,___flge@ff2+3
  3437  000BAA  EC33  F012         	call	___flge	;wreg free
  3438  000BAE  0100               	movlb	0	; () banked
  3439  000BB0  A0D8               	btfss	status,0,c
  3440  000BB2  EFDD  F005         	goto	u5541
  3441  000BB6  EFDF  F005         	goto	u5540
  3442  000BBA                     u5541:
  3443  000BBA  EF05  F006         	goto	l4944
  3444  000BBE                     u5540:
  3445  000BBE                     
  3446                           ; BSR set to: 0
  3447                           ;motioncontroller/MotionController.c: 73:                 Engine_step(&motionController-
      +                          >y, ys);
  3448  000BBE  0E12               	movlw	18
  3449  000BC0  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3450  000BC2  6F8A               	movwf	Engine_step@engine& (0+255),b
  3451  000BC4  0E00               	movlw	0
  3452  000BC6  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3453  000BC8  6F8B               	movwf	(Engine_step@engine+1)& (0+255),b
  3454  000BCA  C1AF  F08C         	movff	MotionController_control@ys,Engine_step@dir
  3455  000BCE  C1B0  F08D         	movff	MotionController_control@ys+1,Engine_step@dir+1
  3456  000BD2  EC19  F015         	call	_Engine_step	;wreg free
  3457  000BD6                     
  3458                           ;motioncontroller/MotionController.c: 74:                 p1 -= rateY;
  3459  000BD6  C195  F090         	movff	MotionController_control@p1,___flsub@b
  3460  000BDA  C196  F091         	movff	MotionController_control@p1+1,___flsub@b+1
  3461  000BDE  C197  F092         	movff	MotionController_control@p1+2,___flsub@b+2
  3462  000BE2  C198  F093         	movff	MotionController_control@p1+3,___flsub@b+3
  3463  000BE6  C171  F094         	movff	MotionController_control@rateY,___flsub@a
  3464  000BEA  C172  F095         	movff	MotionController_control@rateY+1,___flsub@a+1
  3465  000BEE  C173  F096         	movff	MotionController_control@rateY+2,___flsub@a+2
  3466  000BF2  C174  F097         	movff	MotionController_control@rateY+3,___flsub@a+3
  3467  000BF6  ECE6  F016         	call	___flsub	;wreg free
  3468  000BFA  C090  F195         	movff	?___flsub,MotionController_control@p1
  3469  000BFE  C091  F196         	movff	?___flsub+1,MotionController_control@p1+1
  3470  000C02  C092  F197         	movff	?___flsub+2,MotionController_control@p1+2
  3471  000C06  C093  F198         	movff	?___flsub+3,MotionController_control@p1+3
  3472  000C0A                     l4944:
  3473                           
  3474                           ;motioncontroller/MotionController.c: 76:             if (p2 >= rateZ) {
  3475  000C0A  C199  F080         	movff	MotionController_control@p2,___flge@ff1
  3476  000C0E  C19A  F081         	movff	MotionController_control@p2+1,___flge@ff1+1
  3477  000C12  C19B  F082         	movff	MotionController_control@p2+2,___flge@ff1+2
  3478  000C16  C19C  F083         	movff	MotionController_control@p2+3,___flge@ff1+3
  3479  000C1A  C175  F084         	movff	MotionController_control@rateZ,___flge@ff2
  3480  000C1E  C176  F085         	movff	MotionController_control@rateZ+1,___flge@ff2+1
  3481  000C22  C177  F086         	movff	MotionController_control@rateZ+2,___flge@ff2+2
  3482  000C26  C178  F087         	movff	MotionController_control@rateZ+3,___flge@ff2+3
  3483  000C2A  EC33  F012         	call	___flge	;wreg free
  3484  000C2E  0100               	movlb	0	; () banked
  3485  000C30  A0D8               	btfss	status,0,c
  3486  000C32  EF1D  F006         	goto	u5551
  3487  000C36  EF1F  F006         	goto	u5550
  3488  000C3A                     u5551:
  3489  000C3A  EF45  F006         	goto	l4950
  3490  000C3E                     u5550:
  3491  000C3E                     
  3492                           ; BSR set to: 0
  3493                           ;motioncontroller/MotionController.c: 77:                 Engine_step(&motionController-
      +                          >z, zs);
  3494  000C3E  0E24               	movlw	36
  3495  000C40  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3496  000C42  6F8A               	movwf	Engine_step@engine& (0+255),b
  3497  000C44  0E00               	movlw	0
  3498  000C46  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3499  000C48  6F8B               	movwf	(Engine_step@engine+1)& (0+255),b
  3500  000C4A  C1B1  F08C         	movff	MotionController_control@zs,Engine_step@dir
  3501  000C4E  C1B2  F08D         	movff	MotionController_control@zs+1,Engine_step@dir+1
  3502  000C52  EC19  F015         	call	_Engine_step	;wreg free
  3503  000C56                     
  3504                           ;motioncontroller/MotionController.c: 78:                 p2 -= rateZ;
  3505  000C56  C199  F090         	movff	MotionController_control@p2,___flsub@b
  3506  000C5A  C19A  F091         	movff	MotionController_control@p2+1,___flsub@b+1
  3507  000C5E  C19B  F092         	movff	MotionController_control@p2+2,___flsub@b+2
  3508  000C62  C19C  F093         	movff	MotionController_control@p2+3,___flsub@b+3
  3509  000C66  C175  F094         	movff	MotionController_control@rateZ,___flsub@a
  3510  000C6A  C176  F095         	movff	MotionController_control@rateZ+1,___flsub@a+1
  3511  000C6E  C177  F096         	movff	MotionController_control@rateZ+2,___flsub@a+2
  3512  000C72  C178  F097         	movff	MotionController_control@rateZ+3,___flsub@a+3
  3513  000C76  ECE6  F016         	call	___flsub	;wreg free
  3514  000C7A  C090  F199         	movff	?___flsub,MotionController_control@p2
  3515  000C7E  C091  F19A         	movff	?___flsub+1,MotionController_control@p2+1
  3516  000C82  C092  F19B         	movff	?___flsub+2,MotionController_control@p2+2
  3517  000C86  C093  F19C         	movff	?___flsub+3,MotionController_control@p2+3
  3518  000C8A                     l4950:
  3519                           
  3520                           ;motioncontroller/MotionController.c: 80:             p1 ++;
  3521  000C8A  C195  F080         	movff	MotionController_control@p1,___fladd@b
  3522  000C8E  C196  F081         	movff	MotionController_control@p1+1,___fladd@b+1
  3523  000C92  C197  F082         	movff	MotionController_control@p1+2,___fladd@b+2
  3524  000C96  C198  F083         	movff	MotionController_control@p1+3,___fladd@b+3
  3525  000C9A  0E00               	movlw	0
  3526  000C9C  0100               	movlb	0	; () banked
  3527  000C9E  6F84               	movwf	___fladd@a& (0+255),b
  3528  000CA0  0E00               	movlw	0
  3529  000CA2  6F85               	movwf	(___fladd@a+1)& (0+255),b
  3530  000CA4  0E80               	movlw	128
  3531  000CA6  6F86               	movwf	(___fladd@a+2)& (0+255),b
  3532  000CA8  0E3F               	movlw	63
  3533  000CAA  6F87               	movwf	(___fladd@a+3)& (0+255),b
  3534  000CAC  EC78  F009         	call	___fladd	;wreg free
  3535  000CB0  C080  F195         	movff	?___fladd,MotionController_control@p1
  3536  000CB4  C081  F196         	movff	?___fladd+1,MotionController_control@p1+1
  3537  000CB8  C082  F197         	movff	?___fladd+2,MotionController_control@p1+2
  3538  000CBC  C083  F198         	movff	?___fladd+3,MotionController_control@p1+3
  3539  000CC0                     
  3540                           ;motioncontroller/MotionController.c: 81:             p2 ++;
  3541  000CC0  C199  F080         	movff	MotionController_control@p2,___fladd@b
  3542  000CC4  C19A  F081         	movff	MotionController_control@p2+1,___fladd@b+1
  3543  000CC8  C19B  F082         	movff	MotionController_control@p2+2,___fladd@b+2
  3544  000CCC  C19C  F083         	movff	MotionController_control@p2+3,___fladd@b+3
  3545  000CD0  0E00               	movlw	0
  3546  000CD2  0100               	movlb	0	; () banked
  3547  000CD4  6F84               	movwf	___fladd@a& (0+255),b
  3548  000CD6  0E00               	movlw	0
  3549  000CD8  6F85               	movwf	(___fladd@a+1)& (0+255),b
  3550  000CDA  0E80               	movlw	128
  3551  000CDC  6F86               	movwf	(___fladd@a+2)& (0+255),b
  3552  000CDE  0E3F               	movlw	63
  3553  000CE0  6F87               	movwf	(___fladd@a+3)& (0+255),b
  3554  000CE2  EC78  F009         	call	___fladd	;wreg free
  3555  000CE6  C080  F199         	movff	?___fladd,MotionController_control@p2
  3556  000CEA  C081  F19A         	movff	?___fladd+1,MotionController_control@p2+1
  3557  000CEE  C082  F19B         	movff	?___fladd+2,MotionController_control@p2+2
  3558  000CF2  C083  F19C         	movff	?___fladd+3,MotionController_control@p2+3
  3559  000CF6                     
  3560                           ;motioncontroller/MotionController.c: 82:         }
  3561  000CF6  C1CF  F090         	movff	MotionController_control@intDx,___flsub@b
  3562  000CFA  C1D0  F091         	movff	MotionController_control@intDx+1,___flsub@b+1
  3563  000CFE  C1D1  F092         	movff	MotionController_control@intDx+2,___flsub@b+2
  3564  000D02  C1D2  F093         	movff	MotionController_control@intDx+3,___flsub@b+3
  3565  000D06  0E00               	movlw	0
  3566  000D08  0100               	movlb	0	; () banked
  3567  000D0A  6F94               	movwf	___flsub@a& (0+255),b
  3568  000D0C  0E00               	movlw	0
  3569  000D0E  6F95               	movwf	(___flsub@a+1)& (0+255),b
  3570  000D10  0E80               	movlw	128
  3571  000D12  6F96               	movwf	(___flsub@a+2)& (0+255),b
  3572  000D14  0E3F               	movlw	63
  3573  000D16  6F97               	movwf	(___flsub@a+3)& (0+255),b
  3574  000D18  ECE6  F016         	call	___flsub	;wreg free
  3575  000D1C  C090  F1CF         	movff	?___flsub,MotionController_control@intDx
  3576  000D20  C091  F1D0         	movff	?___flsub+1,MotionController_control@intDx+1
  3577  000D24  C092  F1D1         	movff	?___flsub+2,MotionController_control@intDx+2
  3578  000D28  C093  F1D2         	movff	?___flsub+3,MotionController_control@intDx+3
  3579  000D2C  0E00               	movlw	0
  3580  000D2E  0100               	movlb	0	; () banked
  3581  000D30  6F80               	movwf	___flge@ff1& (0+255),b
  3582  000D32  0E00               	movlw	0
  3583  000D34  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3584  000D36  0E80               	movlw	128
  3585  000D38  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3586  000D3A  0EBF               	movlw	191
  3587  000D3C  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3588  000D3E  C1CF  F084         	movff	MotionController_control@intDx,___flge@ff2
  3589  000D42  C1D0  F085         	movff	MotionController_control@intDx+1,___flge@ff2+1
  3590  000D46  C1D1  F086         	movff	MotionController_control@intDx+2,___flge@ff2+2
  3591  000D4A  C1D2  F087         	movff	MotionController_control@intDx+3,___flge@ff2+3
  3592  000D4E  EC33  F012         	call	___flge	;wreg free
  3593  000D52  0100               	movlb	0	; () banked
  3594  000D54  A0D8               	btfss	status,0,c
  3595  000D56  EFAF  F006         	goto	u5561
  3596  000D5A  EFB1  F006         	goto	u5560
  3597  000D5E                     u5561:
  3598  000D5E  EFBB  F005         	goto	l4936
  3599  000D62                     u5560:
  3600  000D62  EF77  F009         	goto	l292
  3601  000D66                     l4958:
  3602                           
  3603                           ; BSR set to: 0
  3604  000D66  C1D3  F080         	movff	MotionController_control@intDy,___flge@ff1
  3605  000D6A  C1D4  F081         	movff	MotionController_control@intDy+1,___flge@ff1+1
  3606  000D6E  C1D5  F082         	movff	MotionController_control@intDy+2,___flge@ff1+2
  3607  000D72  C1D6  F083         	movff	MotionController_control@intDy+3,___flge@ff1+3
  3608  000D76  C1CF  F084         	movff	MotionController_control@intDx,___flge@ff2
  3609  000D7A  C1D0  F085         	movff	MotionController_control@intDx+1,___flge@ff2+1
  3610  000D7E  C1D1  F086         	movff	MotionController_control@intDx+2,___flge@ff2+2
  3611  000D82  C1D2  F087         	movff	MotionController_control@intDx+3,___flge@ff2+3
  3612  000D86  EC33  F012         	call	___flge	;wreg free
  3613  000D8A  0100               	movlb	0	; () banked
  3614  000D8C  A0D8               	btfss	status,0,c
  3615  000D8E  EFCB  F006         	goto	u5571
  3616  000D92  EFCD  F006         	goto	u5570
  3617  000D96                     u5571:
  3618  000D96  EF30  F008         	goto	l4988
  3619  000D9A                     u5570:
  3620  000D9A                     
  3621                           ; BSR set to: 0
  3622  000D9A  C1D3  F080         	movff	MotionController_control@intDy,___flge@ff1
  3623  000D9E  C1D4  F081         	movff	MotionController_control@intDy+1,___flge@ff1+1
  3624  000DA2  C1D5  F082         	movff	MotionController_control@intDy+2,___flge@ff1+2
  3625  000DA6  C1D6  F083         	movff	MotionController_control@intDy+3,___flge@ff1+3
  3626  000DAA  C1CB  F084         	movff	MotionController_control@intDz,___flge@ff2
  3627  000DAE  C1CC  F085         	movff	MotionController_control@intDz+1,___flge@ff2+1
  3628  000DB2  C1CD  F086         	movff	MotionController_control@intDz+2,___flge@ff2+2
  3629  000DB6  C1CE  F087         	movff	MotionController_control@intDz+3,___flge@ff2+3
  3630  000DBA  EC33  F012         	call	___flge	;wreg free
  3631  000DBE  0100               	movlb	0	; () banked
  3632  000DC0  A0D8               	btfss	status,0,c
  3633  000DC2  EFE5  F006         	goto	u5581
  3634  000DC6  EFE7  F006         	goto	u5580
  3635  000DCA                     u5581:
  3636  000DCA  EF30  F008         	goto	l4988
  3637  000DCE                     u5580:
  3638  000DCE                     
  3639                           ; BSR set to: 0
  3640                           ;motioncontroller/MotionController.c: 94:         float rateX =intDy / intDx;
  3641  000DCE  C1D3  F080         	movff	MotionController_control@intDy,___fldiv@b
  3642  000DD2  C1D4  F081         	movff	MotionController_control@intDy+1,___fldiv@b+1
  3643  000DD6  C1D5  F082         	movff	MotionController_control@intDy+2,___fldiv@b+2
  3644  000DDA  C1D6  F083         	movff	MotionController_control@intDy+3,___fldiv@b+3
  3645  000DDE  C1CF  F084         	movff	MotionController_control@intDx,___fldiv@a
  3646  000DE2  C1D0  F085         	movff	MotionController_control@intDx+1,___fldiv@a+1
  3647  000DE6  C1D1  F086         	movff	MotionController_control@intDx+2,___fldiv@a+2
  3648  000DEA  C1D2  F087         	movff	MotionController_control@intDx+3,___fldiv@a+3
  3649  000DEE  ECEF  F00D         	call	___fldiv	;wreg free
  3650  000DF2  C080  F179         	movff	?___fldiv,MotionController_control@rateX
  3651  000DF6  C081  F17A         	movff	?___fldiv+1,MotionController_control@rateX+1
  3652  000DFA  C082  F17B         	movff	?___fldiv+2,MotionController_control@rateX+2
  3653  000DFE  C083  F17C         	movff	?___fldiv+3,MotionController_control@rateX+3
  3654                           
  3655                           ;motioncontroller/MotionController.c: 95:         float rateZ =intDy / intDz;
  3656  000E02  C1D3  F080         	movff	MotionController_control@intDy,___fldiv@b
  3657  000E06  C1D4  F081         	movff	MotionController_control@intDy+1,___fldiv@b+1
  3658  000E0A  C1D5  F082         	movff	MotionController_control@intDy+2,___fldiv@b+2
  3659  000E0E  C1D6  F083         	movff	MotionController_control@intDy+3,___fldiv@b+3
  3660  000E12  C1CB  F084         	movff	MotionController_control@intDz,___fldiv@a
  3661  000E16  C1CC  F085         	movff	MotionController_control@intDz+1,___fldiv@a+1
  3662  000E1A  C1CD  F086         	movff	MotionController_control@intDz+2,___fldiv@a+2
  3663  000E1E  C1CE  F087         	movff	MotionController_control@intDz+3,___fldiv@a+3
  3664  000E22  ECEF  F00D         	call	___fldiv	;wreg free
  3665  000E26  C080  F17D         	movff	?___fldiv,MotionController_control@rateZ_858
  3666  000E2A  C081  F17E         	movff	?___fldiv+1,MotionController_control@rateZ_858+1
  3667  000E2E  C082  F17F         	movff	?___fldiv+2,MotionController_control@rateZ_858+2
  3668  000E32  C083  F180         	movff	?___fldiv+3,MotionController_control@rateZ_858+3
  3669                           
  3670                           ;motioncontroller/MotionController.c: 96:         float p1;;motioncontroller/MotionContr
      +                          oller.c: 97:         float p2;;motioncontroller/MotionController.c: 99:          for(;in
      +                          tDy>-1;intDy--){
  3671  000E36  0E00               	movlw	0
  3672  000E38  0100               	movlb	0	; () banked
  3673  000E3A  6F80               	movwf	___flge@ff1& (0+255),b
  3674  000E3C  0E00               	movlw	0
  3675  000E3E  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3676  000E40  0E80               	movlw	128
  3677  000E42  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3678  000E44  0EBF               	movlw	191
  3679  000E46  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3680  000E48  C1D3  F084         	movff	MotionController_control@intDy,___flge@ff2
  3681  000E4C  C1D4  F085         	movff	MotionController_control@intDy+1,___flge@ff2+1
  3682  000E50  C1D5  F086         	movff	MotionController_control@intDy+2,___flge@ff2+2
  3683  000E54  C1D6  F087         	movff	MotionController_control@intDy+3,___flge@ff2+3
  3684  000E58  EC33  F012         	call	___flge	;wreg free
  3685  000E5C  0100               	movlb	0	; () banked
  3686  000E5E  A0D8               	btfss	status,0,c
  3687  000E60  EF34  F007         	goto	u5591
  3688  000E64  EF36  F007         	goto	u5590
  3689  000E68                     u5591:
  3690  000E68  EF38  F007         	goto	l4966
  3691  000E6C                     u5590:
  3692  000E6C  EF77  F009         	goto	l292
  3693  000E70                     l4966:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;motioncontroller/MotionController.c: 100:              Engine_step(&motionController->y
      +                          , ys);
  3697  000E70  0E12               	movlw	18
  3698  000E72  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3699  000E74  6F8A               	movwf	Engine_step@engine& (0+255),b
  3700  000E76  0E00               	movlw	0
  3701  000E78  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3702  000E7A  6F8B               	movwf	(Engine_step@engine+1)& (0+255),b
  3703  000E7C  C1AF  F08C         	movff	MotionController_control@ys,Engine_step@dir
  3704  000E80  C1B0  F08D         	movff	MotionController_control@ys+1,Engine_step@dir+1
  3705  000E84  EC19  F015         	call	_Engine_step	;wreg free
  3706  000E88                     
  3707                           ;motioncontroller/MotionController.c: 101:         if (p1 >= rateX) {
  3708  000E88  C19D  F080         	movff	MotionController_control@p1_859,___flge@ff1
  3709  000E8C  C19E  F081         	movff	MotionController_control@p1_859+1,___flge@ff1+1
  3710  000E90  C19F  F082         	movff	MotionController_control@p1_859+2,___flge@ff1+2
  3711  000E94  C1A0  F083         	movff	MotionController_control@p1_859+3,___flge@ff1+3
  3712  000E98  C179  F084         	movff	MotionController_control@rateX,___flge@ff2
  3713  000E9C  C17A  F085         	movff	MotionController_control@rateX+1,___flge@ff2+1
  3714  000EA0  C17B  F086         	movff	MotionController_control@rateX+2,___flge@ff2+2
  3715  000EA4  C17C  F087         	movff	MotionController_control@rateX+3,___flge@ff2+3
  3716  000EA8  EC33  F012         	call	___flge	;wreg free
  3717  000EAC  0100               	movlb	0	; () banked
  3718  000EAE  A0D8               	btfss	status,0,c
  3719  000EB0  EF5C  F007         	goto	u5601
  3720  000EB4  EF5E  F007         	goto	u5600
  3721  000EB8                     u5601:
  3722  000EB8  EF82  F007         	goto	l4974
  3723  000EBC                     u5600:
  3724  000EBC                     
  3725                           ; BSR set to: 0
  3726                           ;motioncontroller/MotionController.c: 102:             Engine_step(&motionController->x,
      +                           xs);
  3727  000EBC  C0B4  F08A         	movff	MotionController_control@motionController,Engine_step@engine
  3728  000EC0  C0B5  F08B         	movff	MotionController_control@motionController+1,Engine_step@engine+1
  3729  000EC4  C1AD  F08C         	movff	MotionController_control@xs,Engine_step@dir
  3730  000EC8  C1AE  F08D         	movff	MotionController_control@xs+1,Engine_step@dir+1
  3731  000ECC  EC19  F015         	call	_Engine_step	;wreg free
  3732  000ED0                     
  3733                           ;motioncontroller/MotionController.c: 103:             p1 -= rateX;
  3734  000ED0  C19D  F090         	movff	MotionController_control@p1_859,___flsub@b
  3735  000ED4  C19E  F091         	movff	MotionController_control@p1_859+1,___flsub@b+1
  3736  000ED8  C19F  F092         	movff	MotionController_control@p1_859+2,___flsub@b+2
  3737  000EDC  C1A0  F093         	movff	MotionController_control@p1_859+3,___flsub@b+3
  3738  000EE0  C179  F094         	movff	MotionController_control@rateX,___flsub@a
  3739  000EE4  C17A  F095         	movff	MotionController_control@rateX+1,___flsub@a+1
  3740  000EE8  C17B  F096         	movff	MotionController_control@rateX+2,___flsub@a+2
  3741  000EEC  C17C  F097         	movff	MotionController_control@rateX+3,___flsub@a+3
  3742  000EF0  ECE6  F016         	call	___flsub	;wreg free
  3743  000EF4  C090  F19D         	movff	?___flsub,MotionController_control@p1_859
  3744  000EF8  C091  F19E         	movff	?___flsub+1,MotionController_control@p1_859+1
  3745  000EFC  C092  F19F         	movff	?___flsub+2,MotionController_control@p1_859+2
  3746  000F00  C093  F1A0         	movff	?___flsub+3,MotionController_control@p1_859+3
  3747  000F04                     l4974:
  3748                           
  3749                           ;motioncontroller/MotionController.c: 105:         if (p2 >= rateZ) {
  3750  000F04  C1A1  F080         	movff	MotionController_control@p2_860,___flge@ff1
  3751  000F08  C1A2  F081         	movff	MotionController_control@p2_860+1,___flge@ff1+1
  3752  000F0C  C1A3  F082         	movff	MotionController_control@p2_860+2,___flge@ff1+2
  3753  000F10  C1A4  F083         	movff	MotionController_control@p2_860+3,___flge@ff1+3
  3754  000F14  C17D  F084         	movff	MotionController_control@rateZ_858,___flge@ff2
  3755  000F18  C17E  F085         	movff	MotionController_control@rateZ_858+1,___flge@ff2+1
  3756  000F1C  C17F  F086         	movff	MotionController_control@rateZ_858+2,___flge@ff2+2
  3757  000F20  C180  F087         	movff	MotionController_control@rateZ_858+3,___flge@ff2+3
  3758  000F24  EC33  F012         	call	___flge	;wreg free
  3759  000F28  0100               	movlb	0	; () banked
  3760  000F2A  A0D8               	btfss	status,0,c
  3761  000F2C  EF9A  F007         	goto	u5611
  3762  000F30  EF9C  F007         	goto	u5610
  3763  000F34                     u5611:
  3764  000F34  EFC2  F007         	goto	l4980
  3765  000F38                     u5610:
  3766  000F38                     
  3767                           ; BSR set to: 0
  3768                           ;motioncontroller/MotionController.c: 106:             Engine_step(&motionController->z,
      +                           zs);
  3769  000F38  0E24               	movlw	36
  3770  000F3A  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3771  000F3C  6F8A               	movwf	Engine_step@engine& (0+255),b
  3772  000F3E  0E00               	movlw	0
  3773  000F40  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3774  000F42  6F8B               	movwf	(Engine_step@engine+1)& (0+255),b
  3775  000F44  C1B1  F08C         	movff	MotionController_control@zs,Engine_step@dir
  3776  000F48  C1B2  F08D         	movff	MotionController_control@zs+1,Engine_step@dir+1
  3777  000F4C  EC19  F015         	call	_Engine_step	;wreg free
  3778  000F50                     
  3779                           ;motioncontroller/MotionController.c: 107:             p2 -= rateZ;
  3780  000F50  C1A1  F090         	movff	MotionController_control@p2_860,___flsub@b
  3781  000F54  C1A2  F091         	movff	MotionController_control@p2_860+1,___flsub@b+1
  3782  000F58  C1A3  F092         	movff	MotionController_control@p2_860+2,___flsub@b+2
  3783  000F5C  C1A4  F093         	movff	MotionController_control@p2_860+3,___flsub@b+3
  3784  000F60  C17D  F094         	movff	MotionController_control@rateZ_858,___flsub@a
  3785  000F64  C17E  F095         	movff	MotionController_control@rateZ_858+1,___flsub@a+1
  3786  000F68  C17F  F096         	movff	MotionController_control@rateZ_858+2,___flsub@a+2
  3787  000F6C  C180  F097         	movff	MotionController_control@rateZ_858+3,___flsub@a+3
  3788  000F70  ECE6  F016         	call	___flsub	;wreg free
  3789  000F74  C090  F1A1         	movff	?___flsub,MotionController_control@p2_860
  3790  000F78  C091  F1A2         	movff	?___flsub+1,MotionController_control@p2_860+1
  3791  000F7C  C092  F1A3         	movff	?___flsub+2,MotionController_control@p2_860+2
  3792  000F80  C093  F1A4         	movff	?___flsub+3,MotionController_control@p2_860+3
  3793  000F84                     l4980:
  3794                           
  3795                           ;motioncontroller/MotionController.c: 109:         p1 += 1;
  3796  000F84  C19D  F080         	movff	MotionController_control@p1_859,___fladd@b
  3797  000F88  C19E  F081         	movff	MotionController_control@p1_859+1,___fladd@b+1
  3798  000F8C  C19F  F082         	movff	MotionController_control@p1_859+2,___fladd@b+2
  3799  000F90  C1A0  F083         	movff	MotionController_control@p1_859+3,___fladd@b+3
  3800  000F94  0E00               	movlw	0
  3801  000F96  0100               	movlb	0	; () banked
  3802  000F98  6F84               	movwf	___fladd@a& (0+255),b
  3803  000F9A  0E00               	movlw	0
  3804  000F9C  6F85               	movwf	(___fladd@a+1)& (0+255),b
  3805  000F9E  0E80               	movlw	128
  3806  000FA0  6F86               	movwf	(___fladd@a+2)& (0+255),b
  3807  000FA2  0E3F               	movlw	63
  3808  000FA4  6F87               	movwf	(___fladd@a+3)& (0+255),b
  3809  000FA6  EC78  F009         	call	___fladd	;wreg free
  3810  000FAA  C080  F19D         	movff	?___fladd,MotionController_control@p1_859
  3811  000FAE  C081  F19E         	movff	?___fladd+1,MotionController_control@p1_859+1
  3812  000FB2  C082  F19F         	movff	?___fladd+2,MotionController_control@p1_859+2
  3813  000FB6  C083  F1A0         	movff	?___fladd+3,MotionController_control@p1_859+3
  3814  000FBA                     
  3815                           ;motioncontroller/MotionController.c: 110:         p2 += 1;
  3816  000FBA  C1A1  F080         	movff	MotionController_control@p2_860,___fladd@b
  3817  000FBE  C1A2  F081         	movff	MotionController_control@p2_860+1,___fladd@b+1
  3818  000FC2  C1A3  F082         	movff	MotionController_control@p2_860+2,___fladd@b+2
  3819  000FC6  C1A4  F083         	movff	MotionController_control@p2_860+3,___fladd@b+3
  3820  000FCA  0E00               	movlw	0
  3821  000FCC  0100               	movlb	0	; () banked
  3822  000FCE  6F84               	movwf	___fladd@a& (0+255),b
  3823  000FD0  0E00               	movlw	0
  3824  000FD2  6F85               	movwf	(___fladd@a+1)& (0+255),b
  3825  000FD4  0E80               	movlw	128
  3826  000FD6  6F86               	movwf	(___fladd@a+2)& (0+255),b
  3827  000FD8  0E3F               	movlw	63
  3828  000FDA  6F87               	movwf	(___fladd@a+3)& (0+255),b
  3829  000FDC  EC78  F009         	call	___fladd	;wreg free
  3830  000FE0  C080  F1A1         	movff	?___fladd,MotionController_control@p2_860
  3831  000FE4  C081  F1A2         	movff	?___fladd+1,MotionController_control@p2_860+1
  3832  000FE8  C082  F1A3         	movff	?___fladd+2,MotionController_control@p2_860+2
  3833  000FEC  C083  F1A4         	movff	?___fladd+3,MotionController_control@p2_860+3
  3834  000FF0                     
  3835                           ;motioncontroller/MotionController.c: 113:          }
  3836  000FF0  C1D3  F090         	movff	MotionController_control@intDy,___flsub@b
  3837  000FF4  C1D4  F091         	movff	MotionController_control@intDy+1,___flsub@b+1
  3838  000FF8  C1D5  F092         	movff	MotionController_control@intDy+2,___flsub@b+2
  3839  000FFC  C1D6  F093         	movff	MotionController_control@intDy+3,___flsub@b+3
  3840  001000  0E00               	movlw	0
  3841  001002  0100               	movlb	0	; () banked
  3842  001004  6F94               	movwf	___flsub@a& (0+255),b
  3843  001006  0E00               	movlw	0
  3844  001008  6F95               	movwf	(___flsub@a+1)& (0+255),b
  3845  00100A  0E80               	movlw	128
  3846  00100C  6F96               	movwf	(___flsub@a+2)& (0+255),b
  3847  00100E  0E3F               	movlw	63
  3848  001010  6F97               	movwf	(___flsub@a+3)& (0+255),b
  3849  001012  ECE6  F016         	call	___flsub	;wreg free
  3850  001016  C090  F1D3         	movff	?___flsub,MotionController_control@intDy
  3851  00101A  C091  F1D4         	movff	?___flsub+1,MotionController_control@intDy+1
  3852  00101E  C092  F1D5         	movff	?___flsub+2,MotionController_control@intDy+2
  3853  001022  C093  F1D6         	movff	?___flsub+3,MotionController_control@intDy+3
  3854  001026  0E00               	movlw	0
  3855  001028  0100               	movlb	0	; () banked
  3856  00102A  6F80               	movwf	___flge@ff1& (0+255),b
  3857  00102C  0E00               	movlw	0
  3858  00102E  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3859  001030  0E80               	movlw	128
  3860  001032  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3861  001034  0EBF               	movlw	191
  3862  001036  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3863  001038  C1D3  F084         	movff	MotionController_control@intDy,___flge@ff2
  3864  00103C  C1D4  F085         	movff	MotionController_control@intDy+1,___flge@ff2+1
  3865  001040  C1D5  F086         	movff	MotionController_control@intDy+2,___flge@ff2+2
  3866  001044  C1D6  F087         	movff	MotionController_control@intDy+3,___flge@ff2+3
  3867  001048  EC33  F012         	call	___flge	;wreg free
  3868  00104C  0100               	movlb	0	; () banked
  3869  00104E  A0D8               	btfss	status,0,c
  3870  001050  EF2C  F008         	goto	u5621
  3871  001054  EF2E  F008         	goto	u5620
  3872  001058                     u5621:
  3873  001058  EF38  F007         	goto	l4966
  3874  00105C                     u5620:
  3875  00105C  EF77  F009         	goto	l292
  3876  001060                     l4988:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;motioncontroller/MotionController.c: 121:         float rateY =intDz / intDy;
  3880  001060  C1CB  F080         	movff	MotionController_control@intDz,___fldiv@b
  3881  001064  C1CC  F081         	movff	MotionController_control@intDz+1,___fldiv@b+1
  3882  001068  C1CD  F082         	movff	MotionController_control@intDz+2,___fldiv@b+2
  3883  00106C  C1CE  F083         	movff	MotionController_control@intDz+3,___fldiv@b+3
  3884  001070  C1D3  F084         	movff	MotionController_control@intDy,___fldiv@a
  3885  001074  C1D4  F085         	movff	MotionController_control@intDy+1,___fldiv@a+1
  3886  001078  C1D5  F086         	movff	MotionController_control@intDy+2,___fldiv@a+2
  3887  00107C  C1D6  F087         	movff	MotionController_control@intDy+3,___fldiv@a+3
  3888  001080  ECEF  F00D         	call	___fldiv	;wreg free
  3889  001084  C080  F181         	movff	?___fldiv,MotionController_control@rateY_861
  3890  001088  C081  F182         	movff	?___fldiv+1,MotionController_control@rateY_861+1
  3891  00108C  C082  F183         	movff	?___fldiv+2,MotionController_control@rateY_861+2
  3892  001090  C083  F184         	movff	?___fldiv+3,MotionController_control@rateY_861+3
  3893                           
  3894                           ;motioncontroller/MotionController.c: 122:         float rateX =intDz / intDx;
  3895  001094  C1CB  F080         	movff	MotionController_control@intDz,___fldiv@b
  3896  001098  C1CC  F081         	movff	MotionController_control@intDz+1,___fldiv@b+1
  3897  00109C  C1CD  F082         	movff	MotionController_control@intDz+2,___fldiv@b+2
  3898  0010A0  C1CE  F083         	movff	MotionController_control@intDz+3,___fldiv@b+3
  3899  0010A4  C1CF  F084         	movff	MotionController_control@intDx,___fldiv@a
  3900  0010A8  C1D0  F085         	movff	MotionController_control@intDx+1,___fldiv@a+1
  3901  0010AC  C1D1  F086         	movff	MotionController_control@intDx+2,___fldiv@a+2
  3902  0010B0  C1D2  F087         	movff	MotionController_control@intDx+3,___fldiv@a+3
  3903  0010B4  ECEF  F00D         	call	___fldiv	;wreg free
  3904  0010B8  C080  F185         	movff	?___fldiv,MotionController_control@rateX_862
  3905  0010BC  C081  F186         	movff	?___fldiv+1,MotionController_control@rateX_862+1
  3906  0010C0  C082  F187         	movff	?___fldiv+2,MotionController_control@rateX_862+2
  3907  0010C4  C083  F188         	movff	?___fldiv+3,MotionController_control@rateX_862+3
  3908                           
  3909                           ;motioncontroller/MotionController.c: 123:         float p1;;motioncontroller/MotionCont
      +                          roller.c: 124:         float p2;;motioncontroller/MotionController.c: 126:         for(;
      +                          intDz>-1;intDz--){
  3910  0010C8  0E00               	movlw	0
  3911  0010CA  0100               	movlb	0	; () banked
  3912  0010CC  6F80               	movwf	___flge@ff1& (0+255),b
  3913  0010CE  0E00               	movlw	0
  3914  0010D0  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  3915  0010D2  0E80               	movlw	128
  3916  0010D4  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  3917  0010D6  0EBF               	movlw	191
  3918  0010D8  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  3919  0010DA  C1CB  F084         	movff	MotionController_control@intDz,___flge@ff2
  3920  0010DE  C1CC  F085         	movff	MotionController_control@intDz+1,___flge@ff2+1
  3921  0010E2  C1CD  F086         	movff	MotionController_control@intDz+2,___flge@ff2+2
  3922  0010E6  C1CE  F087         	movff	MotionController_control@intDz+3,___flge@ff2+3
  3923  0010EA  EC33  F012         	call	___flge	;wreg free
  3924  0010EE  0100               	movlb	0	; () banked
  3925  0010F0  A0D8               	btfss	status,0,c
  3926  0010F2  EF7D  F008         	goto	u5631
  3927  0010F6  EF7F  F008         	goto	u5630
  3928  0010FA                     u5631:
  3929  0010FA  EF81  F008         	goto	l4992
  3930  0010FE                     u5630:
  3931  0010FE  EF77  F009         	goto	l292
  3932  001102                     l4992:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;motioncontroller/MotionController.c: 127:              Engine_step(&motionController->z
      +                          , zs);
  3936  001102  0E24               	movlw	36
  3937  001104  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3938  001106  6F8A               	movwf	Engine_step@engine& (0+255),b
  3939  001108  0E00               	movlw	0
  3940  00110A  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3941  00110C  6F8B               	movwf	(Engine_step@engine+1)& (0+255),b
  3942  00110E  C1B1  F08C         	movff	MotionController_control@zs,Engine_step@dir
  3943  001112  C1B2  F08D         	movff	MotionController_control@zs+1,Engine_step@dir+1
  3944  001116  EC19  F015         	call	_Engine_step	;wreg free
  3945  00111A                     
  3946                           ;motioncontroller/MotionController.c: 128:         if (p1 >= rateY) {
  3947  00111A  C1A5  F080         	movff	MotionController_control@p1_863,___flge@ff1
  3948  00111E  C1A6  F081         	movff	MotionController_control@p1_863+1,___flge@ff1+1
  3949  001122  C1A7  F082         	movff	MotionController_control@p1_863+2,___flge@ff1+2
  3950  001126  C1A8  F083         	movff	MotionController_control@p1_863+3,___flge@ff1+3
  3951  00112A  C181  F084         	movff	MotionController_control@rateY_861,___flge@ff2
  3952  00112E  C182  F085         	movff	MotionController_control@rateY_861+1,___flge@ff2+1
  3953  001132  C183  F086         	movff	MotionController_control@rateY_861+2,___flge@ff2+2
  3954  001136  C184  F087         	movff	MotionController_control@rateY_861+3,___flge@ff2+3
  3955  00113A  EC33  F012         	call	___flge	;wreg free
  3956  00113E  0100               	movlb	0	; () banked
  3957  001140  A0D8               	btfss	status,0,c
  3958  001142  EFA5  F008         	goto	u5641
  3959  001146  EFA7  F008         	goto	u5640
  3960  00114A                     u5641:
  3961  00114A  EFCD  F008         	goto	l5000
  3962  00114E                     u5640:
  3963  00114E                     
  3964                           ; BSR set to: 0
  3965                           ;motioncontroller/MotionController.c: 129:             Engine_step(&motionController->y,
      +                           ys);
  3966  00114E  0E12               	movlw	18
  3967  001150  25B4               	addwf	MotionController_control@motionController& (0+255),w,b
  3968  001152  6F8A               	movwf	Engine_step@engine& (0+255),b
  3969  001154  0E00               	movlw	0
  3970  001156  21B5               	addwfc	(MotionController_control@motionController+1)& (0+255),w,b
  3971  001158  6F8B               	movwf	(Engine_step@engine+1)& (0+255),b
  3972  00115A  C1AF  F08C         	movff	MotionController_control@ys,Engine_step@dir
  3973  00115E  C1B0  F08D         	movff	MotionController_control@ys+1,Engine_step@dir+1
  3974  001162  EC19  F015         	call	_Engine_step	;wreg free
  3975  001166                     
  3976                           ;motioncontroller/MotionController.c: 130:             p1 -= rateY;
  3977  001166  C1A5  F090         	movff	MotionController_control@p1_863,___flsub@b
  3978  00116A  C1A6  F091         	movff	MotionController_control@p1_863+1,___flsub@b+1
  3979  00116E  C1A7  F092         	movff	MotionController_control@p1_863+2,___flsub@b+2
  3980  001172  C1A8  F093         	movff	MotionController_control@p1_863+3,___flsub@b+3
  3981  001176  C181  F094         	movff	MotionController_control@rateY_861,___flsub@a
  3982  00117A  C182  F095         	movff	MotionController_control@rateY_861+1,___flsub@a+1
  3983  00117E  C183  F096         	movff	MotionController_control@rateY_861+2,___flsub@a+2
  3984  001182  C184  F097         	movff	MotionController_control@rateY_861+3,___flsub@a+3
  3985  001186  ECE6  F016         	call	___flsub	;wreg free
  3986  00118A  C090  F1A5         	movff	?___flsub,MotionController_control@p1_863
  3987  00118E  C091  F1A6         	movff	?___flsub+1,MotionController_control@p1_863+1
  3988  001192  C092  F1A7         	movff	?___flsub+2,MotionController_control@p1_863+2
  3989  001196  C093  F1A8         	movff	?___flsub+3,MotionController_control@p1_863+3
  3990  00119A                     l5000:
  3991                           
  3992                           ;motioncontroller/MotionController.c: 132:         if (p2 >= rateX) {
  3993  00119A  C1A9  F080         	movff	MotionController_control@p2_864,___flge@ff1
  3994  00119E  C1AA  F081         	movff	MotionController_control@p2_864+1,___flge@ff1+1
  3995  0011A2  C1AB  F082         	movff	MotionController_control@p2_864+2,___flge@ff1+2
  3996  0011A6  C1AC  F083         	movff	MotionController_control@p2_864+3,___flge@ff1+3
  3997  0011AA  C185  F084         	movff	MotionController_control@rateX_862,___flge@ff2
  3998  0011AE  C186  F085         	movff	MotionController_control@rateX_862+1,___flge@ff2+1
  3999  0011B2  C187  F086         	movff	MotionController_control@rateX_862+2,___flge@ff2+2
  4000  0011B6  C188  F087         	movff	MotionController_control@rateX_862+3,___flge@ff2+3
  4001  0011BA  EC33  F012         	call	___flge	;wreg free
  4002  0011BE  0100               	movlb	0	; () banked
  4003  0011C0  A0D8               	btfss	status,0,c
  4004  0011C2  EFE5  F008         	goto	u5651
  4005  0011C6  EFE7  F008         	goto	u5650
  4006  0011CA                     u5651:
  4007  0011CA  EF0B  F009         	goto	l5006
  4008  0011CE                     u5650:
  4009  0011CE                     
  4010                           ; BSR set to: 0
  4011                           ;motioncontroller/MotionController.c: 133:             Engine_step(&motionController->x,
      +                           xs);
  4012  0011CE  C0B4  F08A         	movff	MotionController_control@motionController,Engine_step@engine
  4013  0011D2  C0B5  F08B         	movff	MotionController_control@motionController+1,Engine_step@engine+1
  4014  0011D6  C1AD  F08C         	movff	MotionController_control@xs,Engine_step@dir
  4015  0011DA  C1AE  F08D         	movff	MotionController_control@xs+1,Engine_step@dir+1
  4016  0011DE  EC19  F015         	call	_Engine_step	;wreg free
  4017  0011E2                     
  4018                           ;motioncontroller/MotionController.c: 134:             p2 -= rateX;
  4019  0011E2  C1A9  F090         	movff	MotionController_control@p2_864,___flsub@b
  4020  0011E6  C1AA  F091         	movff	MotionController_control@p2_864+1,___flsub@b+1
  4021  0011EA  C1AB  F092         	movff	MotionController_control@p2_864+2,___flsub@b+2
  4022  0011EE  C1AC  F093         	movff	MotionController_control@p2_864+3,___flsub@b+3
  4023  0011F2  C185  F094         	movff	MotionController_control@rateX_862,___flsub@a
  4024  0011F6  C186  F095         	movff	MotionController_control@rateX_862+1,___flsub@a+1
  4025  0011FA  C187  F096         	movff	MotionController_control@rateX_862+2,___flsub@a+2
  4026  0011FE  C188  F097         	movff	MotionController_control@rateX_862+3,___flsub@a+3
  4027  001202  ECE6  F016         	call	___flsub	;wreg free
  4028  001206  C090  F1A9         	movff	?___flsub,MotionController_control@p2_864
  4029  00120A  C091  F1AA         	movff	?___flsub+1,MotionController_control@p2_864+1
  4030  00120E  C092  F1AB         	movff	?___flsub+2,MotionController_control@p2_864+2
  4031  001212  C093  F1AC         	movff	?___flsub+3,MotionController_control@p2_864+3
  4032  001216                     l5006:
  4033                           
  4034                           ;motioncontroller/MotionController.c: 136:         p1 += 1;
  4035  001216  C1A5  F080         	movff	MotionController_control@p1_863,___fladd@b
  4036  00121A  C1A6  F081         	movff	MotionController_control@p1_863+1,___fladd@b+1
  4037  00121E  C1A7  F082         	movff	MotionController_control@p1_863+2,___fladd@b+2
  4038  001222  C1A8  F083         	movff	MotionController_control@p1_863+3,___fladd@b+3
  4039  001226  0E00               	movlw	0
  4040  001228  0100               	movlb	0	; () banked
  4041  00122A  6F84               	movwf	___fladd@a& (0+255),b
  4042  00122C  0E00               	movlw	0
  4043  00122E  6F85               	movwf	(___fladd@a+1)& (0+255),b
  4044  001230  0E80               	movlw	128
  4045  001232  6F86               	movwf	(___fladd@a+2)& (0+255),b
  4046  001234  0E3F               	movlw	63
  4047  001236  6F87               	movwf	(___fladd@a+3)& (0+255),b
  4048  001238  EC78  F009         	call	___fladd	;wreg free
  4049  00123C  C080  F1A5         	movff	?___fladd,MotionController_control@p1_863
  4050  001240  C081  F1A6         	movff	?___fladd+1,MotionController_control@p1_863+1
  4051  001244  C082  F1A7         	movff	?___fladd+2,MotionController_control@p1_863+2
  4052  001248  C083  F1A8         	movff	?___fladd+3,MotionController_control@p1_863+3
  4053  00124C                     
  4054                           ;motioncontroller/MotionController.c: 137:         p2 += 1;
  4055  00124C  C1A9  F080         	movff	MotionController_control@p2_864,___fladd@b
  4056  001250  C1AA  F081         	movff	MotionController_control@p2_864+1,___fladd@b+1
  4057  001254  C1AB  F082         	movff	MotionController_control@p2_864+2,___fladd@b+2
  4058  001258  C1AC  F083         	movff	MotionController_control@p2_864+3,___fladd@b+3
  4059  00125C  0E00               	movlw	0
  4060  00125E  0100               	movlb	0	; () banked
  4061  001260  6F84               	movwf	___fladd@a& (0+255),b
  4062  001262  0E00               	movlw	0
  4063  001264  6F85               	movwf	(___fladd@a+1)& (0+255),b
  4064  001266  0E80               	movlw	128
  4065  001268  6F86               	movwf	(___fladd@a+2)& (0+255),b
  4066  00126A  0E3F               	movlw	63
  4067  00126C  6F87               	movwf	(___fladd@a+3)& (0+255),b
  4068  00126E  EC78  F009         	call	___fladd	;wreg free
  4069  001272  C080  F1A9         	movff	?___fladd,MotionController_control@p2_864
  4070  001276  C081  F1AA         	movff	?___fladd+1,MotionController_control@p2_864+1
  4071  00127A  C082  F1AB         	movff	?___fladd+2,MotionController_control@p2_864+2
  4072  00127E  C083  F1AC         	movff	?___fladd+3,MotionController_control@p2_864+3
  4073  001282                     
  4074                           ;motioncontroller/MotionController.c: 139:         }
  4075  001282  C1CB  F090         	movff	MotionController_control@intDz,___flsub@b
  4076  001286  C1CC  F091         	movff	MotionController_control@intDz+1,___flsub@b+1
  4077  00128A  C1CD  F092         	movff	MotionController_control@intDz+2,___flsub@b+2
  4078  00128E  C1CE  F093         	movff	MotionController_control@intDz+3,___flsub@b+3
  4079  001292  0E00               	movlw	0
  4080  001294  0100               	movlb	0	; () banked
  4081  001296  6F94               	movwf	___flsub@a& (0+255),b
  4082  001298  0E00               	movlw	0
  4083  00129A  6F95               	movwf	(___flsub@a+1)& (0+255),b
  4084  00129C  0E80               	movlw	128
  4085  00129E  6F96               	movwf	(___flsub@a+2)& (0+255),b
  4086  0012A0  0E3F               	movlw	63
  4087  0012A2  6F97               	movwf	(___flsub@a+3)& (0+255),b
  4088  0012A4  ECE6  F016         	call	___flsub	;wreg free
  4089  0012A8  C090  F1CB         	movff	?___flsub,MotionController_control@intDz
  4090  0012AC  C091  F1CC         	movff	?___flsub+1,MotionController_control@intDz+1
  4091  0012B0  C092  F1CD         	movff	?___flsub+2,MotionController_control@intDz+2
  4092  0012B4  C093  F1CE         	movff	?___flsub+3,MotionController_control@intDz+3
  4093  0012B8  0E00               	movlw	0
  4094  0012BA  0100               	movlb	0	; () banked
  4095  0012BC  6F80               	movwf	___flge@ff1& (0+255),b
  4096  0012BE  0E00               	movlw	0
  4097  0012C0  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  4098  0012C2  0E80               	movlw	128
  4099  0012C4  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  4100  0012C6  0EBF               	movlw	191
  4101  0012C8  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  4102  0012CA  C1CB  F084         	movff	MotionController_control@intDz,___flge@ff2
  4103  0012CE  C1CC  F085         	movff	MotionController_control@intDz+1,___flge@ff2+1
  4104  0012D2  C1CD  F086         	movff	MotionController_control@intDz+2,___flge@ff2+2
  4105  0012D6  C1CE  F087         	movff	MotionController_control@intDz+3,___flge@ff2+3
  4106  0012DA  EC33  F012         	call	___flge	;wreg free
  4107  0012DE  0100               	movlb	0	; () banked
  4108  0012E0  A0D8               	btfss	status,0,c
  4109  0012E2  EF75  F009         	goto	u5661
  4110  0012E6  EF77  F009         	goto	u5660
  4111  0012EA                     u5661:
  4112  0012EA  EF81  F008         	goto	l4992
  4113  0012EE                     u5660:
  4114  0012EE                     l292:
  4115                           
  4116                           ; BSR set to: 0
  4117  0012EE  0012               	return		;funcret
  4118  0012F0                     __end_of_MotionController_control:
  4119                           	opt callstack 0
  4120                           
  4121 ;; *************** function _abs *****************
  4122 ;; Defined at:
  4123 ;;		line 1 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  a               2   34[BANK0 ] int 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  2   34[BANK0 ] int 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4137 ;;      Params:         0       2       0       0       0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0
  4139 ;;      Temps:          0       2       0       0       0       0       0
  4140 ;;      Totals:         0       4       0       0       0       0       0
  4141 ;;Total ram usage:        4 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    5
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_MotionController_control
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text20
  4152  002E58                     __ptext20:
  4153                           	opt callstack 0
  4154  002E58                     _abs:
  4155                           	opt callstack 23
  4156  002E58  0100               	movlb	0	; () banked
  4157  002E5A  BFA3               	btfsc	(abs@a+1)& (0+255),7,b
  4158  002E5C  EF3A  F017         	goto	u4710
  4159  002E60  51A3               	movf	(abs@a+1)& (0+255),w,b
  4160  002E62  E106               	bnz	u4711
  4161  002E64  05A2               	decf	abs@a& (0+255),w,b
  4162  002E66  B0D8               	btfsc	status,0,c
  4163  002E68  EF38  F017         	goto	u4711
  4164  002E6C  EF3A  F017         	goto	u4710
  4165  002E70                     u4711:
  4166  002E70  EF48  F017         	goto	l1329
  4167  002E74                     u4710:
  4168  002E74                     
  4169                           ; BSR set to: 0
  4170  002E74  C0A2  F0A4         	movff	abs@a,??_abs
  4171  002E78  C0A3  F0A5         	movff	abs@a+1,??_abs+1
  4172  002E7C  1FA4               	comf	??_abs& (0+255),f,b
  4173  002E7E  1FA5               	comf	(??_abs+1)& (0+255),f,b
  4174  002E80  4BA4               	infsnz	??_abs& (0+255),f,b
  4175  002E82  2BA5               	incf	(??_abs+1)& (0+255),f,b
  4176  002E84  C0A4  F0A2         	movff	??_abs,?_abs
  4177  002E88  C0A5  F0A3         	movff	??_abs+1,?_abs+1
  4178  002E8C  EF4C  F017         	goto	l1332
  4179  002E90                     l1329:
  4180                           
  4181                           ; BSR set to: 0
  4182  002E90  C0A2  F0A2         	movff	abs@a,?_abs
  4183  002E94  C0A3  F0A3         	movff	abs@a+1,?_abs+1
  4184  002E98                     l1332:
  4185                           
  4186                           ; BSR set to: 0
  4187  002E98  0012               	return		;funcret
  4188  002E9A                     __end_of_abs:
  4189                           	opt callstack 0
  4190                           
  4191 ;; *************** function ___xxtofl *****************
  4192 ;; Defined at:
  4193 ;;		line 10 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  sign            1    wreg     unsigned char 
  4196 ;;  val             4   38[BANK0 ] long 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  sign            1   46[BANK0 ] unsigned char 
  4199 ;;  arg             4   48[BANK0 ] unsigned long 
  4200 ;;  exp             1   47[BANK0 ] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  4   38[BANK0 ] unsigned char 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4210 ;;      Params:         0       4       0       0       0       0       0
  4211 ;;      Locals:         0       6       0       0       0       0       0
  4212 ;;      Temps:          0       4       0       0       0       0       0
  4213 ;;      Totals:         0      14       0       0       0       0       0
  4214 ;;Total ram usage:       14 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    5
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_MotionController_control
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text21
  4225  001F7A                     __ptext21:
  4226                           	opt callstack 0
  4227  001F7A                     ___xxtofl:
  4228                           	opt callstack 23
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;incstack = 0
  4232                           ;___xxtofl@sign stored from wreg
  4233  001F7A  0100               	movlb	0	; () banked
  4234  001F7C  6FAE               	movwf	___xxtofl@sign& (0+255),b
  4235  001F7E  0100               	movlb	0	; () banked
  4236  001F80  51AE               	movf	___xxtofl@sign& (0+255),w,b
  4237  001F82  B4D8               	btfsc	status,2,c
  4238  001F84  EFC6  F00F         	goto	u5311
  4239  001F88  EFC8  F00F         	goto	u5310
  4240  001F8C                     u5311:
  4241  001F8C  EFEA  F00F         	goto	l1309
  4242  001F90                     u5310:
  4243  001F90                     
  4244                           ; BSR set to: 0
  4245  001F90  BFA9               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  4246  001F92  EFCF  F00F         	goto	u5320
  4247  001F96  EFCD  F00F         	goto	u5321
  4248  001F9A                     u5321:
  4249  001F9A  EFEA  F00F         	goto	l1309
  4250  001F9E                     u5320:
  4251  001F9E                     
  4252                           ; BSR set to: 0
  4253  001F9E  C0A6  F0AA         	movff	___xxtofl@val,??___xxtofl
  4254  001FA2  C0A7  F0AB         	movff	___xxtofl@val+1,??___xxtofl+1
  4255  001FA6  C0A8  F0AC         	movff	___xxtofl@val+2,??___xxtofl+2
  4256  001FAA  C0A9  F0AD         	movff	___xxtofl@val+3,??___xxtofl+3
  4257  001FAE  1FAA               	comf	??___xxtofl& (0+255),f,b
  4258  001FB0  1FAB               	comf	(??___xxtofl+1)& (0+255),f,b
  4259  001FB2  1FAC               	comf	(??___xxtofl+2)& (0+255),f,b
  4260  001FB4  1FAD               	comf	(??___xxtofl+3)& (0+255),f,b
  4261  001FB6  2BAA               	incf	??___xxtofl& (0+255),f,b
  4262  001FB8  0E00               	movlw	0
  4263  001FBA  23AB               	addwfc	(??___xxtofl+1)& (0+255),f,b
  4264  001FBC  23AC               	addwfc	(??___xxtofl+2)& (0+255),f,b
  4265  001FBE  23AD               	addwfc	(??___xxtofl+3)& (0+255),f,b
  4266  001FC0  C0AA  F0B0         	movff	??___xxtofl,___xxtofl@arg
  4267  001FC4  C0AB  F0B1         	movff	??___xxtofl+1,___xxtofl@arg+1
  4268  001FC8  C0AC  F0B2         	movff	??___xxtofl+2,___xxtofl@arg+2
  4269  001FCC  C0AD  F0B3         	movff	??___xxtofl+3,___xxtofl@arg+3
  4270  001FD0  EFF2  F00F         	goto	l4818
  4271  001FD4                     l1309:
  4272                           
  4273                           ; BSR set to: 0
  4274  001FD4  C0A6  F0B0         	movff	___xxtofl@val,___xxtofl@arg
  4275  001FD8  C0A7  F0B1         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4276  001FDC  C0A8  F0B2         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4277  001FE0  C0A9  F0B3         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4278  001FE4                     l4818:
  4279                           
  4280                           ; BSR set to: 0
  4281  001FE4  51A6               	movf	___xxtofl@val& (0+255),w,b
  4282  001FE6  11A7               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  4283  001FE8  11A8               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  4284  001FEA  11A9               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  4285  001FEC  A4D8               	btfss	status,2,c
  4286  001FEE  EFFB  F00F         	goto	u5331
  4287  001FF2  EFFD  F00F         	goto	u5330
  4288  001FF6                     u5331:
  4289  001FF6  EF07  F010         	goto	l4824
  4290  001FFA                     u5330:
  4291  001FFA                     
  4292                           ; BSR set to: 0
  4293  001FFA  0E00               	movlw	0
  4294  001FFC  6FA6               	movwf	?___xxtofl& (0+255),b
  4295  001FFE  0E00               	movlw	0
  4296  002000  6FA7               	movwf	(?___xxtofl+1)& (0+255),b
  4297  002002  0E00               	movlw	0
  4298  002004  6FA8               	movwf	(?___xxtofl+2)& (0+255),b
  4299  002006  0E00               	movlw	0
  4300  002008  6FA9               	movwf	(?___xxtofl+3)& (0+255),b
  4301  00200A  EF98  F010         	goto	l1312
  4302  00200E                     l4824:
  4303                           
  4304                           ; BSR set to: 0
  4305  00200E  0E96               	movlw	150
  4306  002010  6FAF               	movwf	___xxtofl@exp& (0+255),b
  4307  002012  EF11  F010         	goto	l4828
  4308  002016                     l4826:
  4309                           
  4310                           ; BSR set to: 0
  4311  002016  2BAF               	incf	___xxtofl@exp& (0+255),f,b
  4312  002018  90D8               	bcf	status,0,c
  4313  00201A  33B3               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4314  00201C  33B2               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4315  00201E  33B1               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4316  002020  33B0               	rrcf	___xxtofl@arg& (0+255),f,b
  4317  002022                     l4828:
  4318                           
  4319                           ; BSR set to: 0
  4320  002022  0E00               	movlw	0
  4321  002024  15B0               	andwf	___xxtofl@arg& (0+255),w,b
  4322  002026  6FAA               	movwf	??___xxtofl& (0+255),b
  4323  002028  0E00               	movlw	0
  4324  00202A  15B1               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4325  00202C  6FAB               	movwf	(??___xxtofl+1)& (0+255),b
  4326  00202E  0E00               	movlw	0
  4327  002030  15B2               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4328  002032  6FAC               	movwf	(??___xxtofl+2)& (0+255),b
  4329  002034  0EFE               	movlw	254
  4330  002036  15B3               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4331  002038  6FAD               	movwf	(??___xxtofl+3)& (0+255),b
  4332  00203A  51AA               	movf	??___xxtofl& (0+255),w,b
  4333  00203C  11AB               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4334  00203E  11AC               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4335  002040  11AD               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4336  002042  A4D8               	btfss	status,2,c
  4337  002044  EF26  F010         	goto	u5341
  4338  002048  EF28  F010         	goto	u5340
  4339  00204C                     u5341:
  4340  00204C  EF0B  F010         	goto	l4826
  4341  002050                     u5340:
  4342  002050  EF36  F010         	goto	l1316
  4343  002054                     l4830:
  4344                           
  4345                           ; BSR set to: 0
  4346  002054  2BAF               	incf	___xxtofl@exp& (0+255),f,b
  4347  002056                     
  4348                           ; BSR set to: 0
  4349  002056  0E01               	movlw	1
  4350  002058  27B0               	addwf	___xxtofl@arg& (0+255),f,b
  4351  00205A  0E00               	movlw	0
  4352  00205C  23B1               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  4353  00205E  23B2               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  4354  002060  23B3               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  4355  002062                     
  4356                           ; BSR set to: 0
  4357  002062  90D8               	bcf	status,0,c
  4358  002064  33B3               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4359  002066  33B2               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4360  002068  33B1               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4361  00206A  33B0               	rrcf	___xxtofl@arg& (0+255),f,b
  4362  00206C                     l1316:
  4363                           
  4364                           ; BSR set to: 0
  4365  00206C  0E00               	movlw	0
  4366  00206E  15B0               	andwf	___xxtofl@arg& (0+255),w,b
  4367  002070  6FAA               	movwf	??___xxtofl& (0+255),b
  4368  002072  0E00               	movlw	0
  4369  002074  15B1               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4370  002076  6FAB               	movwf	(??___xxtofl+1)& (0+255),b
  4371  002078  0E00               	movlw	0
  4372  00207A  15B2               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4373  00207C  6FAC               	movwf	(??___xxtofl+2)& (0+255),b
  4374  00207E  0EFF               	movlw	255
  4375  002080  15B3               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4376  002082  6FAD               	movwf	(??___xxtofl+3)& (0+255),b
  4377  002084  51AA               	movf	??___xxtofl& (0+255),w,b
  4378  002086  11AB               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4379  002088  11AC               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4380  00208A  11AD               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4381  00208C  A4D8               	btfss	status,2,c
  4382  00208E  EF4B  F010         	goto	u5351
  4383  002092  EF4D  F010         	goto	u5350
  4384  002096                     u5351:
  4385  002096  EF2A  F010         	goto	l4830
  4386  00209A                     u5350:
  4387  00209A  EF55  F010         	goto	l4838
  4388  00209E                     l4836:
  4389                           
  4390                           ; BSR set to: 0
  4391  00209E  07AF               	decf	___xxtofl@exp& (0+255),f,b
  4392  0020A0  90D8               	bcf	status,0,c
  4393  0020A2  37B0               	rlcf	___xxtofl@arg& (0+255),f,b
  4394  0020A4  37B1               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4395  0020A6  37B2               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4396  0020A8  37B3               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4397  0020AA                     l4838:
  4398                           
  4399                           ; BSR set to: 0
  4400  0020AA  BFB2               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4401  0020AC  EF5A  F010         	goto	u5361
  4402  0020B0  EF5C  F010         	goto	u5360
  4403  0020B4                     u5361:
  4404  0020B4  EF64  F010         	goto	l1323
  4405  0020B8                     u5360:
  4406  0020B8                     
  4407                           ; BSR set to: 0
  4408  0020B8  0E02               	movlw	2
  4409  0020BA  61AF               	cpfslt	___xxtofl@exp& (0+255),b
  4410  0020BC  EF62  F010         	goto	u5371
  4411  0020C0  EF64  F010         	goto	u5370
  4412  0020C4                     u5371:
  4413  0020C4  EF4F  F010         	goto	l4836
  4414  0020C8                     u5370:
  4415  0020C8                     l1323:
  4416                           
  4417                           ; BSR set to: 0
  4418  0020C8  B1AF               	btfsc	___xxtofl@exp& (0+255),0,b
  4419  0020CA  EF69  F010         	goto	u5381
  4420  0020CE  EF6B  F010         	goto	u5380
  4421  0020D2                     u5381:
  4422  0020D2  EF6C  F010         	goto	l4844
  4423  0020D6                     u5380:
  4424  0020D6                     
  4425                           ; BSR set to: 0
  4426  0020D6  9FB2               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  4427  0020D8                     l4844:
  4428                           
  4429                           ; BSR set to: 0
  4430  0020D8  90D8               	bcf	status,0,c
  4431  0020DA  33AF               	rrcf	___xxtofl@exp& (0+255),f,b
  4432  0020DC                     
  4433                           ; BSR set to: 0
  4434  0020DC  C0AF  F0AA         	movff	___xxtofl@exp,??___xxtofl
  4435  0020E0  6BAB               	clrf	(??___xxtofl+1)& (0+255),b
  4436  0020E2  6BAC               	clrf	(??___xxtofl+2)& (0+255),b
  4437  0020E4  6BAD               	clrf	(??___xxtofl+3)& (0+255),b
  4438  0020E6  C0AA  F0AD         	movff	??___xxtofl,??___xxtofl+3
  4439  0020EA  6BAC               	clrf	(??___xxtofl+2)& (0+255),b
  4440  0020EC  6BAB               	clrf	(??___xxtofl+1)& (0+255),b
  4441  0020EE  6BAA               	clrf	??___xxtofl& (0+255),b
  4442  0020F0  51AA               	movf	??___xxtofl& (0+255),w,b
  4443  0020F2  13B0               	iorwf	___xxtofl@arg& (0+255),f,b
  4444  0020F4  51AB               	movf	(??___xxtofl+1)& (0+255),w,b
  4445  0020F6  13B1               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4446  0020F8  51AC               	movf	(??___xxtofl+2)& (0+255),w,b
  4447  0020FA  13B2               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4448  0020FC  51AD               	movf	(??___xxtofl+3)& (0+255),w,b
  4449  0020FE  13B3               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4450  002100                     
  4451                           ; BSR set to: 0
  4452  002100  51AE               	movf	___xxtofl@sign& (0+255),w,b
  4453  002102  B4D8               	btfsc	status,2,c
  4454  002104  EF86  F010         	goto	u5391
  4455  002108  EF88  F010         	goto	u5390
  4456  00210C                     u5391:
  4457  00210C  EF90  F010         	goto	l4854
  4458  002110                     u5390:
  4459  002110                     
  4460                           ; BSR set to: 0
  4461  002110  BFA9               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  4462  002112  EF8F  F010         	goto	u5400
  4463  002116  EF8D  F010         	goto	u5401
  4464  00211A                     u5401:
  4465  00211A  EF90  F010         	goto	l4854
  4466  00211E                     u5400:
  4467  00211E                     
  4468                           ; BSR set to: 0
  4469  00211E  8FB3               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4470  002120                     l4854:
  4471                           
  4472                           ; BSR set to: 0
  4473  002120  C0B0  F0A6         	movff	___xxtofl@arg,?___xxtofl
  4474  002124  C0B1  F0A7         	movff	___xxtofl@arg+1,?___xxtofl+1
  4475  002128  C0B2  F0A8         	movff	___xxtofl@arg+2,?___xxtofl+2
  4476  00212C  C0B3  F0A9         	movff	___xxtofl@arg+3,?___xxtofl+3
  4477  002130                     l1312:
  4478                           
  4479                           ; BSR set to: 0
  4480  002130  0012               	return		;funcret
  4481  002132                     __end_of___xxtofl:
  4482                           	opt callstack 0
  4483                           
  4484 ;; *************** function ___fltol *****************
  4485 ;; Defined at:
  4486 ;;		line 43 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  f1              4   24[BANK0 ] unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  exp1            1   33[BANK0 ] unsigned char 
  4491 ;;  sign1           1   32[BANK0 ] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4   24[BANK0 ] long 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4501 ;;      Params:         0       4       0       0       0       0       0
  4502 ;;      Locals:         0       2       0       0       0       0       0
  4503 ;;      Temps:          0       4       0       0       0       0       0
  4504 ;;      Totals:         0      10       0       0       0       0       0
  4505 ;;Total ram usage:       10 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    5
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_MotionController_control
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text22
  4516  00235E                     __ptext22:
  4517                           	opt callstack 0
  4518  00235E                     ___fltol:
  4519                           	opt callstack 23
  4520  00235E  0100               	movlb	0	; () banked
  4521  002360  359A               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4522  002362  359B               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4523  002364  6FA1               	movwf	___fltol@exp1& (0+255),b
  4524  002366  51A1               	movf	___fltol@exp1& (0+255),w,b
  4525  002368  A4D8               	btfss	status,2,c
  4526  00236A  EFB9  F011         	goto	u5241
  4527  00236E  EFBB  F011         	goto	u5240
  4528  002372                     u5241:
  4529  002372  EFC5  F011         	goto	l4774
  4530  002376                     u5240:
  4531  002376                     l4770:
  4532                           
  4533                           ; BSR set to: 0
  4534  002376  0E00               	movlw	0
  4535  002378  6F98               	movwf	?___fltol& (0+255),b
  4536  00237A  0E00               	movlw	0
  4537  00237C  6F99               	movwf	(?___fltol+1)& (0+255),b
  4538  00237E  0E00               	movlw	0
  4539  002380  6F9A               	movwf	(?___fltol+2)& (0+255),b
  4540  002382  0E00               	movlw	0
  4541  002384  6F9B               	movwf	(?___fltol+3)& (0+255),b
  4542  002386  EF32  F012         	goto	l951
  4543  00238A                     l4774:
  4544                           
  4545                           ; BSR set to: 0
  4546  00238A  C098  F09C         	movff	___fltol@f1,??___fltol
  4547  00238E  C099  F09D         	movff	___fltol@f1+1,??___fltol+1
  4548  002392  C09A  F09E         	movff	___fltol@f1+2,??___fltol+2
  4549  002396  C09B  F09F         	movff	___fltol@f1+3,??___fltol+3
  4550  00239A  0E20               	movlw	32
  4551  00239C  EFD5  F011         	goto	u5250
  4552  0023A0                     u5255:
  4553  0023A0  90D8               	bcf	status,0,c
  4554  0023A2  339F               	rrcf	(??___fltol+3)& (0+255),f,b
  4555  0023A4  339E               	rrcf	(??___fltol+2)& (0+255),f,b
  4556  0023A6  339D               	rrcf	(??___fltol+1)& (0+255),f,b
  4557  0023A8  339C               	rrcf	??___fltol& (0+255),f,b
  4558  0023AA                     u5250:
  4559  0023AA  2EE8               	decfsz	wreg,f,c
  4560  0023AC  EFD0  F011         	goto	u5255
  4561  0023B0  519C               	movf	??___fltol& (0+255),w,b
  4562  0023B2  6FA0               	movwf	___fltol@sign1& (0+255),b
  4563  0023B4                     
  4564                           ; BSR set to: 0
  4565  0023B4  8F9A               	bsf	(___fltol@f1+2)& (0+255),7,b
  4566  0023B6                     
  4567                           ; BSR set to: 0
  4568  0023B6  0EFF               	movlw	255
  4569  0023B8  1798               	andwf	___fltol@f1& (0+255),f,b
  4570  0023BA  0EFF               	movlw	255
  4571  0023BC  1799               	andwf	(___fltol@f1+1)& (0+255),f,b
  4572  0023BE  0EFF               	movlw	255
  4573  0023C0  179A               	andwf	(___fltol@f1+2)& (0+255),f,b
  4574  0023C2  0E00               	movlw	0
  4575  0023C4  179B               	andwf	(___fltol@f1+3)& (0+255),f,b
  4576  0023C6                     
  4577                           ; BSR set to: 0
  4578  0023C6  0E96               	movlw	150
  4579  0023C8  5FA1               	subwf	___fltol@exp1& (0+255),f,b
  4580  0023CA                     
  4581                           ; BSR set to: 0
  4582  0023CA  BFA1               	btfsc	___fltol@exp1& (0+255),7,b
  4583  0023CC  EFEC  F011         	goto	u5260
  4584  0023D0  EFEA  F011         	goto	u5261
  4585  0023D4                     u5261:
  4586  0023D4  EF02  F012         	goto	l4794
  4587  0023D8                     u5260:
  4588  0023D8                     
  4589                           ; BSR set to: 0
  4590  0023D8  51A1               	movf	___fltol@exp1& (0+255),w,b
  4591  0023DA  0A80               	xorlw	128
  4592  0023DC  0F97               	addlw	151
  4593  0023DE  B0D8               	btfsc	status,0,c
  4594  0023E0  EFF4  F011         	goto	u5271
  4595  0023E4  EFF6  F011         	goto	u5270
  4596  0023E8                     u5271:
  4597  0023E8  EFF8  F011         	goto	l4790
  4598  0023EC                     u5270:
  4599  0023EC  EFBB  F011         	goto	l4770
  4600  0023F0                     l4790:
  4601                           
  4602                           ; BSR set to: 0
  4603  0023F0  90D8               	bcf	status,0,c
  4604  0023F2  339B               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4605  0023F4  339A               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4606  0023F6  3399               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4607  0023F8  3398               	rrcf	___fltol@f1& (0+255),f,b
  4608  0023FA                     
  4609                           ; BSR set to: 0
  4610  0023FA  3FA1               	incfsz	___fltol@exp1& (0+255),f,b
  4611  0023FC  EFF8  F011         	goto	l4790
  4612  002400  EF1A  F012         	goto	l4804
  4613  002404                     l4794:
  4614                           
  4615                           ; BSR set to: 0
  4616  002404  0E1F               	movlw	31
  4617  002406  65A1               	cpfsgt	___fltol@exp1& (0+255),b
  4618  002408  EF08  F012         	goto	u5281
  4619  00240C  EF0A  F012         	goto	u5280
  4620  002410                     u5281:
  4621  002410  EF12  F012         	goto	l4802
  4622  002414                     u5280:
  4623  002414  EFBB  F011         	goto	l4770
  4624  002418                     l4800:
  4625                           
  4626                           ; BSR set to: 0
  4627  002418  90D8               	bcf	status,0,c
  4628  00241A  3798               	rlcf	___fltol@f1& (0+255),f,b
  4629  00241C  3799               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4630  00241E  379A               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4631  002420  379B               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4632  002422  07A1               	decf	___fltol@exp1& (0+255),f,b
  4633  002424                     l4802:
  4634                           
  4635                           ; BSR set to: 0
  4636  002424  51A1               	movf	___fltol@exp1& (0+255),w,b
  4637  002426  A4D8               	btfss	status,2,c
  4638  002428  EF18  F012         	goto	u5291
  4639  00242C  EF1A  F012         	goto	u5290
  4640  002430                     u5291:
  4641  002430  EF0C  F012         	goto	l4800
  4642  002434                     u5290:
  4643  002434                     l4804:
  4644                           
  4645                           ; BSR set to: 0
  4646  002434  51A0               	movf	___fltol@sign1& (0+255),w,b
  4647  002436  B4D8               	btfsc	status,2,c
  4648  002438  EF20  F012         	goto	u5301
  4649  00243C  EF22  F012         	goto	u5300
  4650  002440                     u5301:
  4651  002440  EF2A  F012         	goto	l4808
  4652  002444                     u5300:
  4653  002444                     
  4654                           ; BSR set to: 0
  4655  002444  1F9B               	comf	(___fltol@f1+3)& (0+255),f,b
  4656  002446  1F9A               	comf	(___fltol@f1+2)& (0+255),f,b
  4657  002448  1F99               	comf	(___fltol@f1+1)& (0+255),f,b
  4658  00244A  6D98               	negf	___fltol@f1& (0+255),b
  4659  00244C  0E00               	movlw	0
  4660  00244E  2399               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4661  002450  239A               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4662  002452  239B               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4663  002454                     l4808:
  4664                           
  4665                           ; BSR set to: 0
  4666  002454  C098  F098         	movff	___fltol@f1,?___fltol
  4667  002458  C099  F099         	movff	___fltol@f1+1,?___fltol+1
  4668  00245C  C09A  F09A         	movff	___fltol@f1+2,?___fltol+2
  4669  002460  C09B  F09B         	movff	___fltol@f1+3,?___fltol+3
  4670  002464                     l951:
  4671                           
  4672                           ; BSR set to: 0
  4673  002464  0012               	return		;funcret
  4674  002466                     __end_of___fltol:
  4675                           	opt callstack 0
  4676                           
  4677 ;; *************** function ___flsub *****************
  4678 ;; Defined at:
  4679 ;;		line 245 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  b               4   16[BANK0 ] long 
  4682 ;;  a               4   20[BANK0 ] long 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  4   16[BANK0 ] long 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4694 ;;      Params:         0       8       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0
  4697 ;;      Totals:         0       8       0       0       0       0       0
  4698 ;;Total ram usage:        8 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    6
  4701 ;; This function calls:
  4702 ;;		___fladd
  4703 ;; This function is called by:
  4704 ;;		_MotionController_control
  4705 ;;		_Point_distance
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text23
  4710  002DCC                     __ptext23:
  4711                           	opt callstack 0
  4712  002DCC                     ___flsub:
  4713                           	opt callstack 22
  4714  002DCC  0E00               	movlw	0
  4715  002DCE  0100               	movlb	0	; () banked
  4716  002DD0  1B94               	xorwf	___flsub@a& (0+255),f,b
  4717  002DD2  0E00               	movlw	0
  4718  002DD4  1B95               	xorwf	(___flsub@a+1)& (0+255),f,b
  4719  002DD6  0E00               	movlw	0
  4720  002DD8  1B96               	xorwf	(___flsub@a+2)& (0+255),f,b
  4721  002DDA  0E80               	movlw	128
  4722  002DDC  1B97               	xorwf	(___flsub@a+3)& (0+255),f,b
  4723  002DDE                     
  4724                           ; BSR set to: 0
  4725  002DDE  C090  F080         	movff	___flsub@b,___fladd@b
  4726  002DE2  C091  F081         	movff	___flsub@b+1,___fladd@b+1
  4727  002DE6  C092  F082         	movff	___flsub@b+2,___fladd@b+2
  4728  002DEA  C093  F083         	movff	___flsub@b+3,___fladd@b+3
  4729  002DEE  C094  F084         	movff	___flsub@a,___fladd@a
  4730  002DF2  C095  F085         	movff	___flsub@a+1,___fladd@a+1
  4731  002DF6  C096  F086         	movff	___flsub@a+2,___fladd@a+2
  4732  002DFA  C097  F087         	movff	___flsub@a+3,___fladd@a+3
  4733  002DFE  EC78  F009         	call	___fladd	;wreg free
  4734  002E02  C080  F090         	movff	?___fladd,?___flsub
  4735  002E06  C081  F091         	movff	?___fladd+1,?___flsub+1
  4736  002E0A  C082  F092         	movff	?___fladd+2,?___flsub+2
  4737  002E0E  C083  F093         	movff	?___fladd+3,?___flsub+3
  4738  002E12  0012               	return		;funcret
  4739  002E14                     __end_of___flsub:
  4740                           	opt callstack 0
  4741                           
  4742 ;; *************** function ___fladd *****************
  4743 ;; Defined at:
  4744 ;;		line 10 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  b               4    0[BANK0 ] long 
  4747 ;;  a               4    4[BANK0 ] long 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  grs             1   15[BANK0 ] unsigned char 
  4750 ;;  bexp            1   14[BANK0 ] unsigned char 
  4751 ;;  aexp            1   13[BANK0 ] unsigned char 
  4752 ;;  signs           1   12[BANK0 ] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  4    0[BANK0 ] unsigned char 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4762 ;;      Params:         0       8       0       0       0       0       0
  4763 ;;      Locals:         0       4       0       0       0       0       0
  4764 ;;      Temps:          0       4       0       0       0       0       0
  4765 ;;      Totals:         0      16       0       0       0       0       0
  4766 ;;Total ram usage:       16 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    5
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_MotionController_control
  4773 ;;		___flsub
  4774 ;;		_Engine_setDestinationToAddCurrentCoord
  4775 ;;		_Point_distance
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text24
  4780  0012F0                     __ptext24:
  4781                           	opt callstack 0
  4782  0012F0                     ___fladd:
  4783                           	opt callstack 22
  4784  0012F0  0100               	movlb	0	; () banked
  4785  0012F2  5183               	movf	(___fladd@b+3)& (0+255),w,b
  4786  0012F4  0B80               	andlw	128
  4787  0012F6  6F8C               	movwf	___fladd@signs& (0+255),b
  4788  0012F8  5183               	movf	(___fladd@b+3)& (0+255),w,b
  4789  0012FA  2583               	addwf	(___fladd@b+3)& (0+255),w,b
  4790  0012FC  6F8E               	movwf	___fladd@bexp& (0+255),b
  4791  0012FE                     
  4792                           ; BSR set to: 0
  4793  0012FE  AF82               	btfss	(___fladd@b+2)& (0+255),7,b
  4794  001300  EF84  F009         	goto	u4251
  4795  001304  EF86  F009         	goto	u4250
  4796  001308                     u4251:
  4797  001308  EF87  F009         	goto	l4188
  4798  00130C                     u4250:
  4799  00130C                     
  4800                           ; BSR set to: 0
  4801  00130C  818E               	bsf	___fladd@bexp& (0+255),0,b
  4802  00130E                     l4188:
  4803                           
  4804                           ; BSR set to: 0
  4805  00130E  518E               	movf	___fladd@bexp& (0+255),w,b
  4806  001310  B4D8               	btfsc	status,2,c
  4807  001312  EF8D  F009         	goto	u4261
  4808  001316  EF8F  F009         	goto	u4260
  4809  00131A                     u4261:
  4810  00131A  EFA4  F009         	goto	l4198
  4811  00131E                     u4260:
  4812  00131E                     
  4813                           ; BSR set to: 0
  4814  00131E  298E               	incf	___fladd@bexp& (0+255),w,b
  4815  001320  A4D8               	btfss	status,2,c
  4816  001322  EF95  F009         	goto	u4271
  4817  001326  EF97  F009         	goto	u4270
  4818  00132A                     u4271:
  4819  00132A  EF9F  F009         	goto	l4194
  4820  00132E                     u4270:
  4821  00132E                     
  4822                           ; BSR set to: 0
  4823  00132E  0E00               	movlw	0
  4824  001330  6F80               	movwf	___fladd@b& (0+255),b
  4825  001332  0E00               	movlw	0
  4826  001334  6F81               	movwf	(___fladd@b+1)& (0+255),b
  4827  001336  0E00               	movlw	0
  4828  001338  6F82               	movwf	(___fladd@b+2)& (0+255),b
  4829  00133A  0E00               	movlw	0
  4830  00133C  6F83               	movwf	(___fladd@b+3)& (0+255),b
  4831  00133E                     l4194:
  4832                           
  4833                           ; BSR set to: 0
  4834  00133E  8F82               	bsf	(___fladd@b+2)& (0+255),7,b
  4835  001340                     
  4836                           ; BSR set to: 0
  4837  001340  0E00               	movlw	0
  4838  001342  6F83               	movwf	(___fladd@b+3)& (0+255),b
  4839  001344  EFAC  F009         	goto	l4200
  4840  001348                     l4198:
  4841                           
  4842                           ; BSR set to: 0
  4843  001348  0E00               	movlw	0
  4844  00134A  6F80               	movwf	___fladd@b& (0+255),b
  4845  00134C  0E00               	movlw	0
  4846  00134E  6F81               	movwf	(___fladd@b+1)& (0+255),b
  4847  001350  0E00               	movlw	0
  4848  001352  6F82               	movwf	(___fladd@b+2)& (0+255),b
  4849  001354  0E00               	movlw	0
  4850  001356  6F83               	movwf	(___fladd@b+3)& (0+255),b
  4851  001358                     l4200:
  4852                           
  4853                           ; BSR set to: 0
  4854  001358  5187               	movf	(___fladd@a+3)& (0+255),w,b
  4855  00135A  0B80               	andlw	128
  4856  00135C  6F8D               	movwf	___fladd@aexp& (0+255),b
  4857  00135E                     
  4858                           ; BSR set to: 0
  4859  00135E  518C               	movf	___fladd@signs& (0+255),w,b
  4860  001360  198D               	xorwf	___fladd@aexp& (0+255),w,b
  4861  001362  B4D8               	btfsc	status,2,c
  4862  001364  EFB6  F009         	goto	u4281
  4863  001368  EFB8  F009         	goto	u4280
  4864  00136C                     u4281:
  4865  00136C  EFB9  F009         	goto	l4206
  4866  001370                     u4280:
  4867  001370                     
  4868                           ; BSR set to: 0
  4869  001370  8D8C               	bsf	___fladd@signs& (0+255),6,b
  4870  001372                     l4206:
  4871                           
  4872                           ; BSR set to: 0
  4873  001372  5187               	movf	(___fladd@a+3)& (0+255),w,b
  4874  001374  2587               	addwf	(___fladd@a+3)& (0+255),w,b
  4875  001376  6F8D               	movwf	___fladd@aexp& (0+255),b
  4876  001378                     
  4877                           ; BSR set to: 0
  4878  001378  AF86               	btfss	(___fladd@a+2)& (0+255),7,b
  4879  00137A  EFC1  F009         	goto	u4291
  4880  00137E  EFC3  F009         	goto	u4290
  4881  001382                     u4291:
  4882  001382  EFC4  F009         	goto	l4212
  4883  001386                     u4290:
  4884  001386                     
  4885                           ; BSR set to: 0
  4886  001386  818D               	bsf	___fladd@aexp& (0+255),0,b
  4887  001388                     l4212:
  4888                           
  4889                           ; BSR set to: 0
  4890  001388  518D               	movf	___fladd@aexp& (0+255),w,b
  4891  00138A  B4D8               	btfsc	status,2,c
  4892  00138C  EFCA  F009         	goto	u4301
  4893  001390  EFCC  F009         	goto	u4300
  4894  001394                     u4301:
  4895  001394  EFE1  F009         	goto	l4222
  4896  001398                     u4300:
  4897  001398                     
  4898                           ; BSR set to: 0
  4899  001398  298D               	incf	___fladd@aexp& (0+255),w,b
  4900  00139A  A4D8               	btfss	status,2,c
  4901  00139C  EFD2  F009         	goto	u4311
  4902  0013A0  EFD4  F009         	goto	u4310
  4903  0013A4                     u4311:
  4904  0013A4  EFDC  F009         	goto	l4218
  4905  0013A8                     u4310:
  4906  0013A8                     
  4907                           ; BSR set to: 0
  4908  0013A8  0E00               	movlw	0
  4909  0013AA  6F84               	movwf	___fladd@a& (0+255),b
  4910  0013AC  0E00               	movlw	0
  4911  0013AE  6F85               	movwf	(___fladd@a+1)& (0+255),b
  4912  0013B0  0E00               	movlw	0
  4913  0013B2  6F86               	movwf	(___fladd@a+2)& (0+255),b
  4914  0013B4  0E00               	movlw	0
  4915  0013B6  6F87               	movwf	(___fladd@a+3)& (0+255),b
  4916  0013B8                     l4218:
  4917                           
  4918                           ; BSR set to: 0
  4919  0013B8  8F86               	bsf	(___fladd@a+2)& (0+255),7,b
  4920  0013BA                     
  4921                           ; BSR set to: 0
  4922  0013BA  0E00               	movlw	0
  4923  0013BC  6F87               	movwf	(___fladd@a+3)& (0+255),b
  4924  0013BE  EFE9  F009         	goto	l4224
  4925  0013C2                     l4222:
  4926                           
  4927                           ; BSR set to: 0
  4928  0013C2  0E00               	movlw	0
  4929  0013C4  6F84               	movwf	___fladd@a& (0+255),b
  4930  0013C6  0E00               	movlw	0
  4931  0013C8  6F85               	movwf	(___fladd@a+1)& (0+255),b
  4932  0013CA  0E00               	movlw	0
  4933  0013CC  6F86               	movwf	(___fladd@a+2)& (0+255),b
  4934  0013CE  0E00               	movlw	0
  4935  0013D0  6F87               	movwf	(___fladd@a+3)& (0+255),b
  4936  0013D2                     l4224:
  4937                           
  4938                           ; BSR set to: 0
  4939  0013D2  518E               	movf	___fladd@bexp& (0+255),w,b
  4940  0013D4  5D8D               	subwf	___fladd@aexp& (0+255),w,b
  4941  0013D6  B0D8               	btfsc	status,0,c
  4942  0013D8  EFF0  F009         	goto	u4321
  4943  0013DC  EFF2  F009         	goto	u4320
  4944  0013E0                     u4321:
  4945  0013E0  EF19  F00A         	goto	l4260
  4946  0013E4                     u4320:
  4947  0013E4                     
  4948                           ; BSR set to: 0
  4949  0013E4  AD8C               	btfss	___fladd@signs& (0+255),6,b
  4950  0013E6  EFF7  F009         	goto	u4331
  4951  0013EA  EFF9  F009         	goto	u4330
  4952  0013EE                     u4331:
  4953  0013EE  EFFB  F009         	goto	l4230
  4954  0013F2                     u4330:
  4955  0013F2                     
  4956                           ; BSR set to: 0
  4957  0013F2  0E80               	movlw	128
  4958  0013F4  1B8C               	xorwf	___fladd@signs& (0+255),f,b
  4959  0013F6                     l4230:
  4960                           
  4961                           ; BSR set to: 0
  4962  0013F6  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
  4963  0013FA                     
  4964                           ; BSR set to: 0
  4965  0013FA  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
  4966  0013FE                     
  4967                           ; BSR set to: 0
  4968  0013FE  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
  4969  001402                     
  4970                           ; BSR set to: 0
  4971  001402  C080  F08F         	movff	___fladd@b,___fladd@grs
  4972  001406                     
  4973                           ; BSR set to: 0
  4974  001406  C084  F080         	movff	___fladd@a,___fladd@b
  4975  00140A                     
  4976                           ; BSR set to: 0
  4977  00140A  C08F  F084         	movff	___fladd@grs,___fladd@a
  4978  00140E                     
  4979                           ; BSR set to: 0
  4980  00140E  C081  F08F         	movff	___fladd@b+1,___fladd@grs
  4981  001412                     
  4982                           ; BSR set to: 0
  4983  001412  C085  F081         	movff	___fladd@a+1,___fladd@b+1
  4984  001416                     
  4985                           ; BSR set to: 0
  4986  001416  C08F  F085         	movff	___fladd@grs,___fladd@a+1
  4987  00141A                     
  4988                           ; BSR set to: 0
  4989  00141A  C082  F08F         	movff	___fladd@b+2,___fladd@grs
  4990  00141E                     
  4991                           ; BSR set to: 0
  4992  00141E  C086  F082         	movff	___fladd@a+2,___fladd@b+2
  4993  001422                     
  4994                           ; BSR set to: 0
  4995  001422  C08F  F086         	movff	___fladd@grs,___fladd@a+2
  4996  001426                     
  4997                           ; BSR set to: 0
  4998  001426  C083  F08F         	movff	___fladd@b+3,___fladd@grs
  4999  00142A                     
  5000                           ; BSR set to: 0
  5001  00142A  C087  F083         	movff	___fladd@a+3,___fladd@b+3
  5002  00142E                     
  5003                           ; BSR set to: 0
  5004  00142E  C08F  F087         	movff	___fladd@grs,___fladd@a+3
  5005  001432                     l4260:
  5006                           
  5007                           ; BSR set to: 0
  5008  001432  0E00               	movlw	0
  5009  001434  6F8F               	movwf	___fladd@grs& (0+255),b
  5010  001436                     
  5011                           ; BSR set to: 0
  5012  001436  518E               	movf	___fladd@bexp& (0+255),w,b
  5013  001438  C08D  F088         	movff	___fladd@aexp,??___fladd
  5014  00143C  6B89               	clrf	(??___fladd+1)& (0+255),b
  5015  00143E  5F88               	subwf	??___fladd& (0+255),f,b
  5016  001440  0E00               	movlw	0
  5017  001442  5B89               	subwfb	(??___fladd+1)& (0+255),f,b
  5018  001444  BF89               	btfsc	(??___fladd+1)& (0+255),7,b
  5019  001446  EF2E  F00A         	goto	u4341
  5020  00144A  5189               	movf	(??___fladd+1)& (0+255),w,b
  5021  00144C  E109               	bnz	u4340
  5022  00144E  0E1A               	movlw	26
  5023  001450  5D88               	subwf	??___fladd& (0+255),w,b
  5024  001452  A0D8               	btfss	status,0,c
  5025  001454  EF2E  F00A         	goto	u4341
  5026  001458  EF30  F00A         	goto	u4340
  5027  00145C                     u4341:
  5028  00145C  EF67  F00A         	goto	l1183
  5029  001460                     u4340:
  5030  001460                     
  5031                           ; BSR set to: 0
  5032  001460  5180               	movf	___fladd@b& (0+255),w,b
  5033  001462  1181               	iorwf	(___fladd@b+1)& (0+255),w,b
  5034  001464  1182               	iorwf	(___fladd@b+2)& (0+255),w,b
  5035  001466  1183               	iorwf	(___fladd@b+3)& (0+255),w,b
  5036  001468  A4D8               	btfss	status,2,c
  5037  00146A  EF39  F00A         	goto	u4351
  5038  00146E  EF3C  F00A         	goto	u4350
  5039  001472                     u4351:
  5040  001472  0E01               	movlw	1
  5041  001474  EF3D  F00A         	goto	u4360
  5042  001478                     u4350:
  5043  001478  0E00               	movlw	0
  5044  00147A                     u4360:
  5045  00147A  6F8F               	movwf	___fladd@grs& (0+255),b
  5046  00147C                     
  5047                           ; BSR set to: 0
  5048  00147C  0E00               	movlw	0
  5049  00147E  6F80               	movwf	___fladd@b& (0+255),b
  5050  001480  0E00               	movlw	0
  5051  001482  6F81               	movwf	(___fladd@b+1)& (0+255),b
  5052  001484  0E00               	movlw	0
  5053  001486  6F82               	movwf	(___fladd@b+2)& (0+255),b
  5054  001488  0E00               	movlw	0
  5055  00148A  6F83               	movwf	(___fladd@b+3)& (0+255),b
  5056  00148C                     
  5057                           ; BSR set to: 0
  5058  00148C  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
  5059  001490  EF70  F00A         	goto	l1182
  5060  001494                     l1184:
  5061                           
  5062                           ; BSR set to: 0
  5063  001494  A18F               	btfss	___fladd@grs& (0+255),0,b
  5064  001496  EF4F  F00A         	goto	u4371
  5065  00149A  EF51  F00A         	goto	u4370
  5066  00149E                     u4371:
  5067  00149E  EF57  F00A         	goto	l4272
  5068  0014A2                     u4370:
  5069  0014A2                     
  5070                           ; BSR set to: 0
  5071  0014A2  90D8               	bcf	status,0,c
  5072  0014A4  318F               	rrcf	___fladd@grs& (0+255),w,b
  5073  0014A6  0901               	iorlw	1
  5074  0014A8  6F8F               	movwf	___fladd@grs& (0+255),b
  5075  0014AA  EF59  F00A         	goto	l4274
  5076  0014AE                     l4272:
  5077                           
  5078                           ; BSR set to: 0
  5079  0014AE  90D8               	bcf	status,0,c
  5080  0014B0  338F               	rrcf	___fladd@grs& (0+255),f,b
  5081  0014B2                     l4274:
  5082                           
  5083                           ; BSR set to: 0
  5084  0014B2  A180               	btfss	___fladd@b& (0+255),0,b
  5085  0014B4  EF5E  F00A         	goto	u4381
  5086  0014B8  EF60  F00A         	goto	u4380
  5087  0014BC                     u4381:
  5088  0014BC  EF61  F00A         	goto	l4278
  5089  0014C0                     u4380:
  5090  0014C0                     
  5091                           ; BSR set to: 0
  5092  0014C0  8F8F               	bsf	___fladd@grs& (0+255),7,b
  5093  0014C2                     l4278:
  5094                           
  5095                           ; BSR set to: 0
  5096  0014C2  3583               	rlcf	(___fladd@b+3)& (0+255),w,b
  5097  0014C4  3383               	rrcf	(___fladd@b+3)& (0+255),f,b
  5098  0014C6  3382               	rrcf	(___fladd@b+2)& (0+255),f,b
  5099  0014C8  3381               	rrcf	(___fladd@b+1)& (0+255),f,b
  5100  0014CA  3380               	rrcf	___fladd@b& (0+255),f,b
  5101  0014CC                     
  5102                           ; BSR set to: 0
  5103  0014CC  2B8E               	incf	___fladd@bexp& (0+255),f,b
  5104  0014CE                     l1183:
  5105                           
  5106                           ; BSR set to: 0
  5107  0014CE  518D               	movf	___fladd@aexp& (0+255),w,b
  5108  0014D0  5D8E               	subwf	___fladd@bexp& (0+255),w,b
  5109  0014D2  A0D8               	btfss	status,0,c
  5110  0014D4  EF6E  F00A         	goto	u4391
  5111  0014D8  EF70  F00A         	goto	u4390
  5112  0014DC                     u4391:
  5113  0014DC  EF4A  F00A         	goto	l1184
  5114  0014E0                     u4390:
  5115  0014E0                     l1182:
  5116                           
  5117                           ; BSR set to: 0
  5118  0014E0  BD8C               	btfsc	___fladd@signs& (0+255),6,b
  5119  0014E2  EF75  F00A         	goto	u4401
  5120  0014E6  EF77  F00A         	goto	u4400
  5121  0014EA                     u4401:
  5122  0014EA  EFB7  F00A         	goto	l4306
  5123  0014EE                     u4400:
  5124  0014EE                     
  5125                           ; BSR set to: 0
  5126  0014EE  518E               	movf	___fladd@bexp& (0+255),w,b
  5127  0014F0  A4D8               	btfss	status,2,c
  5128  0014F2  EF7D  F00A         	goto	u4411
  5129  0014F6  EF7F  F00A         	goto	u4410
  5130  0014FA                     u4411:
  5131  0014FA  EF89  F00A         	goto	l4288
  5132  0014FE                     u4410:
  5133  0014FE                     
  5134                           ; BSR set to: 0
  5135  0014FE  0E00               	movlw	0
  5136  001500  6F80               	movwf	?___fladd& (0+255),b
  5137  001502  0E00               	movlw	0
  5138  001504  6F81               	movwf	(?___fladd+1)& (0+255),b
  5139  001506  0E00               	movlw	0
  5140  001508  6F82               	movwf	(?___fladd+2)& (0+255),b
  5141  00150A  0E00               	movlw	0
  5142  00150C  6F83               	movwf	(?___fladd+3)& (0+255),b
  5143  00150E  EFD8  F00B         	goto	l1191
  5144  001512                     l4288:
  5145                           
  5146                           ; BSR set to: 0
  5147  001512  5184               	movf	___fladd@a& (0+255),w,b
  5148  001514  2780               	addwf	___fladd@b& (0+255),f,b
  5149  001516  5185               	movf	(___fladd@a+1)& (0+255),w,b
  5150  001518  2381               	addwfc	(___fladd@b+1)& (0+255),f,b
  5151  00151A  5186               	movf	(___fladd@a+2)& (0+255),w,b
  5152  00151C  2382               	addwfc	(___fladd@b+2)& (0+255),f,b
  5153  00151E  5187               	movf	(___fladd@a+3)& (0+255),w,b
  5154  001520  2383               	addwfc	(___fladd@b+3)& (0+255),f,b
  5155  001522                     
  5156                           ; BSR set to: 0
  5157  001522  A183               	btfss	(___fladd@b+3)& (0+255),0,b
  5158  001524  EF96  F00A         	goto	u4421
  5159  001528  EF98  F00A         	goto	u4420
  5160  00152C                     u4421:
  5161  00152C  EF44  F00B         	goto	l4342
  5162  001530                     u4420:
  5163  001530                     
  5164                           ; BSR set to: 0
  5165  001530  A18F               	btfss	___fladd@grs& (0+255),0,b
  5166  001532  EF9D  F00A         	goto	u4431
  5167  001536  EF9F  F00A         	goto	u4430
  5168  00153A                     u4431:
  5169  00153A  EFA5  F00A         	goto	l4296
  5170  00153E                     u4430:
  5171  00153E                     
  5172                           ; BSR set to: 0
  5173  00153E  90D8               	bcf	status,0,c
  5174  001540  318F               	rrcf	___fladd@grs& (0+255),w,b
  5175  001542  0901               	iorlw	1
  5176  001544  6F8F               	movwf	___fladd@grs& (0+255),b
  5177  001546  EFA7  F00A         	goto	l4298
  5178  00154A                     l4296:
  5179                           
  5180                           ; BSR set to: 0
  5181  00154A  90D8               	bcf	status,0,c
  5182  00154C  338F               	rrcf	___fladd@grs& (0+255),f,b
  5183  00154E                     l4298:
  5184                           
  5185                           ; BSR set to: 0
  5186  00154E  A180               	btfss	___fladd@b& (0+255),0,b
  5187  001550  EFAC  F00A         	goto	u4441
  5188  001554  EFAE  F00A         	goto	u4440
  5189  001558                     u4441:
  5190  001558  EFAF  F00A         	goto	l4302
  5191  00155C                     u4440:
  5192  00155C                     
  5193                           ; BSR set to: 0
  5194  00155C  8F8F               	bsf	___fladd@grs& (0+255),7,b
  5195  00155E                     l4302:
  5196                           
  5197                           ; BSR set to: 0
  5198  00155E  3583               	rlcf	(___fladd@b+3)& (0+255),w,b
  5199  001560  3383               	rrcf	(___fladd@b+3)& (0+255),f,b
  5200  001562  3382               	rrcf	(___fladd@b+2)& (0+255),f,b
  5201  001564  3381               	rrcf	(___fladd@b+1)& (0+255),f,b
  5202  001566  3380               	rrcf	___fladd@b& (0+255),f,b
  5203  001568                     
  5204                           ; BSR set to: 0
  5205  001568  2B8E               	incf	___fladd@bexp& (0+255),f,b
  5206  00156A  EF44  F00B         	goto	l4342
  5207  00156E                     l4306:
  5208                           
  5209                           ; BSR set to: 0
  5210  00156E  5184               	movf	___fladd@a& (0+255),w,b
  5211  001570  5D80               	subwf	___fladd@b& (0+255),w,b
  5212  001572  5185               	movf	(___fladd@a+1)& (0+255),w,b
  5213  001574  5981               	subwfb	(___fladd@b+1)& (0+255),w,b
  5214  001576  5186               	movf	(___fladd@a+2)& (0+255),w,b
  5215  001578  5982               	subwfb	(___fladd@b+2)& (0+255),w,b
  5216  00157A  5183               	movf	(___fladd@b+3)& (0+255),w,b
  5217  00157C  0A80               	xorlw	128
  5218  00157E  6F88               	movwf	??___fladd& (0+255),b
  5219  001580  5187               	movf	(___fladd@a+3)& (0+255),w,b
  5220  001582  0A80               	xorlw	128
  5221  001584  5988               	subwfb	??___fladd& (0+255),w,b
  5222  001586  B0D8               	btfsc	status,0,c
  5223  001588  EFC8  F00A         	goto	u4451
  5224  00158C  EFCA  F00A         	goto	u4450
  5225  001590                     u4451:
  5226  001590  EFF5  F00A         	goto	l4316
  5227  001594                     u4450:
  5228  001594                     
  5229                           ; BSR set to: 0
  5230  001594  5180               	movf	___fladd@b& (0+255),w,b
  5231  001596  5D84               	subwf	___fladd@a& (0+255),w,b
  5232  001598  6F88               	movwf	??___fladd& (0+255),b
  5233  00159A  5181               	movf	(___fladd@b+1)& (0+255),w,b
  5234  00159C  5985               	subwfb	(___fladd@a+1)& (0+255),w,b
  5235  00159E  6F89               	movwf	(??___fladd+1)& (0+255),b
  5236  0015A0  5182               	movf	(___fladd@b+2)& (0+255),w,b
  5237  0015A2  5986               	subwfb	(___fladd@a+2)& (0+255),w,b
  5238  0015A4  6F8A               	movwf	(??___fladd+2)& (0+255),b
  5239  0015A6  5183               	movf	(___fladd@b+3)& (0+255),w,b
  5240  0015A8  5987               	subwfb	(___fladd@a+3)& (0+255),w,b
  5241  0015AA  6F8B               	movwf	(??___fladd+3)& (0+255),b
  5242  0015AC  0EFF               	movlw	255
  5243  0015AE  2588               	addwf	??___fladd& (0+255),w,b
  5244  0015B0  6F80               	movwf	___fladd@b& (0+255),b
  5245  0015B2  0EFF               	movlw	255
  5246  0015B4  2189               	addwfc	(??___fladd+1)& (0+255),w,b
  5247  0015B6  6F81               	movwf	(___fladd@b+1)& (0+255),b
  5248  0015B8  0EFF               	movlw	255
  5249  0015BA  218A               	addwfc	(??___fladd+2)& (0+255),w,b
  5250  0015BC  6F82               	movwf	(___fladd@b+2)& (0+255),b
  5251  0015BE  0EFF               	movlw	255
  5252  0015C0  218B               	addwfc	(??___fladd+3)& (0+255),w,b
  5253  0015C2  6F83               	movwf	(___fladd@b+3)& (0+255),b
  5254  0015C4  0E80               	movlw	128
  5255  0015C6  1B8C               	xorwf	___fladd@signs& (0+255),f,b
  5256  0015C8                     
  5257                           ; BSR set to: 0
  5258  0015C8  6D8F               	negf	___fladd@grs& (0+255),b
  5259  0015CA                     
  5260                           ; BSR set to: 0
  5261  0015CA  518F               	movf	___fladd@grs& (0+255),w,b
  5262  0015CC  A4D8               	btfss	status,2,c
  5263  0015CE  EFEB  F00A         	goto	u4461
  5264  0015D2  EFED  F00A         	goto	u4460
  5265  0015D6                     u4461:
  5266  0015D6  EFFD  F00A         	goto	l1199
  5267  0015DA                     u4460:
  5268  0015DA                     
  5269                           ; BSR set to: 0
  5270  0015DA  0E01               	movlw	1
  5271  0015DC  2780               	addwf	___fladd@b& (0+255),f,b
  5272  0015DE  0E00               	movlw	0
  5273  0015E0  2381               	addwfc	(___fladd@b+1)& (0+255),f,b
  5274  0015E2  2382               	addwfc	(___fladd@b+2)& (0+255),f,b
  5275  0015E4  2383               	addwfc	(___fladd@b+3)& (0+255),f,b
  5276  0015E6  EFFD  F00A         	goto	l1199
  5277  0015EA                     l4316:
  5278                           
  5279                           ; BSR set to: 0
  5280  0015EA  5184               	movf	___fladd@a& (0+255),w,b
  5281  0015EC  5F80               	subwf	___fladd@b& (0+255),f,b
  5282  0015EE  5185               	movf	(___fladd@a+1)& (0+255),w,b
  5283  0015F0  5B81               	subwfb	(___fladd@b+1)& (0+255),f,b
  5284  0015F2  5186               	movf	(___fladd@a+2)& (0+255),w,b
  5285  0015F4  5B82               	subwfb	(___fladd@b+2)& (0+255),f,b
  5286  0015F6  5187               	movf	(___fladd@a+3)& (0+255),w,b
  5287  0015F8  5B83               	subwfb	(___fladd@b+3)& (0+255),f,b
  5288  0015FA                     l1199:
  5289                           
  5290                           ; BSR set to: 0
  5291  0015FA  5180               	movf	___fladd@b& (0+255),w,b
  5292  0015FC  1181               	iorwf	(___fladd@b+1)& (0+255),w,b
  5293  0015FE  1182               	iorwf	(___fladd@b+2)& (0+255),w,b
  5294  001600  1183               	iorwf	(___fladd@b+3)& (0+255),w,b
  5295  001602  A4D8               	btfss	status,2,c
  5296  001604  EF06  F00B         	goto	u4471
  5297  001608  EF08  F00B         	goto	u4470
  5298  00160C                     u4471:
  5299  00160C  EF3D  F00B         	goto	l4340
  5300  001610                     u4470:
  5301  001610                     
  5302                           ; BSR set to: 0
  5303  001610  518F               	movf	___fladd@grs& (0+255),w,b
  5304  001612  A4D8               	btfss	status,2,c
  5305  001614  EF0E  F00B         	goto	u4481
  5306  001618  EF10  F00B         	goto	u4480
  5307  00161C                     u4481:
  5308  00161C  EF3D  F00B         	goto	l4340
  5309  001620                     u4480:
  5310  001620                     
  5311                           ; BSR set to: 0
  5312  001620  0E00               	movlw	0
  5313  001622  6F80               	movwf	?___fladd& (0+255),b
  5314  001624  0E00               	movlw	0
  5315  001626  6F81               	movwf	(?___fladd+1)& (0+255),b
  5316  001628  0E00               	movlw	0
  5317  00162A  6F82               	movwf	(?___fladd+2)& (0+255),b
  5318  00162C  0E00               	movlw	0
  5319  00162E  6F83               	movwf	(?___fladd+3)& (0+255),b
  5320  001630  EFD8  F00B         	goto	l1191
  5321  001634                     l4324:
  5322                           
  5323                           ; BSR set to: 0
  5324  001634  90D8               	bcf	status,0,c
  5325  001636  3780               	rlcf	___fladd@b& (0+255),f,b
  5326  001638  3781               	rlcf	(___fladd@b+1)& (0+255),f,b
  5327  00163A  3782               	rlcf	(___fladd@b+2)& (0+255),f,b
  5328  00163C  3783               	rlcf	(___fladd@b+3)& (0+255),f,b
  5329  00163E                     
  5330                           ; BSR set to: 0
  5331  00163E  AF8F               	btfss	___fladd@grs& (0+255),7,b
  5332  001640  EF24  F00B         	goto	u4491
  5333  001644  EF26  F00B         	goto	u4490
  5334  001648                     u4491:
  5335  001648  EF27  F00B         	goto	l4330
  5336  00164C                     u4490:
  5337  00164C                     
  5338                           ; BSR set to: 0
  5339  00164C  8180               	bsf	___fladd@b& (0+255),0,b
  5340  00164E                     l4330:
  5341                           
  5342                           ; BSR set to: 0
  5343  00164E  A18F               	btfss	___fladd@grs& (0+255),0,b
  5344  001650  EF2C  F00B         	goto	u4501
  5345  001654  EF2E  F00B         	goto	u4500
  5346  001658                     u4501:
  5347  001658  EF32  F00B         	goto	l4334
  5348  00165C                     u4500:
  5349  00165C                     
  5350                           ; BSR set to: 0
  5351  00165C  80D8               	bsf	status,0,c
  5352  00165E  378F               	rlcf	___fladd@grs& (0+255),f,b
  5353  001660  EF34  F00B         	goto	l4336
  5354  001664                     l4334:
  5355                           
  5356                           ; BSR set to: 0
  5357  001664  90D8               	bcf	status,0,c
  5358  001666  378F               	rlcf	___fladd@grs& (0+255),f,b
  5359  001668                     l4336:
  5360                           
  5361                           ; BSR set to: 0
  5362  001668  518E               	movf	___fladd@bexp& (0+255),w,b
  5363  00166A  B4D8               	btfsc	status,2,c
  5364  00166C  EF3A  F00B         	goto	u4511
  5365  001670  EF3C  F00B         	goto	u4510
  5366  001674                     u4511:
  5367  001674  EF3D  F00B         	goto	l4340
  5368  001678                     u4510:
  5369  001678                     
  5370                           ; BSR set to: 0
  5371  001678  078E               	decf	___fladd@bexp& (0+255),f,b
  5372  00167A                     l4340:
  5373                           
  5374                           ; BSR set to: 0
  5375  00167A  AF82               	btfss	(___fladd@b+2)& (0+255),7,b
  5376  00167C  EF42  F00B         	goto	u4521
  5377  001680  EF44  F00B         	goto	u4520
  5378  001684                     u4521:
  5379  001684  EF1A  F00B         	goto	l4324
  5380  001688                     u4520:
  5381  001688                     l4342:
  5382                           
  5383                           ; BSR set to: 0
  5384  001688  0E00               	movlw	0
  5385  00168A  6F8D               	movwf	___fladd@aexp& (0+255),b
  5386  00168C                     
  5387                           ; BSR set to: 0
  5388  00168C  AF8F               	btfss	___fladd@grs& (0+255),7,b
  5389  00168E  EF4B  F00B         	goto	u4531
  5390  001692  EF4D  F00B         	goto	u4530
  5391  001696                     u4531:
  5392  001696  EF65  F00B         	goto	l1208
  5393  00169A                     u4530:
  5394  00169A                     
  5395                           ; BSR set to: 0
  5396  00169A  C08F  F088         	movff	___fladd@grs,??___fladd
  5397  00169E  0E7F               	movlw	127
  5398  0016A0  1788               	andwf	??___fladd& (0+255),f,b
  5399  0016A2  B4D8               	btfsc	status,2,c
  5400  0016A4  EF56  F00B         	goto	u4541
  5401  0016A8  EF58  F00B         	goto	u4540
  5402  0016AC                     u4541:
  5403  0016AC  EF5C  F00B         	goto	l1209
  5404  0016B0                     u4540:
  5405  0016B0                     l4348:
  5406                           
  5407                           ; BSR set to: 0
  5408  0016B0  0E01               	movlw	1
  5409  0016B2  6F8D               	movwf	___fladd@aexp& (0+255),b
  5410  0016B4  EF65  F00B         	goto	l1208
  5411  0016B8                     l1209:
  5412                           
  5413                           ; BSR set to: 0
  5414  0016B8  A180               	btfss	___fladd@b& (0+255),0,b
  5415  0016BA  EF61  F00B         	goto	u4551
  5416  0016BE  EF63  F00B         	goto	u4550
  5417  0016C2                     u4551:
  5418  0016C2  EF65  F00B         	goto	l1208
  5419  0016C6                     u4550:
  5420  0016C6  EF58  F00B         	goto	l4348
  5421  0016CA                     l1208:
  5422                           
  5423                           ; BSR set to: 0
  5424  0016CA  518D               	movf	___fladd@aexp& (0+255),w,b
  5425  0016CC  B4D8               	btfsc	status,2,c
  5426  0016CE  EF6B  F00B         	goto	u4561
  5427  0016D2  EF6D  F00B         	goto	u4560
  5428  0016D6                     u4561:
  5429  0016D6  EF98  F00B         	goto	l4360
  5430  0016DA                     u4560:
  5431  0016DA                     
  5432                           ; BSR set to: 0
  5433  0016DA  0E01               	movlw	1
  5434  0016DC  2780               	addwf	___fladd@b& (0+255),f,b
  5435  0016DE  0E00               	movlw	0
  5436  0016E0  2381               	addwfc	(___fladd@b+1)& (0+255),f,b
  5437  0016E2  2382               	addwfc	(___fladd@b+2)& (0+255),f,b
  5438  0016E4  2383               	addwfc	(___fladd@b+3)& (0+255),f,b
  5439  0016E6                     
  5440                           ; BSR set to: 0
  5441  0016E6  A183               	btfss	(___fladd@b+3)& (0+255),0,b
  5442  0016E8  EF78  F00B         	goto	u4571
  5443  0016EC  EF7A  F00B         	goto	u4570
  5444  0016F0                     u4571:
  5445  0016F0  EF98  F00B         	goto	l4360
  5446  0016F4                     u4570:
  5447  0016F4                     
  5448                           ; BSR set to: 0
  5449  0016F4  C080  F088         	movff	___fladd@b,??___fladd
  5450  0016F8  C081  F089         	movff	___fladd@b+1,??___fladd+1
  5451  0016FC  C082  F08A         	movff	___fladd@b+2,??___fladd+2
  5452  001700  C083  F08B         	movff	___fladd@b+3,??___fladd+3
  5453  001704  358B               	rlcf	(??___fladd+3)& (0+255),w,b
  5454  001706  338B               	rrcf	(??___fladd+3)& (0+255),f,b
  5455  001708  338A               	rrcf	(??___fladd+2)& (0+255),f,b
  5456  00170A  3389               	rrcf	(??___fladd+1)& (0+255),f,b
  5457  00170C  3388               	rrcf	??___fladd& (0+255),f,b
  5458  00170E  C088  F080         	movff	??___fladd,___fladd@b
  5459  001712  C089  F081         	movff	??___fladd+1,___fladd@b+1
  5460  001716  C08A  F082         	movff	??___fladd+2,___fladd@b+2
  5461  00171A  C08B  F083         	movff	??___fladd+3,___fladd@b+3
  5462  00171E  298E               	incf	___fladd@bexp& (0+255),w,b
  5463  001720  B4D8               	btfsc	status,2,c
  5464  001722  EF95  F00B         	goto	u4581
  5465  001726  EF97  F00B         	goto	u4580
  5466  00172A                     u4581:
  5467  00172A  EF98  F00B         	goto	l4360
  5468  00172E                     u4580:
  5469  00172E                     
  5470                           ; BSR set to: 0
  5471  00172E  2B8E               	incf	___fladd@bexp& (0+255),f,b
  5472  001730                     l4360:
  5473                           
  5474                           ; BSR set to: 0
  5475  001730  298E               	incf	___fladd@bexp& (0+255),w,b
  5476  001732  B4D8               	btfsc	status,2,c
  5477  001734  EF9E  F00B         	goto	u4591
  5478  001738  EFA0  F00B         	goto	u4590
  5479  00173C                     u4591:
  5480  00173C  EFA8  F00B         	goto	l4364
  5481  001740                     u4590:
  5482  001740                     
  5483                           ; BSR set to: 0
  5484  001740  518E               	movf	___fladd@bexp& (0+255),w,b
  5485  001742  A4D8               	btfss	status,2,c
  5486  001744  EFA6  F00B         	goto	u4601
  5487  001748  EFA8  F00B         	goto	u4600
  5488  00174C                     u4601:
  5489  00174C  EFBA  F00B         	goto	l4368
  5490  001750                     u4600:
  5491  001750                     l4364:
  5492                           
  5493                           ; BSR set to: 0
  5494  001750  0E00               	movlw	0
  5495  001752  6F80               	movwf	___fladd@b& (0+255),b
  5496  001754  0E00               	movlw	0
  5497  001756  6F81               	movwf	(___fladd@b+1)& (0+255),b
  5498  001758  0E00               	movlw	0
  5499  00175A  6F82               	movwf	(___fladd@b+2)& (0+255),b
  5500  00175C  0E00               	movlw	0
  5501  00175E  6F83               	movwf	(___fladd@b+3)& (0+255),b
  5502  001760  518E               	movf	___fladd@bexp& (0+255),w,b
  5503  001762  A4D8               	btfss	status,2,c
  5504  001764  EFB6  F00B         	goto	u4611
  5505  001768  EFB8  F00B         	goto	u4610
  5506  00176C                     u4611:
  5507  00176C  EFBA  F00B         	goto	l4368
  5508  001770                     u4610:
  5509  001770                     
  5510                           ; BSR set to: 0
  5511  001770  0E00               	movlw	0
  5512  001772  6F8C               	movwf	___fladd@signs& (0+255),b
  5513  001774                     l4368:
  5514                           
  5515                           ; BSR set to: 0
  5516  001774  A18E               	btfss	___fladd@bexp& (0+255),0,b
  5517  001776  EFBF  F00B         	goto	u4621
  5518  00177A  EFC1  F00B         	goto	u4620
  5519  00177E                     u4621:
  5520  00177E  EFC4  F00B         	goto	l4372
  5521  001782                     u4620:
  5522  001782                     
  5523                           ; BSR set to: 0
  5524  001782  8F82               	bsf	(___fladd@b+2)& (0+255),7,b
  5525  001784  EFC5  F00B         	goto	l4374
  5526  001788                     l4372:
  5527                           
  5528                           ; BSR set to: 0
  5529  001788  9F82               	bcf	(___fladd@b+2)& (0+255),7,b
  5530  00178A                     l4374:
  5531                           
  5532                           ; BSR set to: 0
  5533  00178A  90D8               	bcf	status,0,c
  5534  00178C  318E               	rrcf	___fladd@bexp& (0+255),w,b
  5535  00178E  6F83               	movwf	(___fladd@b+3)& (0+255),b
  5536  001790                     
  5537                           ; BSR set to: 0
  5538  001790  AF8C               	btfss	___fladd@signs& (0+255),7,b
  5539  001792  EFCD  F00B         	goto	u4631
  5540  001796  EFCF  F00B         	goto	u4630
  5541  00179A                     u4631:
  5542  00179A  EFD0  F00B         	goto	l4380
  5543  00179E                     u4630:
  5544  00179E                     
  5545                           ; BSR set to: 0
  5546  00179E  8F83               	bsf	(___fladd@b+3)& (0+255),7,b
  5547  0017A0                     l4380:
  5548                           
  5549                           ; BSR set to: 0
  5550  0017A0  C080  F080         	movff	___fladd@b,?___fladd
  5551  0017A4  C081  F081         	movff	___fladd@b+1,?___fladd+1
  5552  0017A8  C082  F082         	movff	___fladd@b+2,?___fladd+2
  5553  0017AC  C083  F083         	movff	___fladd@b+3,?___fladd+3
  5554  0017B0                     l1191:
  5555                           
  5556                           ; BSR set to: 0
  5557  0017B0  0012               	return		;funcret
  5558  0017B2                     __end_of___fladd:
  5559                           	opt callstack 0
  5560                           
  5561 ;; *************** function ___flmul *****************
  5562 ;; Defined at:
  5563 ;;		line 8 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  b               4    4[BANK0 ] unsigned char 
  5566 ;;  a               4    8[BANK0 ] unsigned char 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  prod            4   23[BANK0 ] struct .
  5569 ;;  grs             4   18[BANK0 ] unsigned long 
  5570 ;;  temp            2   27[BANK0 ] struct .
  5571 ;;  bexp            1   22[BANK0 ] unsigned char 
  5572 ;;  aexp            1   17[BANK0 ] unsigned char 
  5573 ;;  sign            1   16[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  4    4[BANK0 ] unsigned char 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, prodl, prodh
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5583 ;;      Params:         0       8       0       0       0       0       0
  5584 ;;      Locals:         0      13       0       0       0       0       0
  5585 ;;      Temps:          0       4       0       0       0       0       0
  5586 ;;      Totals:         0      25       0       0       0       0       0
  5587 ;;Total ram usage:       25 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    5
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_MotionController_control
  5594 ;;		_Point_distance
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text25
  5599  0017B2                     __ptext25:
  5600                           	opt callstack 0
  5601  0017B2                     ___flmul:
  5602                           	opt callstack 23
  5603  0017B2  0100               	movlb	0	; () banked
  5604  0017B4  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5605  0017B6  0B80               	andlw	128
  5606  0017B8  6F90               	movwf	___flmul@sign& (0+255),b
  5607  0017BA  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5608  0017BC  2587               	addwf	(___flmul@b+3)& (0+255),w,b
  5609  0017BE  6F96               	movwf	___flmul@bexp& (0+255),b
  5610  0017C0                     
  5611                           ; BSR set to: 0
  5612  0017C0  AF86               	btfss	(___flmul@b+2)& (0+255),7,b
  5613  0017C2  EFE5  F00B         	goto	u5001
  5614  0017C6  EFE7  F00B         	goto	u5000
  5615  0017CA                     u5001:
  5616  0017CA  EFE8  F00B         	goto	l4616
  5617  0017CE                     u5000:
  5618  0017CE                     
  5619                           ; BSR set to: 0
  5620  0017CE  8196               	bsf	___flmul@bexp& (0+255),0,b
  5621  0017D0                     l4616:
  5622                           
  5623                           ; BSR set to: 0
  5624  0017D0  5196               	movf	___flmul@bexp& (0+255),w,b
  5625  0017D2  B4D8               	btfsc	status,2,c
  5626  0017D4  EFEE  F00B         	goto	u5011
  5627  0017D8  EFF0  F00B         	goto	u5010
  5628  0017DC                     u5011:
  5629  0017DC  EF03  F00C         	goto	l4624
  5630  0017E0                     u5010:
  5631  0017E0                     
  5632                           ; BSR set to: 0
  5633  0017E0  2996               	incf	___flmul@bexp& (0+255),w,b
  5634  0017E2  A4D8               	btfss	status,2,c
  5635  0017E4  EFF6  F00B         	goto	u5021
  5636  0017E8  EFF8  F00B         	goto	u5020
  5637  0017EC                     u5021:
  5638  0017EC  EF00  F00C         	goto	l4622
  5639  0017F0                     u5020:
  5640  0017F0                     
  5641                           ; BSR set to: 0
  5642  0017F0  0E00               	movlw	0
  5643  0017F2  6F84               	movwf	___flmul@b& (0+255),b
  5644  0017F4  0E00               	movlw	0
  5645  0017F6  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5646  0017F8  0E00               	movlw	0
  5647  0017FA  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5648  0017FC  0E00               	movlw	0
  5649  0017FE  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5650  001800                     l4622:
  5651                           
  5652                           ; BSR set to: 0
  5653  001800  8F86               	bsf	(___flmul@b+2)& (0+255),7,b
  5654  001802  EF0B  F00C         	goto	l4626
  5655  001806                     l4624:
  5656                           
  5657                           ; BSR set to: 0
  5658  001806  0E00               	movlw	0
  5659  001808  6F84               	movwf	___flmul@b& (0+255),b
  5660  00180A  0E00               	movlw	0
  5661  00180C  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5662  00180E  0E00               	movlw	0
  5663  001810  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5664  001812  0E00               	movlw	0
  5665  001814  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5666  001816                     l4626:
  5667                           
  5668                           ; BSR set to: 0
  5669  001816  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5670  001818  0B80               	andlw	128
  5671  00181A  1B90               	xorwf	___flmul@sign& (0+255),f,b
  5672  00181C                     
  5673                           ; BSR set to: 0
  5674  00181C  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5675  00181E  258B               	addwf	(___flmul@a+3)& (0+255),w,b
  5676  001820  6F91               	movwf	___flmul@aexp& (0+255),b
  5677  001822                     
  5678                           ; BSR set to: 0
  5679  001822  AF8A               	btfss	(___flmul@a+2)& (0+255),7,b
  5680  001824  EF16  F00C         	goto	u5031
  5681  001828  EF18  F00C         	goto	u5030
  5682  00182C                     u5031:
  5683  00182C  EF19  F00C         	goto	l4634
  5684  001830                     u5030:
  5685  001830                     
  5686                           ; BSR set to: 0
  5687  001830  8191               	bsf	___flmul@aexp& (0+255),0,b
  5688  001832                     l4634:
  5689                           
  5690                           ; BSR set to: 0
  5691  001832  5191               	movf	___flmul@aexp& (0+255),w,b
  5692  001834  B4D8               	btfsc	status,2,c
  5693  001836  EF1F  F00C         	goto	u5041
  5694  00183A  EF21  F00C         	goto	u5040
  5695  00183E                     u5041:
  5696  00183E  EF34  F00C         	goto	l4642
  5697  001842                     u5040:
  5698  001842                     
  5699                           ; BSR set to: 0
  5700  001842  2991               	incf	___flmul@aexp& (0+255),w,b
  5701  001844  A4D8               	btfss	status,2,c
  5702  001846  EF27  F00C         	goto	u5051
  5703  00184A  EF29  F00C         	goto	u5050
  5704  00184E                     u5051:
  5705  00184E  EF31  F00C         	goto	l4640
  5706  001852                     u5050:
  5707  001852                     
  5708                           ; BSR set to: 0
  5709  001852  0E00               	movlw	0
  5710  001854  6F88               	movwf	___flmul@a& (0+255),b
  5711  001856  0E00               	movlw	0
  5712  001858  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5713  00185A  0E00               	movlw	0
  5714  00185C  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5715  00185E  0E00               	movlw	0
  5716  001860  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5717  001862                     l4640:
  5718                           
  5719                           ; BSR set to: 0
  5720  001862  8F8A               	bsf	(___flmul@a+2)& (0+255),7,b
  5721  001864  EF3C  F00C         	goto	l1268
  5722  001868                     l4642:
  5723                           
  5724                           ; BSR set to: 0
  5725  001868  0E00               	movlw	0
  5726  00186A  6F88               	movwf	___flmul@a& (0+255),b
  5727  00186C  0E00               	movlw	0
  5728  00186E  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5729  001870  0E00               	movlw	0
  5730  001872  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5731  001874  0E00               	movlw	0
  5732  001876  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5733  001878                     l1268:
  5734                           
  5735                           ; BSR set to: 0
  5736  001878  5191               	movf	___flmul@aexp& (0+255),w,b
  5737  00187A  B4D8               	btfsc	status,2,c
  5738  00187C  EF42  F00C         	goto	u5061
  5739  001880  EF44  F00C         	goto	u5060
  5740  001884                     u5061:
  5741  001884  EF4C  F00C         	goto	l4646
  5742  001888                     u5060:
  5743  001888                     
  5744                           ; BSR set to: 0
  5745  001888  5196               	movf	___flmul@bexp& (0+255),w,b
  5746  00188A  A4D8               	btfss	status,2,c
  5747  00188C  EF4A  F00C         	goto	u5071
  5748  001890  EF4C  F00C         	goto	u5070
  5749  001894                     u5071:
  5750  001894  EF56  F00C         	goto	l4650
  5751  001898                     u5070:
  5752  001898                     l4646:
  5753                           
  5754                           ; BSR set to: 0
  5755  001898  0E00               	movlw	0
  5756  00189A  6F84               	movwf	?___flmul& (0+255),b
  5757  00189C  0E00               	movlw	0
  5758  00189E  6F85               	movwf	(?___flmul+1)& (0+255),b
  5759  0018A0  0E00               	movlw	0
  5760  0018A2  6F86               	movwf	(?___flmul+2)& (0+255),b
  5761  0018A4  0E00               	movlw	0
  5762  0018A6  6F87               	movwf	(?___flmul+3)& (0+255),b
  5763  0018A8  EFEE  F00D         	goto	l1272
  5764  0018AC                     l4650:
  5765                           
  5766                           ; BSR set to: 0
  5767  0018AC  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5768  0018AE  0384               	mulwf	___flmul@b& (0+255),b
  5769  0018B0  CFF3 F09B          	movff	prodl,___flmul@temp
  5770  0018B4  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5771  0018B8                     
  5772                           ; BSR set to: 0
  5773  0018B8  519B               	movf	___flmul@temp& (0+255),w,b
  5774  0018BA  6F92               	movwf	___flmul@grs& (0+255),b
  5775  0018BC  6B93               	clrf	(___flmul@grs+1)& (0+255),b
  5776  0018BE  6B94               	clrf	(___flmul@grs+2)& (0+255),b
  5777  0018C0  6B95               	clrf	(___flmul@grs+3)& (0+255),b
  5778  0018C2                     
  5779                           ; BSR set to: 0
  5780  0018C2  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5781  0018C4  6F97               	movwf	___flmul@prod& (0+255),b
  5782  0018C6  6B98               	clrf	(___flmul@prod+1)& (0+255),b
  5783  0018C8  6B99               	clrf	(___flmul@prod+2)& (0+255),b
  5784  0018CA  6B9A               	clrf	(___flmul@prod+3)& (0+255),b
  5785  0018CC  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5786  0018CE  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5787  0018D0  CFF3 F09B          	movff	prodl,___flmul@temp
  5788  0018D4  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5789  0018D8                     
  5790                           ; BSR set to: 0
  5791  0018D8  519B               	movf	___flmul@temp& (0+255),w,b
  5792  0018DA  2792               	addwf	___flmul@grs& (0+255),f,b
  5793  0018DC  0E00               	movlw	0
  5794  0018DE  2393               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5795  0018E0  2394               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5796  0018E2  2395               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5797  0018E4                     
  5798                           ; BSR set to: 0
  5799  0018E4  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5800  0018E6  2797               	addwf	___flmul@prod& (0+255),f,b
  5801  0018E8  0E00               	movlw	0
  5802  0018EA  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5803  0018EC  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5804  0018EE  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5805  0018F0  5188               	movf	___flmul@a& (0+255),w,b
  5806  0018F2  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5807  0018F4  CFF3 F09B          	movff	prodl,___flmul@temp
  5808  0018F8  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5809  0018FC                     
  5810                           ; BSR set to: 0
  5811  0018FC  519B               	movf	___flmul@temp& (0+255),w,b
  5812  0018FE  2792               	addwf	___flmul@grs& (0+255),f,b
  5813  001900  0E00               	movlw	0
  5814  001902  2393               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5815  001904  2394               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5816  001906  2395               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5817  001908                     
  5818                           ; BSR set to: 0
  5819  001908  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5820  00190A  2797               	addwf	___flmul@prod& (0+255),f,b
  5821  00190C  0E00               	movlw	0
  5822  00190E  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5823  001910  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5824  001912  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5825  001914                     
  5826                           ; BSR set to: 0
  5827  001914  C094  F095         	movff	___flmul@grs+2,___flmul@grs+3
  5828  001918  C093  F094         	movff	___flmul@grs+1,___flmul@grs+2
  5829  00191C  C092  F093         	movff	___flmul@grs,___flmul@grs+1
  5830  001920  6B92               	clrf	___flmul@grs& (0+255),b
  5831  001922                     
  5832                           ; BSR set to: 0
  5833  001922  5188               	movf	___flmul@a& (0+255),w,b
  5834  001924  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5835  001926  CFF3 F09B          	movff	prodl,___flmul@temp
  5836  00192A  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5837  00192E                     
  5838                           ; BSR set to: 0
  5839  00192E  519B               	movf	___flmul@temp& (0+255),w,b
  5840  001930  2792               	addwf	___flmul@grs& (0+255),f,b
  5841  001932  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5842  001934  2393               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5843  001936  0E00               	movlw	0
  5844  001938  2394               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5845  00193A  0E00               	movlw	0
  5846  00193C  2395               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5847  00193E                     
  5848                           ; BSR set to: 0
  5849  00193E  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5850  001940  0384               	mulwf	___flmul@b& (0+255),b
  5851  001942  CFF3 F09B          	movff	prodl,___flmul@temp
  5852  001946  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5853  00194A                     
  5854                           ; BSR set to: 0
  5855  00194A  519B               	movf	___flmul@temp& (0+255),w,b
  5856  00194C  2792               	addwf	___flmul@grs& (0+255),f,b
  5857  00194E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5858  001950  2393               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5859  001952  0E00               	movlw	0
  5860  001954  2394               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5861  001956  0E00               	movlw	0
  5862  001958  2395               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5863  00195A                     
  5864                           ; BSR set to: 0
  5865  00195A  C094  F095         	movff	___flmul@grs+2,___flmul@grs+3
  5866  00195E  C093  F094         	movff	___flmul@grs+1,___flmul@grs+2
  5867  001962  C092  F093         	movff	___flmul@grs,___flmul@grs+1
  5868  001966  6B92               	clrf	___flmul@grs& (0+255),b
  5869  001968  5188               	movf	___flmul@a& (0+255),w,b
  5870  00196A  0384               	mulwf	___flmul@b& (0+255),b
  5871  00196C  CFF3 F09B          	movff	prodl,___flmul@temp
  5872  001970  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5873  001974                     
  5874                           ; BSR set to: 0
  5875  001974  519B               	movf	___flmul@temp& (0+255),w,b
  5876  001976  2792               	addwf	___flmul@grs& (0+255),f,b
  5877  001978  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5878  00197A  2393               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5879  00197C  0E00               	movlw	0
  5880  00197E  2394               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5881  001980  0E00               	movlw	0
  5882  001982  2395               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5883  001984                     
  5884                           ; BSR set to: 0
  5885  001984  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5886  001986  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5887  001988  CFF3 F09B          	movff	prodl,___flmul@temp
  5888  00198C  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5889  001990  519B               	movf	___flmul@temp& (0+255),w,b
  5890  001992  2797               	addwf	___flmul@prod& (0+255),f,b
  5891  001994  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5892  001996  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5893  001998  0E00               	movlw	0
  5894  00199A  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5895  00199C  0E00               	movlw	0
  5896  00199E  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5897  0019A0                     
  5898                           ; BSR set to: 0
  5899  0019A0  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5900  0019A2  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5901  0019A4  CFF3 F09B          	movff	prodl,___flmul@temp
  5902  0019A8  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5903  0019AC                     
  5904                           ; BSR set to: 0
  5905  0019AC  519B               	movf	___flmul@temp& (0+255),w,b
  5906  0019AE  2797               	addwf	___flmul@prod& (0+255),f,b
  5907  0019B0  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5908  0019B2  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5909  0019B4  0E00               	movlw	0
  5910  0019B6  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5911  0019B8  0E00               	movlw	0
  5912  0019BA  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5913  0019BC  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5914  0019BE  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5915  0019C0  CFF3 F09B          	movff	prodl,___flmul@temp
  5916  0019C4  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5917  0019C8                     
  5918                           ; BSR set to: 0
  5919  0019C8  519B               	movf	___flmul@temp& (0+255),w,b
  5920  0019CA  6F8C               	movwf	??___flmul& (0+255),b
  5921  0019CC  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5922  0019CE  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5923  0019D0  6B8E               	clrf	(??___flmul+2)& (0+255),b
  5924  0019D2  6B8F               	clrf	(??___flmul+3)& (0+255),b
  5925  0019D4  C08E  F08F         	movff	??___flmul+2,??___flmul+3
  5926  0019D8  C08D  F08E         	movff	??___flmul+1,??___flmul+2
  5927  0019DC  C08C  F08D         	movff	??___flmul,??___flmul+1
  5928  0019E0  6B8C               	clrf	??___flmul& (0+255),b
  5929  0019E2  518C               	movf	??___flmul& (0+255),w,b
  5930  0019E4  2797               	addwf	___flmul@prod& (0+255),f,b
  5931  0019E6  518D               	movf	(??___flmul+1)& (0+255),w,b
  5932  0019E8  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5933  0019EA  518E               	movf	(??___flmul+2)& (0+255),w,b
  5934  0019EC  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5935  0019EE  518F               	movf	(??___flmul+3)& (0+255),w,b
  5936  0019F0  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5937  0019F2                     
  5938                           ; BSR set to: 0
  5939  0019F2  C092  F08C         	movff	___flmul@grs,??___flmul
  5940  0019F6  C093  F08D         	movff	___flmul@grs+1,??___flmul+1
  5941  0019FA  C094  F08E         	movff	___flmul@grs+2,??___flmul+2
  5942  0019FE  C095  F08F         	movff	___flmul@grs+3,??___flmul+3
  5943  001A02  0E19               	movlw	25
  5944  001A04  EF09  F00D         	goto	u5080
  5945  001A08                     u5085:
  5946  001A08  90D8               	bcf	status,0,c
  5947  001A0A  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5948  001A0C  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5949  001A0E  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5950  001A10  338C               	rrcf	??___flmul& (0+255),f,b
  5951  001A12                     u5080:
  5952  001A12  2EE8               	decfsz	wreg,f,c
  5953  001A14  EF04  F00D         	goto	u5085
  5954  001A18  518C               	movf	??___flmul& (0+255),w,b
  5955  001A1A  2797               	addwf	___flmul@prod& (0+255),f,b
  5956  001A1C  518D               	movf	(??___flmul+1)& (0+255),w,b
  5957  001A1E  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5958  001A20  518E               	movf	(??___flmul+2)& (0+255),w,b
  5959  001A22  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5960  001A24  518F               	movf	(??___flmul+3)& (0+255),w,b
  5961  001A26  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5962  001A28                     
  5963                           ; BSR set to: 0
  5964  001A28  C094  F095         	movff	___flmul@grs+2,___flmul@grs+3
  5965  001A2C  C093  F094         	movff	___flmul@grs+1,___flmul@grs+2
  5966  001A30  C092  F093         	movff	___flmul@grs,___flmul@grs+1
  5967  001A34  6B92               	clrf	___flmul@grs& (0+255),b
  5968  001A36                     
  5969                           ; BSR set to: 0
  5970  001A36  5191               	movf	___flmul@aexp& (0+255),w,b
  5971  001A38  C096  F08C         	movff	___flmul@bexp,??___flmul
  5972  001A3C  6B8D               	clrf	(??___flmul+1)& (0+255),b
  5973  001A3E  278C               	addwf	??___flmul& (0+255),f,b
  5974  001A40  0E00               	movlw	0
  5975  001A42  238D               	addwfc	(??___flmul+1)& (0+255),f,b
  5976  001A44  0E82               	movlw	130
  5977  001A46  258C               	addwf	??___flmul& (0+255),w,b
  5978  001A48  6F9B               	movwf	___flmul@temp& (0+255),b
  5979  001A4A  0EFF               	movlw	255
  5980  001A4C  218D               	addwfc	(??___flmul+1)& (0+255),w,b
  5981  001A4E  6F9C               	movwf	(___flmul@temp+1)& (0+255),b
  5982  001A50  EF3F  F00D         	goto	l4698
  5983  001A54                     l4692:
  5984                           
  5985                           ; BSR set to: 0
  5986  001A54  90D8               	bcf	status,0,c
  5987  001A56  3797               	rlcf	___flmul@prod& (0+255),f,b
  5988  001A58  3798               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5989  001A5A  3799               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5990  001A5C  379A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5991  001A5E                     
  5992                           ; BSR set to: 0
  5993  001A5E  AF95               	btfss	(___flmul@grs+3)& (0+255),7,b
  5994  001A60  EF34  F00D         	goto	u5091
  5995  001A64  EF36  F00D         	goto	u5090
  5996  001A68                     u5091:
  5997  001A68  EF37  F00D         	goto	l1275
  5998  001A6C                     u5090:
  5999  001A6C                     
  6000                           ; BSR set to: 0
  6001  001A6C  8197               	bsf	___flmul@prod& (0+255),0,b
  6002  001A6E                     l1275:
  6003                           
  6004                           ; BSR set to: 0
  6005  001A6E  90D8               	bcf	status,0,c
  6006  001A70  3792               	rlcf	___flmul@grs& (0+255),f,b
  6007  001A72  3793               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6008  001A74  3794               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6009  001A76  3795               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6010  001A78  079B               	decf	___flmul@temp& (0+255),f,b
  6011  001A7A  A0D8               	btfss	status,0,c
  6012  001A7C  079C               	decf	(___flmul@temp+1)& (0+255),f,b
  6013  001A7E                     l4698:
  6014                           
  6015                           ; BSR set to: 0
  6016  001A7E  AF99               	btfss	(___flmul@prod+2)& (0+255),7,b
  6017  001A80  EF44  F00D         	goto	u5101
  6018  001A84  EF46  F00D         	goto	u5100
  6019  001A88                     u5101:
  6020  001A88  EF2A  F00D         	goto	l4692
  6021  001A8C                     u5100:
  6022  001A8C                     
  6023                           ; BSR set to: 0
  6024  001A8C  0E00               	movlw	0
  6025  001A8E  6F91               	movwf	___flmul@aexp& (0+255),b
  6026  001A90                     
  6027                           ; BSR set to: 0
  6028  001A90  AF95               	btfss	(___flmul@grs+3)& (0+255),7,b
  6029  001A92  EF4D  F00D         	goto	u5111
  6030  001A96  EF4F  F00D         	goto	u5110
  6031  001A9A                     u5111:
  6032  001A9A  EF73  F00D         	goto	l1277
  6033  001A9E                     u5110:
  6034  001A9E                     
  6035                           ; BSR set to: 0
  6036  001A9E  0EFF               	movlw	255
  6037  001AA0  1592               	andwf	___flmul@grs& (0+255),w,b
  6038  001AA2  6F8C               	movwf	??___flmul& (0+255),b
  6039  001AA4  0EFF               	movlw	255
  6040  001AA6  1593               	andwf	(___flmul@grs+1)& (0+255),w,b
  6041  001AA8  6F8D               	movwf	(??___flmul+1)& (0+255),b
  6042  001AAA  0EFF               	movlw	255
  6043  001AAC  1594               	andwf	(___flmul@grs+2)& (0+255),w,b
  6044  001AAE  6F8E               	movwf	(??___flmul+2)& (0+255),b
  6045  001AB0  0E7F               	movlw	127
  6046  001AB2  1595               	andwf	(___flmul@grs+3)& (0+255),w,b
  6047  001AB4  6F8F               	movwf	(??___flmul+3)& (0+255),b
  6048  001AB6  518C               	movf	??___flmul& (0+255),w,b
  6049  001AB8  118D               	iorwf	(??___flmul+1)& (0+255),w,b
  6050  001ABA  118E               	iorwf	(??___flmul+2)& (0+255),w,b
  6051  001ABC  118F               	iorwf	(??___flmul+3)& (0+255),w,b
  6052  001ABE  B4D8               	btfsc	status,2,c
  6053  001AC0  EF64  F00D         	goto	u5121
  6054  001AC4  EF66  F00D         	goto	u5120
  6055  001AC8                     u5121:
  6056  001AC8  EF6A  F00D         	goto	l1278
  6057  001ACC                     u5120:
  6058  001ACC                     l4706:
  6059                           
  6060                           ; BSR set to: 0
  6061  001ACC  0E01               	movlw	1
  6062  001ACE  6F91               	movwf	___flmul@aexp& (0+255),b
  6063  001AD0  EF73  F00D         	goto	l1277
  6064  001AD4                     l1278:
  6065                           
  6066                           ; BSR set to: 0
  6067  001AD4  A197               	btfss	___flmul@prod& (0+255),0,b
  6068  001AD6  EF6F  F00D         	goto	u5131
  6069  001ADA  EF71  F00D         	goto	u5130
  6070  001ADE                     u5131:
  6071  001ADE  EF73  F00D         	goto	l1277
  6072  001AE2                     u5130:
  6073  001AE2  EF66  F00D         	goto	l4706
  6074  001AE6                     l1277:
  6075                           
  6076                           ; BSR set to: 0
  6077  001AE6  5191               	movf	___flmul@aexp& (0+255),w,b
  6078  001AE8  B4D8               	btfsc	status,2,c
  6079  001AEA  EF79  F00D         	goto	u5141
  6080  001AEE  EF7B  F00D         	goto	u5140
  6081  001AF2                     u5141:
  6082  001AF2  EF9F  F00D         	goto	l4718
  6083  001AF6                     u5140:
  6084  001AF6                     
  6085                           ; BSR set to: 0
  6086  001AF6  0E01               	movlw	1
  6087  001AF8  2797               	addwf	___flmul@prod& (0+255),f,b
  6088  001AFA  0E00               	movlw	0
  6089  001AFC  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6090  001AFE  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6091  001B00  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6092  001B02                     
  6093                           ; BSR set to: 0
  6094  001B02  A19A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6095  001B04  EF86  F00D         	goto	u5151
  6096  001B08  EF88  F00D         	goto	u5150
  6097  001B0C                     u5151:
  6098  001B0C  EF9F  F00D         	goto	l4718
  6099  001B10                     u5150:
  6100  001B10                     
  6101                           ; BSR set to: 0
  6102  001B10  C097  F08C         	movff	___flmul@prod,??___flmul
  6103  001B14  C098  F08D         	movff	___flmul@prod+1,??___flmul+1
  6104  001B18  C099  F08E         	movff	___flmul@prod+2,??___flmul+2
  6105  001B1C  C09A  F08F         	movff	___flmul@prod+3,??___flmul+3
  6106  001B20  358F               	rlcf	(??___flmul+3)& (0+255),w,b
  6107  001B22  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  6108  001B24  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  6109  001B26  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  6110  001B28  338C               	rrcf	??___flmul& (0+255),f,b
  6111  001B2A  C08C  F097         	movff	??___flmul,___flmul@prod
  6112  001B2E  C08D  F098         	movff	??___flmul+1,___flmul@prod+1
  6113  001B32  C08E  F099         	movff	??___flmul+2,___flmul@prod+2
  6114  001B36  C08F  F09A         	movff	??___flmul+3,___flmul@prod+3
  6115  001B3A                     
  6116                           ; BSR set to: 0
  6117  001B3A  4B9B               	infsnz	___flmul@temp& (0+255),f,b
  6118  001B3C  2B9C               	incf	(___flmul@temp+1)& (0+255),f,b
  6119  001B3E                     l4718:
  6120                           
  6121                           ; BSR set to: 0
  6122  001B3E  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6123  001B40  EFAA  F00D         	goto	u5161
  6124  001B44  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  6125  001B46  E108               	bnz	u5160
  6126  001B48  299B               	incf	___flmul@temp& (0+255),w,b
  6127  001B4A  A0D8               	btfss	status,0,c
  6128  001B4C  EFAA  F00D         	goto	u5161
  6129  001B50  EFAC  F00D         	goto	u5160
  6130  001B54                     u5161:
  6131  001B54  EFB6  F00D         	goto	l4722
  6132  001B58                     u5160:
  6133  001B58                     
  6134                           ; BSR set to: 0
  6135  001B58  0E00               	movlw	0
  6136  001B5A  6F97               	movwf	___flmul@prod& (0+255),b
  6137  001B5C  0E00               	movlw	0
  6138  001B5E  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  6139  001B60  0E80               	movlw	128
  6140  001B62  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  6141  001B64  0E7F               	movlw	127
  6142  001B66  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  6143  001B68  EFE4  F00D         	goto	l4734
  6144  001B6C                     l4722:
  6145                           
  6146                           ; BSR set to: 0
  6147  001B6C  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6148  001B6E  EFC3  F00D         	goto	u5170
  6149  001B72  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  6150  001B74  E106               	bnz	u5171
  6151  001B76  059B               	decf	___flmul@temp& (0+255),w,b
  6152  001B78  B0D8               	btfsc	status,0,c
  6153  001B7A  EFC1  F00D         	goto	u5171
  6154  001B7E  EFC3  F00D         	goto	u5170
  6155  001B82                     u5171:
  6156  001B82  EFCF  F00D         	goto	l1285
  6157  001B86                     u5170:
  6158  001B86                     
  6159                           ; BSR set to: 0
  6160  001B86  0E00               	movlw	0
  6161  001B88  6F97               	movwf	___flmul@prod& (0+255),b
  6162  001B8A  0E00               	movlw	0
  6163  001B8C  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  6164  001B8E  0E00               	movlw	0
  6165  001B90  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  6166  001B92  0E00               	movlw	0
  6167  001B94  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  6168  001B96  0E00               	movlw	0
  6169  001B98  6F90               	movwf	___flmul@sign& (0+255),b
  6170  001B9A  EFE4  F00D         	goto	l4734
  6171  001B9E                     l1285:
  6172                           
  6173                           ; BSR set to: 0
  6174  001B9E  C09B  F096         	movff	___flmul@temp,___flmul@bexp
  6175  001BA2                     
  6176                           ; BSR set to: 0
  6177  001BA2  0EFF               	movlw	255
  6178  001BA4  1797               	andwf	___flmul@prod& (0+255),f,b
  6179  001BA6  0EFF               	movlw	255
  6180  001BA8  1798               	andwf	(___flmul@prod+1)& (0+255),f,b
  6181  001BAA  0E7F               	movlw	127
  6182  001BAC  1799               	andwf	(___flmul@prod+2)& (0+255),f,b
  6183  001BAE  0E00               	movlw	0
  6184  001BB0  179A               	andwf	(___flmul@prod+3)& (0+255),f,b
  6185  001BB2                     
  6186                           ; BSR set to: 0
  6187  001BB2  A196               	btfss	___flmul@bexp& (0+255),0,b
  6188  001BB4  EFDE  F00D         	goto	u5181
  6189  001BB8  EFE0  F00D         	goto	u5180
  6190  001BBC                     u5181:
  6191  001BBC  EFE1  F00D         	goto	l4732
  6192  001BC0                     u5180:
  6193  001BC0                     
  6194                           ; BSR set to: 0
  6195  001BC0  8F99               	bsf	(___flmul@prod+2)& (0+255),7,b
  6196  001BC2                     l4732:
  6197                           
  6198                           ; BSR set to: 0
  6199  001BC2  90D8               	bcf	status,0,c
  6200  001BC4  3196               	rrcf	___flmul@bexp& (0+255),w,b
  6201  001BC6  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  6202  001BC8                     l4734:
  6203                           
  6204                           ; BSR set to: 0
  6205  001BC8  5190               	movf	___flmul@sign& (0+255),w,b
  6206  001BCA  139A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6207  001BCC                     
  6208                           ; BSR set to: 0
  6209  001BCC  C097  F084         	movff	___flmul@prod,?___flmul
  6210  001BD0  C098  F085         	movff	___flmul@prod+1,?___flmul+1
  6211  001BD4  C099  F086         	movff	___flmul@prod+2,?___flmul+2
  6212  001BD8  C09A  F087         	movff	___flmul@prod+3,?___flmul+3
  6213  001BDC                     l1272:
  6214                           
  6215                           ; BSR set to: 0
  6216  001BDC  0012               	return		;funcret
  6217  001BDE                     __end_of___flmul:
  6218                           	opt callstack 0
  6219                           
  6220 ;; *************** function ___flge *****************
  6221 ;; Defined at:
  6222 ;;		line 4 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  ff1             4    0[BANK0 ] unsigned char 
  6225 ;;  ff2             4    4[BANK0 ] unsigned char 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;		None               void
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6237 ;;      Params:         0       8       0       0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0
  6239 ;;      Temps:          0       4       0       0       0       0       0
  6240 ;;      Totals:         0      12       0       0       0       0       0
  6241 ;;Total ram usage:       12 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    5
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		_MotionController_control
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text26
  6252  002466                     __ptext26:
  6253                           	opt callstack 0
  6254  002466                     ___flge:
  6255                           	opt callstack 23
  6256  002466  0E00               	movlw	0
  6257  002468  0100               	movlb	0	; () banked
  6258  00246A  1580               	andwf	___flge@ff1& (0+255),w,b
  6259  00246C  6F88               	movwf	??___flge& (0+255),b
  6260  00246E  0E00               	movlw	0
  6261  002470  1581               	andwf	(___flge@ff1+1)& (0+255),w,b
  6262  002472  6F89               	movwf	(??___flge+1)& (0+255),b
  6263  002474  0E80               	movlw	128
  6264  002476  1582               	andwf	(___flge@ff1+2)& (0+255),w,b
  6265  002478  6F8A               	movwf	(??___flge+2)& (0+255),b
  6266  00247A  0E7F               	movlw	127
  6267  00247C  1583               	andwf	(___flge@ff1+3)& (0+255),w,b
  6268  00247E  6F8B               	movwf	(??___flge+3)& (0+255),b
  6269  002480  5188               	movf	??___flge& (0+255),w,b
  6270  002482  1189               	iorwf	(??___flge+1)& (0+255),w,b
  6271  002484  118A               	iorwf	(??___flge+2)& (0+255),w,b
  6272  002486  118B               	iorwf	(??___flge+3)& (0+255),w,b
  6273  002488  A4D8               	btfss	status,2,c
  6274  00248A  EF49  F012         	goto	u5191
  6275  00248E  EF4B  F012         	goto	u5190
  6276  002492                     u5191:
  6277  002492  EF53  F012         	goto	l4750
  6278  002496                     u5190:
  6279  002496                     
  6280                           ; BSR set to: 0
  6281  002496  0E00               	movlw	0
  6282  002498  6F80               	movwf	___flge@ff1& (0+255),b
  6283  00249A  0E00               	movlw	0
  6284  00249C  6F81               	movwf	(___flge@ff1+1)& (0+255),b
  6285  00249E  0E00               	movlw	0
  6286  0024A0  6F82               	movwf	(___flge@ff1+2)& (0+255),b
  6287  0024A2  0E00               	movlw	0
  6288  0024A4  6F83               	movwf	(___flge@ff1+3)& (0+255),b
  6289  0024A6                     l4750:
  6290                           
  6291                           ; BSR set to: 0
  6292  0024A6  0E00               	movlw	0
  6293  0024A8  1584               	andwf	___flge@ff2& (0+255),w,b
  6294  0024AA  6F88               	movwf	??___flge& (0+255),b
  6295  0024AC  0E00               	movlw	0
  6296  0024AE  1585               	andwf	(___flge@ff2+1)& (0+255),w,b
  6297  0024B0  6F89               	movwf	(??___flge+1)& (0+255),b
  6298  0024B2  0E80               	movlw	128
  6299  0024B4  1586               	andwf	(___flge@ff2+2)& (0+255),w,b
  6300  0024B6  6F8A               	movwf	(??___flge+2)& (0+255),b
  6301  0024B8  0E7F               	movlw	127
  6302  0024BA  1587               	andwf	(___flge@ff2+3)& (0+255),w,b
  6303  0024BC  6F8B               	movwf	(??___flge+3)& (0+255),b
  6304  0024BE  5188               	movf	??___flge& (0+255),w,b
  6305  0024C0  1189               	iorwf	(??___flge+1)& (0+255),w,b
  6306  0024C2  118A               	iorwf	(??___flge+2)& (0+255),w,b
  6307  0024C4  118B               	iorwf	(??___flge+3)& (0+255),w,b
  6308  0024C6  A4D8               	btfss	status,2,c
  6309  0024C8  EF68  F012         	goto	u5201
  6310  0024CC  EF6A  F012         	goto	u5200
  6311  0024D0                     u5201:
  6312  0024D0  EF72  F012         	goto	l4754
  6313  0024D4                     u5200:
  6314  0024D4                     
  6315                           ; BSR set to: 0
  6316  0024D4  0E00               	movlw	0
  6317  0024D6  6F84               	movwf	___flge@ff2& (0+255),b
  6318  0024D8  0E00               	movlw	0
  6319  0024DA  6F85               	movwf	(___flge@ff2+1)& (0+255),b
  6320  0024DC  0E00               	movlw	0
  6321  0024DE  6F86               	movwf	(___flge@ff2+2)& (0+255),b
  6322  0024E0  0E00               	movlw	0
  6323  0024E2  6F87               	movwf	(___flge@ff2+3)& (0+255),b
  6324  0024E4                     l4754:
  6325                           
  6326                           ; BSR set to: 0
  6327  0024E4  AF83               	btfss	(___flge@ff1+3)& (0+255),7,b
  6328  0024E6  EF77  F012         	goto	u5211
  6329  0024EA  EF79  F012         	goto	u5210
  6330  0024EE                     u5211:
  6331  0024EE  EF82  F012         	goto	l4758
  6332  0024F2                     u5210:
  6333  0024F2                     
  6334                           ; BSR set to: 0
  6335  0024F2  6D80               	negf	___flge@ff1& (0+255),b
  6336  0024F4  1F81               	comf	(___flge@ff1+1)& (0+255),f,b
  6337  0024F6  B0D8               	btfsc	status,0,c
  6338  0024F8  2B81               	incf	(___flge@ff1+1)& (0+255),f,b
  6339  0024FA  1F82               	comf	(___flge@ff1+2)& (0+255),f,b
  6340  0024FC  B0D8               	btfsc	status,0,c
  6341  0024FE  2B82               	incf	(___flge@ff1+2)& (0+255),f,b
  6342  002500  0E80               	movlw	128
  6343  002502  5783               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6344  002504                     l4758:
  6345                           
  6346                           ; BSR set to: 0
  6347  002504  AF87               	btfss	(___flge@ff2+3)& (0+255),7,b
  6348  002506  EF87  F012         	goto	u5221
  6349  00250A  EF89  F012         	goto	u5220
  6350  00250E                     u5221:
  6351  00250E  EF92  F012         	goto	l919
  6352  002512                     u5220:
  6353  002512                     
  6354                           ; BSR set to: 0
  6355  002512  6D84               	negf	___flge@ff2& (0+255),b
  6356  002514  1F85               	comf	(___flge@ff2+1)& (0+255),f,b
  6357  002516  B0D8               	btfsc	status,0,c
  6358  002518  2B85               	incf	(___flge@ff2+1)& (0+255),f,b
  6359  00251A  1F86               	comf	(___flge@ff2+2)& (0+255),f,b
  6360  00251C  B0D8               	btfsc	status,0,c
  6361  00251E  2B86               	incf	(___flge@ff2+2)& (0+255),f,b
  6362  002520  0E80               	movlw	128
  6363  002522  5787               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6364  002524                     l919:
  6365                           
  6366                           ; BSR set to: 0
  6367  002524  0E00               	movlw	0
  6368  002526  1B80               	xorwf	___flge@ff1& (0+255),f,b
  6369  002528  0E00               	movlw	0
  6370  00252A  1B81               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6371  00252C  0E00               	movlw	0
  6372  00252E  1B82               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6373  002530  0E80               	movlw	128
  6374  002532  1B83               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6375  002534  0E00               	movlw	0
  6376  002536  1B84               	xorwf	___flge@ff2& (0+255),f,b
  6377  002538  0E00               	movlw	0
  6378  00253A  1B85               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6379  00253C  0E00               	movlw	0
  6380  00253E  1B86               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6381  002540  0E80               	movlw	128
  6382  002542  1B87               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6383  002544  5184               	movf	___flge@ff2& (0+255),w,b
  6384  002546  5D80               	subwf	___flge@ff1& (0+255),w,b
  6385  002548  5185               	movf	(___flge@ff2+1)& (0+255),w,b
  6386  00254A  5981               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6387  00254C  5186               	movf	(___flge@ff2+2)& (0+255),w,b
  6388  00254E  5982               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6389  002550  5187               	movf	(___flge@ff2+3)& (0+255),w,b
  6390  002552  5983               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6391  002554  B0D8               	btfsc	status,0,c
  6392  002556  EFAF  F012         	goto	u5231
  6393  00255A  EFB1  F012         	goto	u5230
  6394  00255E                     u5231:
  6395  00255E  EFB4  F012         	goto	l4764
  6396  002562                     u5230:
  6397  002562                     
  6398                           ; BSR set to: 0
  6399  002562  90D8               	bcf	status,0,c
  6400  002564  EFB5  F012         	goto	l924
  6401  002568                     l4764:
  6402                           
  6403                           ; BSR set to: 0
  6404  002568  80D8               	bsf	status,0,c
  6405  00256A                     l924:
  6406                           
  6407                           ; BSR set to: 0
  6408  00256A  0012               	return		;funcret
  6409  00256C                     __end_of___flge:
  6410                           	opt callstack 0
  6411                           
  6412 ;; *************** function ___fldiv *****************
  6413 ;; Defined at:
  6414 ;;		line 11 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  b               4    0[BANK0 ] unsigned char 
  6417 ;;  a               4    4[BANK0 ] unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  grs             4   19[BANK0 ] unsigned long 
  6420 ;;  rem             4   12[BANK0 ] unsigned long 
  6421 ;;  new_exp         2   17[BANK0 ] short 
  6422 ;;  aexp            1   24[BANK0 ] unsigned char 
  6423 ;;  bexp            1   23[BANK0 ] unsigned char 
  6424 ;;  sign            1   16[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  4    0[BANK0 ] unsigned char 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6434 ;;      Params:         0       8       0       0       0       0       0
  6435 ;;      Locals:         0      13       0       0       0       0       0
  6436 ;;      Temps:          0       4       0       0       0       0       0
  6437 ;;      Totals:         0      25       0       0       0       0       0
  6438 ;;Total ram usage:       25 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    5
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_MotionController_control
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text27
  6449  001BDE                     __ptext27:
  6450                           	opt callstack 0
  6451  001BDE                     ___fldiv:
  6452                           	opt callstack 23
  6453  001BDE  0100               	movlb	0	; () banked
  6454  001BE0  5183               	movf	(___fldiv@b+3)& (0+255),w,b
  6455  001BE2  0B80               	andlw	128
  6456  001BE4  6F90               	movwf	___fldiv@sign& (0+255),b
  6457  001BE6  5183               	movf	(___fldiv@b+3)& (0+255),w,b
  6458  001BE8  2583               	addwf	(___fldiv@b+3)& (0+255),w,b
  6459  001BEA  6F97               	movwf	___fldiv@bexp& (0+255),b
  6460  001BEC                     
  6461                           ; BSR set to: 0
  6462  001BEC  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
  6463  001BEE  EFFB  F00D         	goto	u4771
  6464  001BF2  EFFD  F00D         	goto	u4770
  6465  001BF6                     u4771:
  6466  001BF6  EFFE  F00D         	goto	l4478
  6467  001BFA                     u4770:
  6468  001BFA                     
  6469                           ; BSR set to: 0
  6470  001BFA  8197               	bsf	___fldiv@bexp& (0+255),0,b
  6471  001BFC                     l4478:
  6472                           
  6473                           ; BSR set to: 0
  6474  001BFC  5197               	movf	___fldiv@bexp& (0+255),w,b
  6475  001BFE  B4D8               	btfsc	status,2,c
  6476  001C00  EF04  F00E         	goto	u4781
  6477  001C04  EF06  F00E         	goto	u4780
  6478  001C08                     u4781:
  6479  001C08  EF1B  F00E         	goto	l4488
  6480  001C0C                     u4780:
  6481  001C0C                     
  6482                           ; BSR set to: 0
  6483  001C0C  2997               	incf	___fldiv@bexp& (0+255),w,b
  6484  001C0E  A4D8               	btfss	status,2,c
  6485  001C10  EF0C  F00E         	goto	u4791
  6486  001C14  EF0E  F00E         	goto	u4790
  6487  001C18                     u4791:
  6488  001C18  EF16  F00E         	goto	l4484
  6489  001C1C                     u4790:
  6490  001C1C                     
  6491                           ; BSR set to: 0
  6492  001C1C  0E00               	movlw	0
  6493  001C1E  6F80               	movwf	___fldiv@b& (0+255),b
  6494  001C20  0E00               	movlw	0
  6495  001C22  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  6496  001C24  0E00               	movlw	0
  6497  001C26  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  6498  001C28  0E00               	movlw	0
  6499  001C2A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6500  001C2C                     l4484:
  6501                           
  6502                           ; BSR set to: 0
  6503  001C2C  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
  6504  001C2E                     
  6505                           ; BSR set to: 0
  6506  001C2E  0E00               	movlw	0
  6507  001C30  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6508  001C32  EF23  F00E         	goto	l4490
  6509  001C36                     l4488:
  6510                           
  6511                           ; BSR set to: 0
  6512  001C36  0E00               	movlw	0
  6513  001C38  6F80               	movwf	___fldiv@b& (0+255),b
  6514  001C3A  0E00               	movlw	0
  6515  001C3C  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  6516  001C3E  0E00               	movlw	0
  6517  001C40  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  6518  001C42  0E00               	movlw	0
  6519  001C44  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6520  001C46                     l4490:
  6521                           
  6522                           ; BSR set to: 0
  6523  001C46  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  6524  001C48  0B80               	andlw	128
  6525  001C4A  1B90               	xorwf	___fldiv@sign& (0+255),f,b
  6526  001C4C                     
  6527                           ; BSR set to: 0
  6528  001C4C  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  6529  001C4E  2587               	addwf	(___fldiv@a+3)& (0+255),w,b
  6530  001C50  6F98               	movwf	___fldiv@aexp& (0+255),b
  6531  001C52                     
  6532                           ; BSR set to: 0
  6533  001C52  AF86               	btfss	(___fldiv@a+2)& (0+255),7,b
  6534  001C54  EF2E  F00E         	goto	u4801
  6535  001C58  EF30  F00E         	goto	u4800
  6536  001C5C                     u4801:
  6537  001C5C  EF31  F00E         	goto	l4498
  6538  001C60                     u4800:
  6539  001C60                     
  6540                           ; BSR set to: 0
  6541  001C60  8198               	bsf	___fldiv@aexp& (0+255),0,b
  6542  001C62                     l4498:
  6543                           
  6544                           ; BSR set to: 0
  6545  001C62  5198               	movf	___fldiv@aexp& (0+255),w,b
  6546  001C64  B4D8               	btfsc	status,2,c
  6547  001C66  EF37  F00E         	goto	u4811
  6548  001C6A  EF39  F00E         	goto	u4810
  6549  001C6E                     u4811:
  6550  001C6E  EF4E  F00E         	goto	l4508
  6551  001C72                     u4810:
  6552  001C72                     
  6553                           ; BSR set to: 0
  6554  001C72  2998               	incf	___fldiv@aexp& (0+255),w,b
  6555  001C74  A4D8               	btfss	status,2,c
  6556  001C76  EF3F  F00E         	goto	u4821
  6557  001C7A  EF41  F00E         	goto	u4820
  6558  001C7E                     u4821:
  6559  001C7E  EF49  F00E         	goto	l4504
  6560  001C82                     u4820:
  6561  001C82                     
  6562                           ; BSR set to: 0
  6563  001C82  0E00               	movlw	0
  6564  001C84  6F84               	movwf	___fldiv@a& (0+255),b
  6565  001C86  0E00               	movlw	0
  6566  001C88  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  6567  001C8A  0E00               	movlw	0
  6568  001C8C  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  6569  001C8E  0E00               	movlw	0
  6570  001C90  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  6571  001C92                     l4504:
  6572                           
  6573                           ; BSR set to: 0
  6574  001C92  8F86               	bsf	(___fldiv@a+2)& (0+255),7,b
  6575  001C94                     
  6576                           ; BSR set to: 0
  6577  001C94  0E00               	movlw	0
  6578  001C96  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  6579  001C98  EF56  F00E         	goto	l4510
  6580  001C9C                     l4508:
  6581                           
  6582                           ; BSR set to: 0
  6583  001C9C  0E00               	movlw	0
  6584  001C9E  6F84               	movwf	___fldiv@a& (0+255),b
  6585  001CA0  0E00               	movlw	0
  6586  001CA2  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  6587  001CA4  0E00               	movlw	0
  6588  001CA6  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  6589  001CA8  0E00               	movlw	0
  6590  001CAA  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  6591  001CAC                     l4510:
  6592                           
  6593                           ; BSR set to: 0
  6594  001CAC  5184               	movf	___fldiv@a& (0+255),w,b
  6595  001CAE  1185               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6596  001CB0  1186               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6597  001CB2  1187               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6598  001CB4  A4D8               	btfss	status,2,c
  6599  001CB6  EF5F  F00E         	goto	u4831
  6600  001CBA  EF61  F00E         	goto	u4830
  6601  001CBE                     u4831:
  6602  001CBE  EF79  F00E         	goto	l4522
  6603  001CC2                     u4830:
  6604  001CC2                     
  6605                           ; BSR set to: 0
  6606  001CC2  0E00               	movlw	0
  6607  001CC4  6F80               	movwf	___fldiv@b& (0+255),b
  6608  001CC6  0E00               	movlw	0
  6609  001CC8  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  6610  001CCA  0E00               	movlw	0
  6611  001CCC  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  6612  001CCE  0E00               	movlw	0
  6613  001CD0  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6614  001CD2                     
  6615                           ; BSR set to: 0
  6616  001CD2  0E80               	movlw	128
  6617  001CD4  1382               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6618  001CD6  0E7F               	movlw	127
  6619  001CD8  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6620  001CDA                     l4516:
  6621                           
  6622                           ; BSR set to: 0
  6623  001CDA  5190               	movf	___fldiv@sign& (0+255),w,b
  6624  001CDC  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6625  001CDE                     
  6626                           ; BSR set to: 0
  6627  001CDE  C080  F080         	movff	___fldiv@b,?___fldiv
  6628  001CE2  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
  6629  001CE6  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
  6630  001CEA  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
  6631  001CEE  EFBC  F00F         	goto	l1236
  6632  001CF2                     l4522:
  6633                           
  6634                           ; BSR set to: 0
  6635  001CF2  5197               	movf	___fldiv@bexp& (0+255),w,b
  6636  001CF4  A4D8               	btfss	status,2,c
  6637  001CF6  EF7F  F00E         	goto	u4841
  6638  001CFA  EF81  F00E         	goto	u4840
  6639  001CFE                     u4841:
  6640  001CFE  EF8B  F00E         	goto	l4530
  6641  001D02                     u4840:
  6642  001D02                     
  6643                           ; BSR set to: 0
  6644  001D02  0E00               	movlw	0
  6645  001D04  6F80               	movwf	?___fldiv& (0+255),b
  6646  001D06  0E00               	movlw	0
  6647  001D08  6F81               	movwf	(?___fldiv+1)& (0+255),b
  6648  001D0A  0E00               	movlw	0
  6649  001D0C  6F82               	movwf	(?___fldiv+2)& (0+255),b
  6650  001D0E  0E00               	movlw	0
  6651  001D10  6F83               	movwf	(?___fldiv+3)& (0+255),b
  6652  001D12  EFBC  F00F         	goto	l1236
  6653  001D16                     l4530:
  6654                           
  6655                           ; BSR set to: 0
  6656  001D16  5198               	movf	___fldiv@aexp& (0+255),w,b
  6657  001D18  C097  F088         	movff	___fldiv@bexp,??___fldiv
  6658  001D1C  6B89               	clrf	(??___fldiv+1)& (0+255),b
  6659  001D1E  5F88               	subwf	??___fldiv& (0+255),f,b
  6660  001D20  0E00               	movlw	0
  6661  001D22  5B89               	subwfb	(??___fldiv+1)& (0+255),f,b
  6662  001D24  0E7F               	movlw	127
  6663  001D26  2588               	addwf	??___fldiv& (0+255),w,b
  6664  001D28  6F91               	movwf	___fldiv@new_exp& (0+255),b
  6665  001D2A  0E00               	movlw	0
  6666  001D2C  2189               	addwfc	(??___fldiv+1)& (0+255),w,b
  6667  001D2E  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6668  001D30                     
  6669                           ; BSR set to: 0
  6670  001D30  C080  F08C         	movff	___fldiv@b,___fldiv@rem
  6671  001D34  C081  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
  6672  001D38  C082  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
  6673  001D3C  C083  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
  6674  001D40                     
  6675                           ; BSR set to: 0
  6676  001D40  0E00               	movlw	0
  6677  001D42  6F80               	movwf	___fldiv@b& (0+255),b
  6678  001D44  0E00               	movlw	0
  6679  001D46  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  6680  001D48  0E00               	movlw	0
  6681  001D4A  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  6682  001D4C  0E00               	movlw	0
  6683  001D4E  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6684  001D50                     
  6685                           ; BSR set to: 0
  6686  001D50  0E00               	movlw	0
  6687  001D52  6F93               	movwf	___fldiv@grs& (0+255),b
  6688  001D54  0E00               	movlw	0
  6689  001D56  6F94               	movwf	(___fldiv@grs+1)& (0+255),b
  6690  001D58  0E00               	movlw	0
  6691  001D5A  6F95               	movwf	(___fldiv@grs+2)& (0+255),b
  6692  001D5C  0E00               	movlw	0
  6693  001D5E  6F96               	movwf	(___fldiv@grs+3)& (0+255),b
  6694  001D60                     
  6695                           ; BSR set to: 0
  6696  001D60  0E00               	movlw	0
  6697  001D62  6F98               	movwf	___fldiv@aexp& (0+255),b
  6698  001D64  EFEC  F00E         	goto	l1238
  6699  001D68                     l4540:
  6700                           
  6701                           ; BSR set to: 0
  6702  001D68  5198               	movf	___fldiv@aexp& (0+255),w,b
  6703  001D6A  B4D8               	btfsc	status,2,c
  6704  001D6C  EFBA  F00E         	goto	u4851
  6705  001D70  EFBC  F00E         	goto	u4850
  6706  001D74                     u4851:
  6707  001D74  EFD3  F00E         	goto	l4548
  6708  001D78                     u4850:
  6709  001D78                     
  6710                           ; BSR set to: 0
  6711  001D78  90D8               	bcf	status,0,c
  6712  001D7A  378C               	rlcf	___fldiv@rem& (0+255),f,b
  6713  001D7C  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6714  001D7E  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6715  001D80  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6716  001D82  90D8               	bcf	status,0,c
  6717  001D84  3780               	rlcf	___fldiv@b& (0+255),f,b
  6718  001D86  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6719  001D88  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6720  001D8A  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6721  001D8C                     
  6722                           ; BSR set to: 0
  6723  001D8C  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6724  001D8E  EFCB  F00E         	goto	u4861
  6725  001D92  EFCD  F00E         	goto	u4860
  6726  001D96                     u4861:
  6727  001D96  EFCE  F00E         	goto	l1241
  6728  001D9A                     u4860:
  6729  001D9A                     
  6730                           ; BSR set to: 0
  6731  001D9A  8180               	bsf	___fldiv@b& (0+255),0,b
  6732  001D9C                     l1241:
  6733                           
  6734                           ; BSR set to: 0
  6735  001D9C  90D8               	bcf	status,0,c
  6736  001D9E  3793               	rlcf	___fldiv@grs& (0+255),f,b
  6737  001DA0  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6738  001DA2  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6739  001DA4  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6740  001DA6                     l4548:
  6741                           
  6742                           ; BSR set to: 0
  6743  001DA6  5184               	movf	___fldiv@a& (0+255),w,b
  6744  001DA8  5D8C               	subwf	___fldiv@rem& (0+255),w,b
  6745  001DAA  5185               	movf	(___fldiv@a+1)& (0+255),w,b
  6746  001DAC  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6747  001DAE  5186               	movf	(___fldiv@a+2)& (0+255),w,b
  6748  001DB0  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6749  001DB2  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  6750  001DB4  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6751  001DB6  A0D8               	btfss	status,0,c
  6752  001DB8  EFE0  F00E         	goto	u4871
  6753  001DBC  EFE2  F00E         	goto	u4870
  6754  001DC0                     u4871:
  6755  001DC0  EFEB  F00E         	goto	l4554
  6756  001DC4                     u4870:
  6757  001DC4                     
  6758                           ; BSR set to: 0
  6759  001DC4  8D96               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6760  001DC6                     
  6761                           ; BSR set to: 0
  6762  001DC6  5184               	movf	___fldiv@a& (0+255),w,b
  6763  001DC8  5F8C               	subwf	___fldiv@rem& (0+255),f,b
  6764  001DCA  5185               	movf	(___fldiv@a+1)& (0+255),w,b
  6765  001DCC  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6766  001DCE  5186               	movf	(___fldiv@a+2)& (0+255),w,b
  6767  001DD0  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6768  001DD2  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  6769  001DD4  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6770  001DD6                     l4554:
  6771                           
  6772                           ; BSR set to: 0
  6773  001DD6  2B98               	incf	___fldiv@aexp& (0+255),f,b
  6774  001DD8                     l1238:
  6775                           
  6776                           ; BSR set to: 0
  6777  001DD8  0E19               	movlw	25
  6778  001DDA  6598               	cpfsgt	___fldiv@aexp& (0+255),b
  6779  001DDC  EFF2  F00E         	goto	u4881
  6780  001DE0  EFF4  F00E         	goto	u4880
  6781  001DE4                     u4881:
  6782  001DE4  EFB4  F00E         	goto	l4540
  6783  001DE8                     u4880:
  6784  001DE8                     
  6785                           ; BSR set to: 0
  6786  001DE8  518C               	movf	___fldiv@rem& (0+255),w,b
  6787  001DEA  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6788  001DEC  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6789  001DEE  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6790  001DF0  B4D8               	btfsc	status,2,c
  6791  001DF2  EFFD  F00E         	goto	u4891
  6792  001DF6  EFFF  F00E         	goto	u4890
  6793  001DFA                     u4891:
  6794  001DFA  EF17  F00F         	goto	l4566
  6795  001DFE                     u4890:
  6796  001DFE                     
  6797                           ; BSR set to: 0
  6798  001DFE  8193               	bsf	___fldiv@grs& (0+255),0,b
  6799  001E00  EF17  F00F         	goto	l4566
  6800  001E04                     l4560:
  6801                           
  6802                           ; BSR set to: 0
  6803  001E04  90D8               	bcf	status,0,c
  6804  001E06  3780               	rlcf	___fldiv@b& (0+255),f,b
  6805  001E08  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6806  001E0A  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6807  001E0C  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6808  001E0E                     
  6809                           ; BSR set to: 0
  6810  001E0E  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6811  001E10  EF0C  F00F         	goto	u4901
  6812  001E14  EF0E  F00F         	goto	u4900
  6813  001E18                     u4901:
  6814  001E18  EF0F  F00F         	goto	l1247
  6815  001E1C                     u4900:
  6816  001E1C                     
  6817                           ; BSR set to: 0
  6818  001E1C  8180               	bsf	___fldiv@b& (0+255),0,b
  6819  001E1E                     l1247:
  6820                           
  6821                           ; BSR set to: 0
  6822  001E1E  90D8               	bcf	status,0,c
  6823  001E20  3793               	rlcf	___fldiv@grs& (0+255),f,b
  6824  001E22  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6825  001E24  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6826  001E26  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6827  001E28  0791               	decf	___fldiv@new_exp& (0+255),f,b
  6828  001E2A  A0D8               	btfss	status,0,c
  6829  001E2C  0792               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6830  001E2E                     l4566:
  6831                           
  6832                           ; BSR set to: 0
  6833  001E2E  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
  6834  001E30  EF1C  F00F         	goto	u4911
  6835  001E34  EF1E  F00F         	goto	u4910
  6836  001E38                     u4911:
  6837  001E38  EF02  F00F         	goto	l4560
  6838  001E3C                     u4910:
  6839  001E3C                     
  6840                           ; BSR set to: 0
  6841  001E3C  0E00               	movlw	0
  6842  001E3E  6F98               	movwf	___fldiv@aexp& (0+255),b
  6843  001E40                     
  6844                           ; BSR set to: 0
  6845  001E40  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6846  001E42  EF25  F00F         	goto	u4921
  6847  001E46  EF27  F00F         	goto	u4920
  6848  001E4A                     u4921:
  6849  001E4A  EF4B  F00F         	goto	l1249
  6850  001E4E                     u4920:
  6851  001E4E                     
  6852                           ; BSR set to: 0
  6853  001E4E  0EFF               	movlw	255
  6854  001E50  1593               	andwf	___fldiv@grs& (0+255),w,b
  6855  001E52  6F88               	movwf	??___fldiv& (0+255),b
  6856  001E54  0EFF               	movlw	255
  6857  001E56  1594               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6858  001E58  6F89               	movwf	(??___fldiv+1)& (0+255),b
  6859  001E5A  0EFF               	movlw	255
  6860  001E5C  1595               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6861  001E5E  6F8A               	movwf	(??___fldiv+2)& (0+255),b
  6862  001E60  0E7F               	movlw	127
  6863  001E62  1596               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6864  001E64  6F8B               	movwf	(??___fldiv+3)& (0+255),b
  6865  001E66  5188               	movf	??___fldiv& (0+255),w,b
  6866  001E68  1189               	iorwf	(??___fldiv+1)& (0+255),w,b
  6867  001E6A  118A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6868  001E6C  118B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6869  001E6E  B4D8               	btfsc	status,2,c
  6870  001E70  EF3C  F00F         	goto	u4931
  6871  001E74  EF3E  F00F         	goto	u4930
  6872  001E78                     u4931:
  6873  001E78  EF42  F00F         	goto	l1250
  6874  001E7C                     u4930:
  6875  001E7C                     l4574:
  6876                           
  6877                           ; BSR set to: 0
  6878  001E7C  0E01               	movlw	1
  6879  001E7E  6F98               	movwf	___fldiv@aexp& (0+255),b
  6880  001E80  EF4B  F00F         	goto	l1249
  6881  001E84                     l1250:
  6882                           
  6883                           ; BSR set to: 0
  6884  001E84  A180               	btfss	___fldiv@b& (0+255),0,b
  6885  001E86  EF47  F00F         	goto	u4941
  6886  001E8A  EF49  F00F         	goto	u4940
  6887  001E8E                     u4941:
  6888  001E8E  EF4B  F00F         	goto	l1249
  6889  001E92                     u4940:
  6890  001E92  EF3E  F00F         	goto	l4574
  6891  001E96                     l1249:
  6892                           
  6893                           ; BSR set to: 0
  6894  001E96  5198               	movf	___fldiv@aexp& (0+255),w,b
  6895  001E98  B4D8               	btfsc	status,2,c
  6896  001E9A  EF51  F00F         	goto	u4951
  6897  001E9E  EF53  F00F         	goto	u4950
  6898  001EA2                     u4951:
  6899  001EA2  EF77  F00F         	goto	l4586
  6900  001EA6                     u4950:
  6901  001EA6                     
  6902                           ; BSR set to: 0
  6903  001EA6  0E01               	movlw	1
  6904  001EA8  2780               	addwf	___fldiv@b& (0+255),f,b
  6905  001EAA  0E00               	movlw	0
  6906  001EAC  2381               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6907  001EAE  2382               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6908  001EB0  2383               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6909  001EB2                     
  6910                           ; BSR set to: 0
  6911  001EB2  A183               	btfss	(___fldiv@b+3)& (0+255),0,b
  6912  001EB4  EF5E  F00F         	goto	u4961
  6913  001EB8  EF60  F00F         	goto	u4960
  6914  001EBC                     u4961:
  6915  001EBC  EF77  F00F         	goto	l4586
  6916  001EC0                     u4960:
  6917  001EC0                     
  6918                           ; BSR set to: 0
  6919  001EC0  C080  F088         	movff	___fldiv@b,??___fldiv
  6920  001EC4  C081  F089         	movff	___fldiv@b+1,??___fldiv+1
  6921  001EC8  C082  F08A         	movff	___fldiv@b+2,??___fldiv+2
  6922  001ECC  C083  F08B         	movff	___fldiv@b+3,??___fldiv+3
  6923  001ED0  358B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6924  001ED2  338B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6925  001ED4  338A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6926  001ED6  3389               	rrcf	(??___fldiv+1)& (0+255),f,b
  6927  001ED8  3388               	rrcf	??___fldiv& (0+255),f,b
  6928  001EDA  C088  F080         	movff	??___fldiv,___fldiv@b
  6929  001EDE  C089  F081         	movff	??___fldiv+1,___fldiv@b+1
  6930  001EE2  C08A  F082         	movff	??___fldiv+2,___fldiv@b+2
  6931  001EE6  C08B  F083         	movff	??___fldiv+3,___fldiv@b+3
  6932  001EEA                     
  6933                           ; BSR set to: 0
  6934  001EEA  4B91               	infsnz	___fldiv@new_exp& (0+255),f,b
  6935  001EEC  2B92               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6936  001EEE                     l4586:
  6937                           
  6938                           ; BSR set to: 0
  6939  001EEE  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6940  001EF0  EF82  F00F         	goto	u4971
  6941  001EF4  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6942  001EF6  E108               	bnz	u4970
  6943  001EF8  2991               	incf	___fldiv@new_exp& (0+255),w,b
  6944  001EFA  A0D8               	btfss	status,0,c
  6945  001EFC  EF82  F00F         	goto	u4971
  6946  001F00  EF84  F00F         	goto	u4970
  6947  001F04                     u4971:
  6948  001F04  EF8F  F00F         	goto	l4590
  6949  001F08                     u4970:
  6950  001F08                     
  6951                           ; BSR set to: 0
  6952  001F08  0E00               	movlw	0
  6953  001F0A  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6954  001F0C  6991               	setf	___fldiv@new_exp& (0+255),b
  6955  001F0E  0E00               	movlw	0
  6956  001F10  6F80               	movwf	___fldiv@b& (0+255),b
  6957  001F12  0E00               	movlw	0
  6958  001F14  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  6959  001F16  0E00               	movlw	0
  6960  001F18  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  6961  001F1A  0E00               	movlw	0
  6962  001F1C  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6963  001F1E                     l4590:
  6964                           
  6965                           ; BSR set to: 0
  6966  001F1E  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6967  001F20  EF9C  F00F         	goto	u4980
  6968  001F24  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6969  001F26  E106               	bnz	u4981
  6970  001F28  0591               	decf	___fldiv@new_exp& (0+255),w,b
  6971  001F2A  B0D8               	btfsc	status,0,c
  6972  001F2C  EF9A  F00F         	goto	u4981
  6973  001F30  EF9C  F00F         	goto	u4980
  6974  001F34                     u4981:
  6975  001F34  EFAA  F00F         	goto	l4594
  6976  001F38                     u4980:
  6977  001F38                     
  6978                           ; BSR set to: 0
  6979  001F38  0E00               	movlw	0
  6980  001F3A  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6981  001F3C  0E00               	movlw	0
  6982  001F3E  6F91               	movwf	___fldiv@new_exp& (0+255),b
  6983  001F40  0E00               	movlw	0
  6984  001F42  6F80               	movwf	___fldiv@b& (0+255),b
  6985  001F44  0E00               	movlw	0
  6986  001F46  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  6987  001F48  0E00               	movlw	0
  6988  001F4A  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  6989  001F4C  0E00               	movlw	0
  6990  001F4E  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  6991  001F50  0E00               	movlw	0
  6992  001F52  6F90               	movwf	___fldiv@sign& (0+255),b
  6993  001F54                     l4594:
  6994                           
  6995                           ; BSR set to: 0
  6996  001F54  C091  F097         	movff	___fldiv@new_exp,___fldiv@bexp
  6997  001F58                     
  6998                           ; BSR set to: 0
  6999  001F58  A197               	btfss	___fldiv@bexp& (0+255),0,b
  7000  001F5A  EFB1  F00F         	goto	u4991
  7001  001F5E  EFB3  F00F         	goto	u4990
  7002  001F62                     u4991:
  7003  001F62  EFB6  F00F         	goto	l4600
  7004  001F66                     u4990:
  7005  001F66                     
  7006                           ; BSR set to: 0
  7007  001F66  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
  7008  001F68  EFB7  F00F         	goto	l4602
  7009  001F6C                     l4600:
  7010                           
  7011                           ; BSR set to: 0
  7012  001F6C  9F82               	bcf	(___fldiv@b+2)& (0+255),7,b
  7013  001F6E                     l4602:
  7014                           
  7015                           ; BSR set to: 0
  7016  001F6E  90D8               	bcf	status,0,c
  7017  001F70  3197               	rrcf	___fldiv@bexp& (0+255),w,b
  7018  001F72  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  7019  001F74  EF6D  F00E         	goto	l4516
  7020  001F78                     l1236:
  7021                           
  7022                           ; BSR set to: 0
  7023  001F78  0012               	return		;funcret
  7024  001F7A                     __end_of___fldiv:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function _MotionController_getDestinationCoord *****************
  7028 ;; Defined at:
  7029 ;;		line 231 in file "motioncontroller/MotionController.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  motionContro    2   28[BANK0 ] PTR struct MotionControl
  7032 ;;		 -> motionController(54), 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  12   28[BANK0 ] struct Point
  7037 ;; Registers used:
  7038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7044 ;;      Params:         0      12       0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0
  7047 ;;      Totals:         0      12       0       0       0       0       0
  7048 ;;Total ram usage:       12 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    6
  7051 ;; This function calls:
  7052 ;;		_Engine_getDestinationCoord
  7053 ;;		_Point_init3D
  7054 ;; This function is called by:
  7055 ;;		_MotionController_control
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text28
  7060  002AB0                     __ptext28:
  7061                           	opt callstack 0
  7062  002AB0                     _MotionController_getDestinationCoord:
  7063                           	opt callstack 22
  7064  002AB0                     
  7065                           ;motioncontroller/MotionController.c: 232:     return Point_init3D(
  7066  002AB0  C09C  F080         	movff	MotionController_getDestinationCoord@motionController,Engine_getDestinationCoord@
      +                          engine
  7067  002AB4  C09D  F081         	movff	MotionController_getDestinationCoord@motionController+1,Engine_getDestinationCoor
      +                          d@engine+1
  7068  002AB8  ECEB  F018         	call	_Engine_getDestinationCoord	;wreg free
  7069  002ABC  C080  F084         	movff	?_Engine_getDestinationCoord,Point_init3D@x
  7070  002AC0  C081  F085         	movff	?_Engine_getDestinationCoord+1,Point_init3D@x+1
  7071  002AC4  C082  F086         	movff	?_Engine_getDestinationCoord+2,Point_init3D@x+2
  7072  002AC8  C083  F087         	movff	?_Engine_getDestinationCoord+3,Point_init3D@x+3
  7073  002ACC  0E12               	movlw	18
  7074  002ACE  0100               	movlb	0	; () banked
  7075  002AD0  259C               	addwf	MotionController_getDestinationCoord@motionController& (0+255),w,b
  7076  002AD2  6F80               	movwf	Engine_getDestinationCoord@engine& (0+255),b
  7077  002AD4  0E00               	movlw	0
  7078  002AD6  219D               	addwfc	(MotionController_getDestinationCoord@motionController+1)& (0+255),w,b
  7079  002AD8  6F81               	movwf	(Engine_getDestinationCoord@engine+1)& (0+255),b
  7080  002ADA  ECEB  F018         	call	_Engine_getDestinationCoord	;wreg free
  7081  002ADE  C080  F088         	movff	?_Engine_getDestinationCoord,Point_init3D@y
  7082  002AE2  C081  F089         	movff	?_Engine_getDestinationCoord+1,Point_init3D@y+1
  7083  002AE6  C082  F08A         	movff	?_Engine_getDestinationCoord+2,Point_init3D@y+2
  7084  002AEA  C083  F08B         	movff	?_Engine_getDestinationCoord+3,Point_init3D@y+3
  7085  002AEE  0E24               	movlw	36
  7086  002AF0  0100               	movlb	0	; () banked
  7087  002AF2  259C               	addwf	MotionController_getDestinationCoord@motionController& (0+255),w,b
  7088  002AF4  6F80               	movwf	Engine_getDestinationCoord@engine& (0+255),b
  7089  002AF6  0E00               	movlw	0
  7090  002AF8  219D               	addwfc	(MotionController_getDestinationCoord@motionController+1)& (0+255),w,b
  7091  002AFA  6F81               	movwf	(Engine_getDestinationCoord@engine+1)& (0+255),b
  7092  002AFC  ECEB  F018         	call	_Engine_getDestinationCoord	;wreg free
  7093  002B00  C080  F08C         	movff	?_Engine_getDestinationCoord,Point_init3D@z
  7094  002B04  C081  F08D         	movff	?_Engine_getDestinationCoord+1,Point_init3D@z+1
  7095  002B08  C082  F08E         	movff	?_Engine_getDestinationCoord+2,Point_init3D@z+2
  7096  002B0C  C083  F08F         	movff	?_Engine_getDestinationCoord+3,Point_init3D@z+3
  7097  002B10  EC0A  F017         	call	_Point_init3D	;wreg free
  7098  002B14  CFE9 FFD9          	movff	fsr0l,fsr2l
  7099  002B18  CFEA FFDA          	movff	fsr0h,fsr2h
  7100  002B1C  EE00  F09C         	lfsr	0,?_MotionController_getDestinationCoord
  7101  002B20  0E0B               	movlw	11
  7102  002B22                     u4701:
  7103  002B22  CFDB FFEB          	movff	plusw2,plusw0
  7104  002B26  06E8               	decf	wreg,f,c
  7105  002B28  E2FC               	bc	u4701
  7106  002B2A  0012               	return		;funcret
  7107  002B2C                     __end_of_MotionController_getDestinationCoord:
  7108                           	opt callstack 0
  7109                           
  7110 ;; *************** function _Engine_getDestinationCoord *****************
  7111 ;; Defined at:
  7112 ;;		line 22 in file "engine/Engine.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;  engine          2    0[BANK0 ] PTR struct Engine
  7115 ;;		 -> motionController(54), 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  4    0[BANK0 ] float 
  7120 ;; Registers used:
  7121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7127 ;;      Params:         0       4       0       0       0       0       0
  7128 ;;      Locals:         0       0       0       0       0       0       0
  7129 ;;      Temps:          0       0       0       0       0       0       0
  7130 ;;      Totals:         0       4       0       0       0       0       0
  7131 ;;Total ram usage:        4 bytes
  7132 ;; Hardware stack levels used:    1
  7133 ;; Hardware stack levels required when called:    5
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_MotionController_getDestinationCoord
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text29
  7142  0031D6                     __ptext29:
  7143                           	opt callstack 0
  7144  0031D6                     _Engine_getDestinationCoord:
  7145                           	opt callstack 22
  7146  0031D6                     
  7147                           ;engine/Engine.c: 23:          return engine->destinationCoord;
  7148  0031D6  0100               	movlb	0	; () banked
  7149  0031D8  EE20 F004          	lfsr	2,4
  7150  0031DC  5180               	movf	Engine_getDestinationCoord@engine& (0+255),w,b
  7151  0031DE  26D9               	addwf	fsr2l,f,c
  7152  0031E0  5181               	movf	(Engine_getDestinationCoord@engine+1)& (0+255),w,b
  7153  0031E2  22DA               	addwfc	fsr2h,f,c
  7154  0031E4  CFDE F080          	movff	postinc2,?_Engine_getDestinationCoord
  7155  0031E8  CFDE F081          	movff	postinc2,?_Engine_getDestinationCoord+1
  7156  0031EC  CFDE F082          	movff	postinc2,?_Engine_getDestinationCoord+2
  7157  0031F0  CFDE F083          	movff	postinc2,?_Engine_getDestinationCoord+3
  7158  0031F4                     
  7159                           ; BSR set to: 0
  7160  0031F4  0012               	return		;funcret
  7161  0031F6                     __end_of_Engine_getDestinationCoord:
  7162                           	opt callstack 0
  7163                           
  7164 ;; *************** function _MotionController_getCurrentCoord *****************
  7165 ;; Defined at:
  7166 ;;		line 223 in file "motioncontroller/MotionController.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  motionContro    2   28[BANK0 ] PTR struct MotionControl
  7169 ;;		 -> motionController(54), 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  12   28[BANK0 ] struct Point
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7181 ;;      Params:         0      12       0       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0
  7184 ;;      Totals:         0      12       0       0       0       0       0
  7185 ;;Total ram usage:       12 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    6
  7188 ;; This function calls:
  7189 ;;		_Engine_getCurrentCoord
  7190 ;;		_Point_init3D
  7191 ;; This function is called by:
  7192 ;;		_MotionController_control
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text30
  7197  002B2C                     __ptext30:
  7198                           	opt callstack 0
  7199  002B2C                     _MotionController_getCurrentCoord:
  7200                           	opt callstack 22
  7201  002B2C                     
  7202                           ;motioncontroller/MotionController.c: 224:     return Point_init3D(
  7203  002B2C  C09C  F080         	movff	MotionController_getCurrentCoord@motionController,Engine_getCurrentCoord@engine
  7204  002B30  C09D  F081         	movff	MotionController_getCurrentCoord@motionController+1,Engine_getCurrentCoord@engine
      +                          +1
  7205  002B34  EC29  F019         	call	_Engine_getCurrentCoord	;wreg free
  7206  002B38  C080  F084         	movff	?_Engine_getCurrentCoord,Point_init3D@x
  7207  002B3C  C081  F085         	movff	?_Engine_getCurrentCoord+1,Point_init3D@x+1
  7208  002B40  C082  F086         	movff	?_Engine_getCurrentCoord+2,Point_init3D@x+2
  7209  002B44  C083  F087         	movff	?_Engine_getCurrentCoord+3,Point_init3D@x+3
  7210  002B48  0E12               	movlw	18
  7211  002B4A  0100               	movlb	0	; () banked
  7212  002B4C  259C               	addwf	MotionController_getCurrentCoord@motionController& (0+255),w,b
  7213  002B4E  6F80               	movwf	Engine_getCurrentCoord@engine& (0+255),b
  7214  002B50  0E00               	movlw	0
  7215  002B52  219D               	addwfc	(MotionController_getCurrentCoord@motionController+1)& (0+255),w,b
  7216  002B54  6F81               	movwf	(Engine_getCurrentCoord@engine+1)& (0+255),b
  7217  002B56  EC29  F019         	call	_Engine_getCurrentCoord	;wreg free
  7218  002B5A  C080  F088         	movff	?_Engine_getCurrentCoord,Point_init3D@y
  7219  002B5E  C081  F089         	movff	?_Engine_getCurrentCoord+1,Point_init3D@y+1
  7220  002B62  C082  F08A         	movff	?_Engine_getCurrentCoord+2,Point_init3D@y+2
  7221  002B66  C083  F08B         	movff	?_Engine_getCurrentCoord+3,Point_init3D@y+3
  7222  002B6A  0E24               	movlw	36
  7223  002B6C  0100               	movlb	0	; () banked
  7224  002B6E  259C               	addwf	MotionController_getCurrentCoord@motionController& (0+255),w,b
  7225  002B70  6F80               	movwf	Engine_getCurrentCoord@engine& (0+255),b
  7226  002B72  0E00               	movlw	0
  7227  002B74  219D               	addwfc	(MotionController_getCurrentCoord@motionController+1)& (0+255),w,b
  7228  002B76  6F81               	movwf	(Engine_getCurrentCoord@engine+1)& (0+255),b
  7229  002B78  EC29  F019         	call	_Engine_getCurrentCoord	;wreg free
  7230  002B7C  C080  F08C         	movff	?_Engine_getCurrentCoord,Point_init3D@z
  7231  002B80  C081  F08D         	movff	?_Engine_getCurrentCoord+1,Point_init3D@z+1
  7232  002B84  C082  F08E         	movff	?_Engine_getCurrentCoord+2,Point_init3D@z+2
  7233  002B88  C083  F08F         	movff	?_Engine_getCurrentCoord+3,Point_init3D@z+3
  7234  002B8C  EC0A  F017         	call	_Point_init3D	;wreg free
  7235  002B90  CFE9 FFD9          	movff	fsr0l,fsr2l
  7236  002B94  CFEA FFDA          	movff	fsr0h,fsr2h
  7237  002B98  EE00  F09C         	lfsr	0,?_MotionController_getCurrentCoord
  7238  002B9C  0E0B               	movlw	11
  7239  002B9E                     u4691:
  7240  002B9E  CFDB FFEB          	movff	plusw2,plusw0
  7241  002BA2  06E8               	decf	wreg,f,c
  7242  002BA4  E2FC               	bc	u4691
  7243  002BA6  0012               	return		;funcret
  7244  002BA8                     __end_of_MotionController_getCurrentCoord:
  7245                           	opt callstack 0
  7246                           
  7247 ;; *************** function _Point_init3D *****************
  7248 ;; Defined at:
  7249 ;;		line 5 in file "Point.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  x               4    4[BANK0 ] float 
  7252 ;;  y               4    8[BANK0 ] float 
  7253 ;;  z               4   12[BANK0 ] float 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  point          12   16[BANK0 ] struct Point
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  12    4[BANK0 ] struct Point
  7258 ;; Registers used:
  7259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7265 ;;      Params:         0      12       0       0       0       0       0
  7266 ;;      Locals:         0      12       0       0       0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0
  7268 ;;      Totals:         0      24       0       0       0       0       0
  7269 ;;Total ram usage:       24 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    5
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_MotionController_getCurrentCoord
  7276 ;;		_MotionController_getDestinationCoord
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text31
  7281  002E14                     __ptext31:
  7282                           	opt callstack 0
  7283  002E14                     _Point_init3D:
  7284                           	opt callstack 22
  7285  002E14                     
  7286                           ;Point.c: 6:     Point point;;Point.c: 7:     point.x = x;
  7287  002E14  C084  F090         	movff	Point_init3D@x,Point_init3D@point
  7288  002E18  C085  F091         	movff	Point_init3D@x+1,Point_init3D@point+1
  7289  002E1C  C086  F092         	movff	Point_init3D@x+2,Point_init3D@point+2
  7290  002E20  C087  F093         	movff	Point_init3D@x+3,Point_init3D@point+3
  7291                           
  7292                           ;Point.c: 8:     point.y = y;
  7293  002E24  C088  F094         	movff	Point_init3D@y,Point_init3D@point+4
  7294  002E28  C089  F095         	movff	Point_init3D@y+1,Point_init3D@point+5
  7295  002E2C  C08A  F096         	movff	Point_init3D@y+2,Point_init3D@point+6
  7296  002E30  C08B  F097         	movff	Point_init3D@y+3,Point_init3D@point+7
  7297                           
  7298                           ;Point.c: 9:     point.z = z;
  7299  002E34  C08C  F098         	movff	Point_init3D@z,Point_init3D@point+8
  7300  002E38  C08D  F099         	movff	Point_init3D@z+1,Point_init3D@point+9
  7301  002E3C  C08E  F09A         	movff	Point_init3D@z+2,Point_init3D@point+10
  7302  002E40  C08F  F09B         	movff	Point_init3D@z+3,Point_init3D@point+11
  7303  002E44                     
  7304                           ;Point.c: 10:     return point;
  7305  002E44  EE20  F090         	lfsr	2,Point_init3D@point
  7306  002E48  EE00  F084         	lfsr	0,?_Point_init3D
  7307  002E4C  0E0B               	movlw	11
  7308  002E4E                     u4171:
  7309  002E4E  CFDB FFEB          	movff	plusw2,plusw0
  7310  002E52  06E8               	decf	wreg,f,c
  7311  002E54  E2FC               	bc	u4171
  7312  002E56  0012               	return		;funcret
  7313  002E58                     __end_of_Point_init3D:
  7314                           	opt callstack 0
  7315                           
  7316 ;; *************** function _Engine_getCurrentCoord *****************
  7317 ;; Defined at:
  7318 ;;		line 18 in file "engine/Engine.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  engine          2    0[BANK0 ] PTR struct Engine
  7321 ;;		 -> motionController(54), 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4    0[BANK0 ] float 
  7326 ;; Registers used:
  7327 ;;		fsr2l, fsr2h
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7333 ;;      Params:         0       4       0       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0
  7336 ;;      Totals:         0       4       0       0       0       0       0
  7337 ;;Total ram usage:        4 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    5
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_MotionController_getCurrentCoord
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text32
  7348  003252                     __ptext32:
  7349                           	opt callstack 0
  7350  003252                     _Engine_getCurrentCoord:
  7351                           	opt callstack 22
  7352  003252                     
  7353                           ;engine/Engine.c: 19:         return engine->currentCoord;
  7354  003252  C080  FFD9         	movff	Engine_getCurrentCoord@engine,fsr2l
  7355  003256  C081  FFDA         	movff	Engine_getCurrentCoord@engine+1,fsr2h
  7356  00325A  CFDE F080          	movff	postinc2,?_Engine_getCurrentCoord
  7357  00325E  CFDE F081          	movff	postinc2,?_Engine_getCurrentCoord+1
  7358  003262  CFDE F082          	movff	postinc2,?_Engine_getCurrentCoord+2
  7359  003266  CFDE F083          	movff	postinc2,?_Engine_getCurrentCoord+3
  7360  00326A  0012               	return		;funcret
  7361  00326C                     __end_of_Engine_getCurrentCoord:
  7362                           	opt callstack 0
  7363                           
  7364 ;; *************** function _Engine_step *****************
  7365 ;; Defined at:
  7366 ;;		line 26 in file "engine/Engine.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  engine          2   10[BANK0 ] PTR struct Engine
  7369 ;;		 -> motionController(54), 
  7370 ;;  dir             2   12[BANK0 ] int 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      void 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7382 ;;      Params:         0       4       0       0       0       0       0
  7383 ;;      Locals:         0       0       0       0       0       0       0
  7384 ;;      Temps:          0       0       0       0       0       0       0
  7385 ;;      Totals:         0       4       0       0       0       0       0
  7386 ;;Total ram usage:        4 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    8
  7389 ;; This function calls:
  7390 ;;		_DigitalOutput_close
  7391 ;;		_DigitalOutput_open
  7392 ;; This function is called by:
  7393 ;;		_MotionController_control
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text33
  7398  002A32                     __ptext33:
  7399                           	opt callstack 0
  7400  002A32                     _Engine_step:
  7401                           	opt callstack 20
  7402  002A32                     
  7403                           ;engine/Engine.c: 27:         if(dir == 0){
  7404  002A32  0100               	movlb	0	; () banked
  7405  002A34  518C               	movf	Engine_step@dir& (0+255),w,b
  7406  002A36  118D               	iorwf	(Engine_step@dir+1)& (0+255),w,b
  7407  002A38  A4D8               	btfss	status,2,c
  7408  002A3A  EF21  F015         	goto	u4671
  7409  002A3E  EF23  F015         	goto	u4670
  7410  002A42                     u4671:
  7411  002A42  EF31  F015         	goto	l4412
  7412  002A46                     u4670:
  7413  002A46                     
  7414                           ; BSR set to: 0
  7415                           ;engine/Engine.c: 28:             DigitalOutput_open(engine->dirOutput);
  7416  002A46  EE20 F00C          	lfsr	2,12
  7417  002A4A  518A               	movf	Engine_step@engine& (0+255),w,b
  7418  002A4C  26D9               	addwf	fsr2l,f,c
  7419  002A4E  518B               	movf	(Engine_step@engine+1)& (0+255),w,b
  7420  002A50  22DA               	addwfc	fsr2h,f,c
  7421  002A52  CFDE F088          	movff	postinc2,DigitalOutput_open@output
  7422  002A56  CFDD F089          	movff	postdec2,DigitalOutput_open@output+1
  7423  002A5A  EC1A  F018         	call	_DigitalOutput_open	;wreg free
  7424                           
  7425                           ;engine/Engine.c: 29:         }
  7426  002A5E  EF3D  F015         	goto	l109
  7427  002A62                     l4412:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;engine/Engine.c: 31:          DigitalOutput_close(engine->dirOutput);
  7431  002A62  EE20 F00C          	lfsr	2,12
  7432  002A66  518A               	movf	Engine_step@engine& (0+255),w,b
  7433  002A68  26D9               	addwf	fsr2l,f,c
  7434  002A6A  518B               	movf	(Engine_step@engine+1)& (0+255),w,b
  7435  002A6C  22DA               	addwfc	fsr2h,f,c
  7436  002A6E  CFDE F088          	movff	postinc2,DigitalOutput_close@output
  7437  002A72  CFDD F089          	movff	postdec2,DigitalOutput_close@output+1
  7438  002A76  EC30  F018         	call	_DigitalOutput_close	;wreg free
  7439  002A7A                     l109:
  7440                           
  7441                           ;engine/Engine.c: 34:         DigitalOutput_open(engine->motionOutput);
  7442  002A7A  0100               	movlb	0	; () banked
  7443  002A7C  EE20 F00A          	lfsr	2,10
  7444  002A80  518A               	movf	Engine_step@engine& (0+255),w,b
  7445  002A82  26D9               	addwf	fsr2l,f,c
  7446  002A84  518B               	movf	(Engine_step@engine+1)& (0+255),w,b
  7447  002A86  22DA               	addwfc	fsr2h,f,c
  7448  002A88  CFDE F088          	movff	postinc2,DigitalOutput_open@output
  7449  002A8C  CFDD F089          	movff	postdec2,DigitalOutput_open@output+1
  7450  002A90  EC1A  F018         	call	_DigitalOutput_open	;wreg free
  7451                           
  7452                           ;engine/Engine.c: 35:         DigitalOutput_close(engine->motionOutput);
  7453  002A94  0100               	movlb	0	; () banked
  7454  002A96  EE20 F00A          	lfsr	2,10
  7455  002A9A  518A               	movf	Engine_step@engine& (0+255),w,b
  7456  002A9C  26D9               	addwf	fsr2l,f,c
  7457  002A9E  518B               	movf	(Engine_step@engine+1)& (0+255),w,b
  7458  002AA0  22DA               	addwfc	fsr2h,f,c
  7459  002AA2  CFDE F088          	movff	postinc2,DigitalOutput_close@output
  7460  002AA6  CFDD F089          	movff	postdec2,DigitalOutput_close@output+1
  7461  002AAA  EC30  F018         	call	_DigitalOutput_close	;wreg free
  7462  002AAE  0012               	return		;funcret
  7463  002AB0                     __end_of_Engine_step:
  7464                           	opt callstack 0
  7465                           
  7466 ;; *************** function _DigitalOutput_open *****************
  7467 ;; Defined at:
  7468 ;;		line 11 in file "io/digitalOutput/DigitalOutput.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  output          2    8[BANK0 ] PTR struct DigitalOutput
  7471 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  7472 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), redLedOutput(4), 
  7473 ;;		 -> yellowLedOutput(4), 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7485 ;;      Params:         0       2       0       0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0
  7488 ;;      Totals:         0       2       0       0       0       0       0
  7489 ;;Total ram usage:        2 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:    7
  7492 ;; This function calls:
  7493 ;;		_DigitalOutput_set
  7494 ;; This function is called by:
  7495 ;;		_Engine_step
  7496 ;;		_Led_open
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text34
  7501  003034                     __ptext34:
  7502                           	opt callstack 0
  7503  003034                     _DigitalOutput_open:
  7504                           	opt callstack 21
  7505  003034                     
  7506                           ;io/digitalOutput/DigitalOutput.c: 12:     output->isHigh = 1;
  7507  003034  0100               	movlb	0	; () banked
  7508  003036  EE20 F002          	lfsr	2,2
  7509  00303A  5188               	movf	DigitalOutput_open@output& (0+255),w,b
  7510  00303C  26D9               	addwf	fsr2l,f,c
  7511  00303E  5189               	movf	(DigitalOutput_open@output+1)& (0+255),w,b
  7512  003040  22DA               	addwfc	fsr2h,f,c
  7513  003042  0E01               	movlw	1
  7514  003044  6EDE               	movwf	postinc2,c
  7515  003046  0E00               	movlw	0
  7516  003048  6EDD               	movwf	postdec2,c
  7517  00304A                     
  7518                           ; BSR set to: 0
  7519                           ;io/digitalOutput/DigitalOutput.c: 13:     DigitalOutput_set(output,1);
  7520  00304A  C088  F084         	movff	DigitalOutput_open@output,DigitalOutput_set@outputable
  7521  00304E  C089  F085         	movff	DigitalOutput_open@output+1,DigitalOutput_set@outputable+1
  7522  003052  0E00               	movlw	0
  7523  003054  6F87               	movwf	(DigitalOutput_set@value+1)& (0+255),b
  7524  003056  0E01               	movlw	1
  7525  003058  6F86               	movwf	DigitalOutput_set@value& (0+255),b
  7526  00305A  EC87  F017         	call	_DigitalOutput_set	;wreg free
  7527  00305E  0012               	return		;funcret
  7528  003060                     __end_of_DigitalOutput_open:
  7529                           	opt callstack 0
  7530                           
  7531 ;; *************** function _DigitalOutput_close *****************
  7532 ;; Defined at:
  7533 ;;		line 17 in file "io/digitalOutput/DigitalOutput.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  output          2    8[BANK0 ] PTR struct DigitalOutput
  7536 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  7537 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), redLedOutput(4), 
  7538 ;;		 -> yellowLedOutput(4), 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7550 ;;      Params:         0       2       0       0       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0
  7553 ;;      Totals:         0       2       0       0       0       0       0
  7554 ;;Total ram usage:        2 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:    7
  7557 ;; This function calls:
  7558 ;;		_DigitalOutput_set
  7559 ;; This function is called by:
  7560 ;;		_Engine_step
  7561 ;;		_Led_close
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text35
  7566  003060                     __ptext35:
  7567                           	opt callstack 0
  7568  003060                     _DigitalOutput_close:
  7569                           	opt callstack 21
  7570  003060                     
  7571                           ;io/digitalOutput/DigitalOutput.c: 18:     output->isHigh = 0;
  7572  003060  0100               	movlb	0	; () banked
  7573  003062  EE20 F002          	lfsr	2,2
  7574  003066  5188               	movf	DigitalOutput_close@output& (0+255),w,b
  7575  003068  26D9               	addwf	fsr2l,f,c
  7576  00306A  5189               	movf	(DigitalOutput_close@output+1)& (0+255),w,b
  7577  00306C  22DA               	addwfc	fsr2h,f,c
  7578  00306E  0E00               	movlw	0
  7579  003070  6EDE               	movwf	postinc2,c
  7580  003072  0E00               	movlw	0
  7581  003074  6EDD               	movwf	postdec2,c
  7582  003076                     
  7583                           ; BSR set to: 0
  7584                           ;io/digitalOutput/DigitalOutput.c: 19:     DigitalOutput_set(output,0);
  7585  003076  C088  F084         	movff	DigitalOutput_close@output,DigitalOutput_set@outputable
  7586  00307A  C089  F085         	movff	DigitalOutput_close@output+1,DigitalOutput_set@outputable+1
  7587  00307E  0E00               	movlw	0
  7588  003080  6F87               	movwf	(DigitalOutput_set@value+1)& (0+255),b
  7589  003082  0E00               	movlw	0
  7590  003084  6F86               	movwf	DigitalOutput_set@value& (0+255),b
  7591  003086  EC87  F017         	call	_DigitalOutput_set	;wreg free
  7592  00308A  0012               	return		;funcret
  7593  00308C                     __end_of_DigitalOutput_close:
  7594                           	opt callstack 0
  7595                           
  7596 ;; *************** function _DigitalOutput_set *****************
  7597 ;; Defined at:
  7598 ;;		line 23 in file "io/digitalOutput/DigitalOutput.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  outputable      2    4[BANK0 ] PTR struct DigitalOutput
  7601 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  7602 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), redLedOutput(4), 
  7603 ;;		 -> yellowLedOutput(4), 
  7604 ;;  value           2    6[BANK0 ] int 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7616 ;;      Params:         0       4       0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0
  7619 ;;      Totals:         0       4       0       0       0       0       0
  7620 ;;Total ram usage:        4 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:    6
  7623 ;; This function calls:
  7624 ;;		_blueLedSet
  7625 ;;		_redLedSet
  7626 ;;		_xEngineDirSet
  7627 ;;		_xEngineMotionSet
  7628 ;;		_yellowLedSet
  7629 ;; This function is called by:
  7630 ;;		_DigitalOutput_open
  7631 ;;		_DigitalOutput_close
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text36
  7636  002F0E                     __ptext36:
  7637                           	opt callstack 0
  7638  002F0E                     _DigitalOutput_set:
  7639                           	opt callstack 21
  7640  002F0E                     
  7641                           ;io/digitalOutput/DigitalOutput.c: 24:     outputable->set(&outputable,value);
  7642  002F0E  0E84               	movlw	low DigitalOutput_set@outputable
  7643  002F10  0100               	movlb	0	; () banked
  7644  002F12  6F80               	movwf	blueLedSet@button& (0+255),b
  7645  002F14  0E00               	movlw	high DigitalOutput_set@outputable
  7646  002F16  6F81               	movwf	(blueLedSet@button+1)& (0+255),b
  7647  002F18  C086  F082         	movff	DigitalOutput_set@value,blueLedSet@value
  7648  002F1C  C087  F083         	movff	DigitalOutput_set@value+1,blueLedSet@value+1
  7649  002F20  C084  FFD9         	movff	DigitalOutput_set@outputable,fsr2l
  7650  002F24  C085  FFDA         	movff	DigitalOutput_set@outputable+1,fsr2h
  7651  002F28  D802               	call	u4158
  7652  002F2A  EFA1  F017         	goto	u4159
  7653  002F2E                     u4158:
  7654  002F2E  0005               	push	
  7655  002F30  6EFA               	movwf	pclath,c
  7656  002F32  50DE               	movf	postinc2,w,c
  7657  002F34  6EFD               	movwf	tosl,c
  7658  002F36  50DE               	movf	postinc2,w,c
  7659  002F38  6EFE               	movwf	tosh,c
  7660  002F3A  50F8               	movf	tblptru,w,c
  7661  002F3C  6EFF               	movwf	tosu,c
  7662  002F3E  50FA               	movf	pclath,w,c
  7663  002F40  0012               	return		;indir
  7664  002F42                     u4159:
  7665  002F42  0012               	return		;funcret
  7666  002F44                     __end_of_DigitalOutput_set:
  7667                           	opt callstack 0
  7668                           
  7669 ;; *************** function _blueLedSet *****************
  7670 ;; Defined at:
  7671 ;;		line 28 in file "led/LedConfigurator.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  button          2    0[BANK0 ] PTR struct DigitalOutput
  7674 ;;		 -> DigitalOutput_set@outputable(2), 
  7675 ;;  value           2    2[BANK0 ] int 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      void 
  7680 ;; Registers used:
  7681 ;;		None
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7687 ;;      Params:         0       4       0       0       0       0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0
  7690 ;;      Totals:         0       4       0       0       0       0       0
  7691 ;;Total ram usage:        4 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    5
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_LedConfigurator_config
  7698 ;;		_DigitalOutput_set
  7699 ;;		i2_DigitalOutput_set
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text37
  7704  0032BA                     __ptext37:
  7705                           	opt callstack 0
  7706  0032BA                     _blueLedSet:
  7707                           	opt callstack 0
  7708                           
  7709                           ;Skip over the trampoline to the duplicate function for level 2
  7710  0032BA  A260               	btfss	int$flags,1,c
  7711  0032BC  EF62  F019         	goto	_blueLedSet$intlevel0
  7712  0032C0  EF99  F019         	goto	i2_blueLedSet
  7713  0032C4                     _blueLedSet$intlevel0:
  7714                           	opt callstack 21
  7715  0032C4                     
  7716                           ;led/LedConfigurator.c: 29:         LATCbits.LATC3 = value;
  7717  0032C4  0100               	movlb	0	; () banked
  7718  0032C6  B182               	btfsc	blueLedSet@value& (0+255),0,b
  7719  0032C8  D002               	bra	u4145
  7720  0032CA  968B               	bcf	139,3,c	;volatile
  7721  0032CC  D001               	bra	u4146
  7722  0032CE                     u4145:
  7723  0032CE  868B               	bsf	139,3,c	;volatile
  7724  0032D0                     u4146:
  7725  0032D0  0012               	return		;funcret
  7726  0032D2                     __end_of_blueLedSet:
  7727                           	opt callstack 0
  7728                           
  7729 ;; *************** function _redLedSet *****************
  7730 ;; Defined at:
  7731 ;;		line 17 in file "led/LedConfigurator.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  button          2    0[BANK0 ] PTR struct DigitalOutput
  7734 ;;		 -> DigitalOutput_set@outputable(2), 
  7735 ;;  value           2    2[BANK0 ] int 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		None
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7747 ;;      Params:         0       4       0       0       0       0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0
  7750 ;;      Totals:         0       4       0       0       0       0       0
  7751 ;;Total ram usage:        4 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    5
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_LedConfigurator_config
  7758 ;;		_DigitalOutput_set
  7759 ;;		i2_DigitalOutput_set
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text38
  7764  0032D2                     __ptext38:
  7765                           	opt callstack 0
  7766  0032D2                     _redLedSet:
  7767                           	opt callstack 0
  7768                           
  7769                           ;Skip over the trampoline to the duplicate function for level 2
  7770  0032D2  A260               	btfss	int$flags,1,c
  7771  0032D4  EF6E  F019         	goto	_redLedSet$intlevel0
  7772  0032D8  EF9F  F019         	goto	i2_redLedSet
  7773  0032DC                     _redLedSet$intlevel0:
  7774                           	opt callstack 21
  7775  0032DC                     
  7776                           ;led/LedConfigurator.c: 18:         LATDbits.LATD1 = value;
  7777  0032DC  0100               	movlb	0	; () banked
  7778  0032DE  B182               	btfsc	redLedSet@value& (0+255),0,b
  7779  0032E0  D002               	bra	u4125
  7780  0032E2  928C               	bcf	140,1,c	;volatile
  7781  0032E4  D001               	bra	u4126
  7782  0032E6                     u4125:
  7783  0032E6  828C               	bsf	140,1,c	;volatile
  7784  0032E8                     u4126:
  7785  0032E8  0012               	return		;funcret
  7786  0032EA                     __end_of_redLedSet:
  7787                           	opt callstack 0
  7788                           
  7789 ;; *************** function _xEngineDirSet *****************
  7790 ;; Defined at:
  7791 ;;		line 42 in file "engine/EngineConfigurator.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  engine          2    0[BANK0 ] PTR struct DigitalOutput
  7794 ;;		 -> DigitalOutput_set@outputable(2), 
  7795 ;;  value           2    2[BANK0 ] int 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		None
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7807 ;;      Params:         0       4       0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0
  7810 ;;      Totals:         0       4       0       0       0       0       0
  7811 ;;Total ram usage:        4 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    5
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_EngineConfigurator_configEngines
  7818 ;;		_DigitalOutput_set
  7819 ;;		i2_DigitalOutput_set
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text39
  7824  0032EA                     __ptext39:
  7825                           	opt callstack 0
  7826  0032EA                     _xEngineDirSet:
  7827                           	opt callstack 0
  7828                           
  7829                           ;Skip over the trampoline to the duplicate function for level 2
  7830  0032EA  A260               	btfss	int$flags,1,c
  7831  0032EC  EF7A  F019         	goto	_xEngineDirSet$intlevel0
  7832  0032F0  EFA5  F019         	goto	i2_xEngineDirSet
  7833  0032F4                     _xEngineDirSet$intlevel0:
  7834                           	opt callstack 21
  7835  0032F4                     
  7836                           ;engine/EngineConfigurator.c: 43:     LATBbits.LATB0 = value;
  7837  0032F4  0100               	movlb	0	; () banked
  7838  0032F6  B182               	btfsc	xEngineDirSet@value& (0+255),0,b
  7839  0032F8  D002               	bra	u4115
  7840  0032FA  908A               	bcf	138,0,c	;volatile
  7841  0032FC  D001               	bra	u4116
  7842  0032FE                     u4115:
  7843  0032FE  808A               	bsf	138,0,c	;volatile
  7844  003300                     u4116:
  7845  003300  0012               	return		;funcret
  7846  003302                     __end_of_xEngineDirSet:
  7847                           	opt callstack 0
  7848                           
  7849 ;; *************** function _xEngineMotionSet *****************
  7850 ;; Defined at:
  7851 ;;		line 18 in file "engine/EngineConfigurator.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  engine          2    0[BANK0 ] PTR struct DigitalOutput
  7854 ;;		 -> DigitalOutput_set@outputable(2), 
  7855 ;;  value           2    2[BANK0 ] int 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      void 
  7860 ;; Registers used:
  7861 ;;		None
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7867 ;;      Params:         0       4       0       0       0       0       0
  7868 ;;      Locals:         0       0       0       0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0       0       0
  7870 ;;      Totals:         0       4       0       0       0       0       0
  7871 ;;Total ram usage:        4 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    5
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_EngineConfigurator_configEngines
  7878 ;;		_DigitalOutput_set
  7879 ;;		i2_DigitalOutput_set
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text40
  7884  003302                     __ptext40:
  7885                           	opt callstack 0
  7886  003302                     _xEngineMotionSet:
  7887                           	opt callstack 0
  7888                           
  7889                           ;Skip over the trampoline to the duplicate function for level 2
  7890  003302  A260               	btfss	int$flags,1,c
  7891  003304  EF86  F019         	goto	_xEngineMotionSet$intlevel0
  7892  003308  EFAB  F019         	goto	i2_xEngineMotionSet
  7893  00330C                     _xEngineMotionSet$intlevel0:
  7894                           	opt callstack 21
  7895  00330C                     
  7896                           ;engine/EngineConfigurator.c: 19:     LATCbits.LATC0 = value;
  7897  00330C  0100               	movlb	0	; () banked
  7898  00330E  B182               	btfsc	xEngineMotionSet@value& (0+255),0,b
  7899  003310  D002               	bra	u4105
  7900  003312  908B               	bcf	139,0,c	;volatile
  7901  003314  D001               	bra	u4106
  7902  003316                     u4105:
  7903  003316  808B               	bsf	139,0,c	;volatile
  7904  003318                     u4106:
  7905  003318  0012               	return		;funcret
  7906  00331A                     __end_of_xEngineMotionSet:
  7907                           	opt callstack 0
  7908                           
  7909 ;; *************** function _yellowLedSet *****************
  7910 ;; Defined at:
  7911 ;;		line 23 in file "led/LedConfigurator.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  button          2    0[BANK0 ] PTR struct DigitalOutput
  7914 ;;		 -> DigitalOutput_set@outputable(2), 
  7915 ;;  value           2    2[BANK0 ] int 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		None
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7927 ;;      Params:         0       4       0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0
  7930 ;;      Totals:         0       4       0       0       0       0       0
  7931 ;;Total ram usage:        4 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    5
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_LedConfigurator_config
  7938 ;;		_DigitalOutput_set
  7939 ;;		i2_DigitalOutput_set
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text41
  7944  00331A                     __ptext41:
  7945                           	opt callstack 0
  7946  00331A                     _yellowLedSet:
  7947                           	opt callstack 0
  7948                           
  7949                           ;Skip over the trampoline to the duplicate function for level 2
  7950  00331A  A260               	btfss	int$flags,1,c
  7951  00331C  EF92  F019         	goto	_yellowLedSet$intlevel0
  7952  003320  EFB1  F019         	goto	i2_yellowLedSet
  7953  003324                     _yellowLedSet$intlevel0:
  7954                           	opt callstack 21
  7955  003324                     
  7956                           ;led/LedConfigurator.c: 24:         LATDbits.LATD0 = value;
  7957  003324  0100               	movlb	0	; () banked
  7958  003326  B182               	btfsc	yellowLedSet@value& (0+255),0,b
  7959  003328  D002               	bra	u4135
  7960  00332A  908C               	bcf	140,0,c	;volatile
  7961  00332C  D001               	bra	u4136
  7962  00332E                     u4135:
  7963  00332E  808C               	bsf	140,0,c	;volatile
  7964  003330                     u4136:
  7965  003330  0012               	return		;funcret
  7966  003332                     __end_of_yellowLedSet:
  7967                           	opt callstack 0
  7968                           
  7969 ;; *************** function _Engine_getStepPerMetrice *****************
  7970 ;; Defined at:
  7971 ;;		line 15 in file "engine/Engine.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  engine          2    0[BANK0 ] PTR struct Engine
  7974 ;;		 -> motionController(54), 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  4    0[BANK0 ] float 
  7979 ;; Registers used:
  7980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7986 ;;      Params:         0       4       0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0
  7989 ;;      Totals:         0       4       0       0       0       0       0
  7990 ;;Total ram usage:        4 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:    5
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_MotionController_control
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text42
  8001  0031F6                     __ptext42:
  8002                           	opt callstack 0
  8003  0031F6                     _Engine_getStepPerMetrice:
  8004                           	opt callstack 23
  8005  0031F6                     
  8006                           ;engine/Engine.c: 16:         return engine->stepPerMetrice;
  8007  0031F6  0100               	movlb	0	; () banked
  8008  0031F8  EE20 F00E          	lfsr	2,14
  8009  0031FC  5180               	movf	Engine_getStepPerMetrice@engine& (0+255),w,b
  8010  0031FE  26D9               	addwf	fsr2l,f,c
  8011  003200  5181               	movf	(Engine_getStepPerMetrice@engine+1)& (0+255),w,b
  8012  003202  22DA               	addwfc	fsr2h,f,c
  8013  003204  CFDE F080          	movff	postinc2,?_Engine_getStepPerMetrice
  8014  003208  CFDE F081          	movff	postinc2,?_Engine_getStepPerMetrice+1
  8015  00320C  CFDE F082          	movff	postinc2,?_Engine_getStepPerMetrice+2
  8016  003210  CFDE F083          	movff	postinc2,?_Engine_getStepPerMetrice+3
  8017  003214                     
  8018                           ; BSR set to: 0
  8019  003214  0012               	return		;funcret
  8020  003216                     __end_of_Engine_getStepPerMetrice:
  8021                           	opt callstack 0
  8022                           
  8023 ;; *************** function _Led_init *****************
  8024 ;; Defined at:
  8025 ;;		line 4 in file "led/Led.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  8028 ;;		 -> blueLedOutput(4), redLedOutput(4), yellowLedOutput(4), 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  led             4    4[BANK0 ] struct Led
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  4    0[BANK0 ] struct Led
  8033 ;; Registers used:
  8034 ;;		wreg, status,2, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8040 ;;      Params:         0       4       0       0       0       0       0
  8041 ;;      Locals:         0       4       0       0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0
  8043 ;;      Totals:         0       8       0       0       0       0       0
  8044 ;;Total ram usage:        8 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    5
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_Application_init
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text43
  8055  00326C                     __ptext43:
  8056                           	opt callstack 0
  8057  00326C                     _Led_init:
  8058                           	opt callstack 24
  8059  00326C                     
  8060                           ;led/Led.c: 5:     Led led;;led/Led.c: 6:     led.output = output;
  8061  00326C  C080  F084         	movff	Led_init@output,Led_init@led
  8062  003270  C081  F085         	movff	Led_init@output+1,Led_init@led+1
  8063  003274                     
  8064                           ;led/Led.c: 7:     return led;
  8065  003274  C084  F080         	movff	Led_init@led,?_Led_init
  8066  003278  C085  F081         	movff	Led_init@led+1,?_Led_init+1
  8067  00327C  C086  F082         	movff	Led_init@led+2,?_Led_init+2
  8068  003280  C087  F083         	movff	Led_init@led+3,?_Led_init+3
  8069  003284  0012               	return		;funcret
  8070  003286                     __end_of_Led_init:
  8071                           	opt callstack 0
  8072                           
  8073 ;; *************** function _LedConfigurator_config *****************
  8074 ;; Defined at:
  8075 ;;		line 32 in file "led/LedConfigurator.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;		None
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;		None
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      void 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8089 ;;      Params:         0       0       0       0       0       0       0
  8090 ;;      Locals:         0       0       0       0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0
  8092 ;;      Totals:         0       0       0       0       0       0       0
  8093 ;;Total ram usage:        0 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    7
  8096 ;; This function calls:
  8097 ;;		_DigitalOutput_init
  8098 ;; This function is called by:
  8099 ;;		_Application_init
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text44
  8104  002C92                     __ptext44:
  8105                           	opt callstack 0
  8106  002C92                     _LedConfigurator_config:
  8107                           	opt callstack 22
  8108  002C92                     
  8109                           ;led/LedConfigurator.c: 33:     redLedOutput = DigitalOutput_init(redLedInit,redLedSet);
  8110  002C92  0E7E               	movlw	low _redLedInit
  8111  002C94  0100               	movlb	0	; () banked
  8112  002C96  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  8113  002C98  0E33               	movlw	high _redLedInit
  8114  002C9A  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  8115  002C9C  0ED2               	movlw	low _redLedSet
  8116  002C9E  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  8117  002CA0  0E32               	movlw	high _redLedSet
  8118  002CA2  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  8119  002CA4  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  8120  002CA8  C080  F16B         	movff	?_DigitalOutput_init,_redLedOutput
  8121  002CAC  C081  F16C         	movff	?_DigitalOutput_init+1,_redLedOutput+1
  8122  002CB0  C082  F16D         	movff	?_DigitalOutput_init+2,_redLedOutput+2
  8123  002CB4  C083  F16E         	movff	?_DigitalOutput_init+3,_redLedOutput+3
  8124                           
  8125                           ;led/LedConfigurator.c: 34:     yellowLedOutput = DigitalOutput_init(yellowLedInit,yello
      +                          wLedSet);
  8126  002CB8  0E7A               	movlw	low _yellowLedInit
  8127  002CBA  0100               	movlb	0	; () banked
  8128  002CBC  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  8129  002CBE  0E33               	movlw	high _yellowLedInit
  8130  002CC0  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  8131  002CC2  0E1A               	movlw	low _yellowLedSet
  8132  002CC4  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  8133  002CC6  0E33               	movlw	high _yellowLedSet
  8134  002CC8  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  8135  002CCA  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  8136  002CCE  C080  F167         	movff	?_DigitalOutput_init,_yellowLedOutput
  8137  002CD2  C081  F168         	movff	?_DigitalOutput_init+1,_yellowLedOutput+1
  8138  002CD6  C082  F169         	movff	?_DigitalOutput_init+2,_yellowLedOutput+2
  8139  002CDA  C083  F16A         	movff	?_DigitalOutput_init+3,_yellowLedOutput+3
  8140                           
  8141                           ;led/LedConfigurator.c: 35:     blueLedOutput = DigitalOutput_init(blueLedInit,blueLedSe
      +                          t);
  8142  002CDE  0E76               	movlw	low _blueLedInit
  8143  002CE0  0100               	movlb	0	; () banked
  8144  002CE2  6F80               	movwf	DigitalOutput_init@init& (0+255),b
  8145  002CE4  0E33               	movlw	high _blueLedInit
  8146  002CE6  6F81               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  8147  002CE8  0EBA               	movlw	low _blueLedSet
  8148  002CEA  6F82               	movwf	DigitalOutput_init@set& (0+255),b
  8149  002CEC  0E32               	movlw	high _blueLedSet
  8150  002CEE  6F83               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  8151  002CF0  ECA2  F017         	call	_DigitalOutput_init	;wreg free
  8152  002CF4  C080  F163         	movff	?_DigitalOutput_init,_blueLedOutput
  8153  002CF8  C081  F164         	movff	?_DigitalOutput_init+1,_blueLedOutput+1
  8154  002CFC  C082  F165         	movff	?_DigitalOutput_init+2,_blueLedOutput+2
  8155  002D00  C083  F166         	movff	?_DigitalOutput_init+3,_blueLedOutput+3
  8156  002D04  0012               	return		;funcret
  8157  002D06                     __end_of_LedConfigurator_config:
  8158                           	opt callstack 0
  8159                           
  8160 ;; *************** function _DigitalOutput_init *****************
  8161 ;; Defined at:
  8162 ;;		line 3 in file "io/digitalOutput/DigitalOutput.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  init            2    0[BANK0 ] PTR FTN()void 
  8165 ;;		 -> blueLedInit(1), yellowLedInit(1), redLedInit(1), zEngineDirInit(1), 
  8166 ;;		 -> yEngineDirInit(1), xEngineDirInit(1), zEngineMotionInit(1), yEngineMotionInit(1), 
  8167 ;;		 -> xEngineMotionInit(1), 
  8168 ;;  set             2    2[BANK0 ] PTR FTN()void 
  8169 ;;		 -> blueLedSet(1), yellowLedSet(1), redLedSet(1), xEngineDirSet(1), 
  8170 ;;		 -> xEngineMotionSet(1), 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;  output          4    4[BANK0 ] struct DigitalOutput
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  4    0[BANK0 ] struct DigitalOutput
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8182 ;;      Params:         0       4       0       0       0       0       0
  8183 ;;      Locals:         0       4       0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0
  8185 ;;      Totals:         0       8       0       0       0       0       0
  8186 ;;Total ram usage:        8 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    6
  8189 ;; This function calls:
  8190 ;;		_blueLedInit
  8191 ;;		_redLedInit
  8192 ;;		_xEngineDirInit
  8193 ;;		_xEngineMotionInit
  8194 ;;		_yEngineDirInit
  8195 ;;		_yEngineMotionInit
  8196 ;;		_yellowLedInit
  8197 ;;		_zEngineDirInit
  8198 ;;		_zEngineMotionInit
  8199 ;; This function is called by:
  8200 ;;		_EngineConfigurator_configEngines
  8201 ;;		_LedConfigurator_config
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text45
  8206  002F44                     __ptext45:
  8207                           	opt callstack 0
  8208  002F44                     _DigitalOutput_init:
  8209                           	opt callstack 21
  8210  002F44                     
  8211                           ;io/digitalOutput/DigitalOutput.c: 4:     DigitalOutput output;;io/digitalOutput/Digital
      +                          Output.c: 5:     output.set = set;
  8212  002F44  C082  F084         	movff	DigitalOutput_init@set,DigitalOutput_init@output
  8213  002F48  C083  F085         	movff	DigitalOutput_init@set+1,DigitalOutput_init@output+1
  8214  002F4C                     
  8215                           ;io/digitalOutput/DigitalOutput.c: 6:     (*init)();
  8216  002F4C  D802               	call	u4168
  8217  002F4E  EFB4  F017         	goto	u4169
  8218  002F52                     u4168:
  8219  002F52  0005               	push	
  8220  002F54  0100               	movlb	0	; () banked
  8221  002F56  6EFA               	movwf	pclath,c
  8222  002F58  5180               	movf	DigitalOutput_init@init& (0+255),w,b
  8223  002F5A  6EFD               	movwf	tosl,c
  8224  002F5C  5181               	movf	(DigitalOutput_init@init+1)& (0+255),w,b
  8225  002F5E  6EFE               	movwf	tosh,c
  8226  002F60  50F8               	movf	tblptru,w,c
  8227  002F62  6EFF               	movwf	tosu,c
  8228  002F64  50FA               	movf	pclath,w,c
  8229  002F66  0012               	return		;indir
  8230  002F68                     u4169:
  8231  002F68                     
  8232                           ;io/digitalOutput/DigitalOutput.c: 7:     return output;
  8233  002F68  C084  F080         	movff	DigitalOutput_init@output,?_DigitalOutput_init
  8234  002F6C  C085  F081         	movff	DigitalOutput_init@output+1,?_DigitalOutput_init+1
  8235  002F70  C086  F082         	movff	DigitalOutput_init@output+2,?_DigitalOutput_init+2
  8236  002F74  C087  F083         	movff	DigitalOutput_init@output+3,?_DigitalOutput_init+3
  8237  002F78  0012               	return		;funcret
  8238  002F7A                     __end_of_DigitalOutput_init:
  8239                           	opt callstack 0
  8240                           
  8241 ;; *************** function _blueLedInit *****************
  8242 ;; Defined at:
  8243 ;;		line 13 in file "led/LedConfigurator.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      void 
  8250 ;; Registers used:
  8251 ;;		None
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8257 ;;      Params:         0       0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    5
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_LedConfigurator_config
  8268 ;;		_DigitalOutput_init
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text46
  8273  003376                     __ptext46:
  8274                           	opt callstack 0
  8275  003376                     _blueLedInit:
  8276                           	opt callstack 21
  8277  003376                     
  8278                           ;led/LedConfigurator.c: 14:         TRISC3 = 0;
  8279  003376  9694               	bcf	3988,3,c	;volatile
  8280  003378  0012               	return		;funcret
  8281  00337A                     __end_of_blueLedInit:
  8282                           	opt callstack 0
  8283                           
  8284 ;; *************** function _yellowLedInit *****************
  8285 ;; Defined at:
  8286 ;;		line 9 in file "led/LedConfigurator.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      void 
  8293 ;; Registers used:
  8294 ;;		None
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8300 ;;      Params:         0       0       0       0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0
  8303 ;;      Totals:         0       0       0       0       0       0       0
  8304 ;;Total ram usage:        0 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    5
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		_LedConfigurator_config
  8311 ;;		_DigitalOutput_init
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text47
  8316  00337A                     __ptext47:
  8317                           	opt callstack 0
  8318  00337A                     _yellowLedInit:
  8319                           	opt callstack 21
  8320  00337A                     
  8321                           ;led/LedConfigurator.c: 10:         TRISD0 = 0;
  8322  00337A  9095               	bcf	3989,0,c	;volatile
  8323  00337C  0012               	return		;funcret
  8324  00337E                     __end_of_yellowLedInit:
  8325                           	opt callstack 0
  8326                           
  8327 ;; *************** function _redLedInit *****************
  8328 ;; Defined at:
  8329 ;;		line 4 in file "led/LedConfigurator.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;		None
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		None
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8343 ;;      Params:         0       0       0       0       0       0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0
  8346 ;;      Totals:         0       0       0       0       0       0       0
  8347 ;;Total ram usage:        0 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:    5
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_LedConfigurator_config
  8354 ;;		_DigitalOutput_init
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text48
  8359  00337E                     __ptext48:
  8360                           	opt callstack 0
  8361  00337E                     _redLedInit:
  8362                           	opt callstack 21
  8363  00337E                     
  8364                           ;led/LedConfigurator.c: 5:         TRISD1 = 0;
  8365  00337E  9295               	bcf	3989,1,c	;volatile
  8366  003380  0012               	return		;funcret
  8367  003382                     __end_of_redLedInit:
  8368                           	opt callstack 0
  8369                           
  8370 ;; *************** function _zEngineDirInit *****************
  8371 ;; Defined at:
  8372 ;;		line 38 in file "engine/EngineConfigurator.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;		None
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      void 
  8379 ;; Registers used:
  8380 ;;		None
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8386 ;;      Params:         0       0       0       0       0       0       0
  8387 ;;      Locals:         0       0       0       0       0       0       0
  8388 ;;      Temps:          0       0       0       0       0       0       0
  8389 ;;      Totals:         0       0       0       0       0       0       0
  8390 ;;Total ram usage:        0 bytes
  8391 ;; Hardware stack levels used:    1
  8392 ;; Hardware stack levels required when called:    5
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_EngineConfigurator_configEngines
  8397 ;;		_DigitalOutput_init
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text49
  8402  003382                     __ptext49:
  8403                           	opt callstack 0
  8404  003382                     _zEngineDirInit:
  8405                           	opt callstack 21
  8406  003382                     
  8407                           ;engine/EngineConfigurator.c: 39:     TRISB2 = 0;
  8408  003382  9493               	bcf	3987,2,c	;volatile
  8409  003384  0012               	return		;funcret
  8410  003386                     __end_of_zEngineDirInit:
  8411                           	opt callstack 0
  8412                           
  8413 ;; *************** function _yEngineDirInit *****************
  8414 ;; Defined at:
  8415 ;;		line 34 in file "engine/EngineConfigurator.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		None
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8429 ;;      Params:         0       0       0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    5
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_EngineConfigurator_configEngines
  8440 ;;		_DigitalOutput_init
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text50
  8445  003386                     __ptext50:
  8446                           	opt callstack 0
  8447  003386                     _yEngineDirInit:
  8448                           	opt callstack 21
  8449  003386                     
  8450                           ;engine/EngineConfigurator.c: 35:     TRISB1 = 0;
  8451  003386  9293               	bcf	3987,1,c	;volatile
  8452  003388  0012               	return		;funcret
  8453  00338A                     __end_of_yEngineDirInit:
  8454                           	opt callstack 0
  8455                           
  8456 ;; *************** function _xEngineDirInit *****************
  8457 ;; Defined at:
  8458 ;;		line 30 in file "engine/EngineConfigurator.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		None
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8472 ;;      Params:         0       0       0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0
  8475 ;;      Totals:         0       0       0       0       0       0       0
  8476 ;;Total ram usage:        0 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:    5
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_EngineConfigurator_configEngines
  8483 ;;		_DigitalOutput_init
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text51
  8488  00338A                     __ptext51:
  8489                           	opt callstack 0
  8490  00338A                     _xEngineDirInit:
  8491                           	opt callstack 21
  8492  00338A                     
  8493                           ;engine/EngineConfigurator.c: 31:     TRISB0 = 0;
  8494  00338A  9093               	bcf	3987,0,c	;volatile
  8495  00338C  0012               	return		;funcret
  8496  00338E                     __end_of_xEngineDirInit:
  8497                           	opt callstack 0
  8498                           
  8499 ;; *************** function _yEngineMotionInit *****************
  8500 ;; Defined at:
  8501 ;;		line 8 in file "engine/EngineConfigurator.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		None
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8515 ;;      Params:         0       0       0       0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0
  8518 ;;      Totals:         0       0       0       0       0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    5
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_EngineConfigurator_configEngines
  8526 ;;		_DigitalOutput_init
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text52
  8531  00338E                     __ptext52:
  8532                           	opt callstack 0
  8533  00338E                     _yEngineMotionInit:
  8534                           	opt callstack 21
  8535  00338E                     
  8536                           ;engine/EngineConfigurator.c: 9:     TRISC1 = 0;
  8537  00338E  9294               	bcf	3988,1,c	;volatile
  8538  003390  0012               	return		;funcret
  8539  003392                     __end_of_yEngineMotionInit:
  8540                           	opt callstack 0
  8541                           
  8542 ;; *************** function _xEngineMotionInit *****************
  8543 ;; Defined at:
  8544 ;;		line 3 in file "engine/EngineConfigurator.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;		None
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      void 
  8551 ;; Registers used:
  8552 ;;		None
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8558 ;;      Params:         0       0       0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0
  8561 ;;      Totals:         0       0       0       0       0       0       0
  8562 ;;Total ram usage:        0 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:    5
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_EngineConfigurator_configEngines
  8569 ;;		_DigitalOutput_init
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text53
  8574  003392                     __ptext53:
  8575                           	opt callstack 0
  8576  003392                     _xEngineMotionInit:
  8577                           	opt callstack 21
  8578  003392                     
  8579                           ;engine/EngineConfigurator.c: 4:     TRISC0 = 0;
  8580  003392  9094               	bcf	3988,0,c	;volatile
  8581  003394  0012               	return		;funcret
  8582  003396                     __end_of_xEngineMotionInit:
  8583                           	opt callstack 0
  8584                           
  8585 ;; *************** function _zEngineMotionInit *****************
  8586 ;; Defined at:
  8587 ;;		line 13 in file "engine/EngineConfigurator.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		None
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8601 ;;      Params:         0       0       0       0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0
  8604 ;;      Totals:         0       0       0       0       0       0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    5
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_EngineConfigurator_configEngines
  8612 ;;		_DigitalOutput_init
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text54
  8617  003396                     __ptext54:
  8618                           	opt callstack 0
  8619  003396                     _zEngineMotionInit:
  8620                           	opt callstack 21
  8621  003396                     
  8622                           ;engine/EngineConfigurator.c: 14:     TRISC2 = 0;
  8623  003396  9494               	bcf	3988,2,c	;volatile
  8624  003398  0012               	return		;funcret
  8625  00339A                     __end_of_zEngineMotionInit:
  8626                           	opt callstack 0
  8627                           
  8628 ;; *************** function _Button_init *****************
  8629 ;; Defined at:
  8630 ;;		line 9 in file "button/Button.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  input           2    0[BANK0 ] PTR struct DigitalInput
  8633 ;;		 -> button1Input(2), 
  8634 ;;  onPressed       2    2[BANK0 ] PTR FTN()void 
  8635 ;;		 -> Absolute function(1), 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  buton           4    4[BANK0 ] struct Button
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  4    0[BANK0 ] struct Button
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8647 ;;      Params:         0       4       0       0       0       0       0
  8648 ;;      Locals:         0       4       0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0
  8650 ;;      Totals:         0       8       0       0       0       0       0
  8651 ;;Total ram usage:        8 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    5
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_Application_init
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text55
  8662  003174                     __ptext55:
  8663                           	opt callstack 0
  8664  003174                     _Button_init:
  8665                           	opt callstack 24
  8666  003174                     
  8667                           ;button/Button.c: 10:     Button buton;;button/Button.c: 11:     buton.input = input;
  8668  003174  C080  F084         	movff	Button_init@input,Button_init@buton
  8669  003178  C081  F085         	movff	Button_init@input+1,Button_init@buton+1
  8670                           
  8671                           ;button/Button.c: 12:     buton.onPressed = onPressed;
  8672  00317C  C082  F086         	movff	Button_init@onPressed,Button_init@buton+2
  8673  003180  C083  F087         	movff	Button_init@onPressed+1,Button_init@buton+3
  8674  003184                     
  8675                           ;button/Button.c: 13:     return buton;
  8676  003184  C084  F080         	movff	Button_init@buton,?_Button_init
  8677  003188  C085  F081         	movff	Button_init@buton+1,?_Button_init+1
  8678  00318C  C086  F082         	movff	Button_init@buton+2,?_Button_init+2
  8679  003190  C087  F083         	movff	Button_init@buton+3,?_Button_init+3
  8680  003194  0012               	return		;funcret
  8681  003196                     __end_of_Button_init:
  8682                           	opt callstack 0
  8683                           
  8684 ;; *************** function _ButtonConfigurator_config *****************
  8685 ;; Defined at:
  8686 ;;		line 13 in file "button/ButtonConfigurator.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;		None
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8700 ;;      Params:         0       0       0       0       0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0
  8703 ;;      Totals:         0       0       0       0       0       0       0
  8704 ;;Total ram usage:        0 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    7
  8707 ;; This function calls:
  8708 ;;		_DigitalInput_init
  8709 ;; This function is called by:
  8710 ;;		_Application_init
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text56
  8715  003216                     __ptext56:
  8716                           	opt callstack 0
  8717  003216                     _ButtonConfigurator_config:
  8718                           	opt callstack 22
  8719  003216                     
  8720                           ;button/ButtonConfigurator.c: 14:     button1Input = DigitalInput_init(button1Init ,butt
      +                          on1Read);
  8721  003216  0E9A               	movlw	low _button1Init
  8722  003218  0100               	movlb	0	; () banked
  8723  00321A  6F80               	movwf	DigitalInput_init@init& (0+255),b
  8724  00321C  0E33               	movlw	high _button1Init
  8725  00321E  6F81               	movwf	(DigitalInput_init@init+1)& (0+255),b
  8726  003220  0E96               	movlw	low _button1Read
  8727  003222  6F82               	movwf	DigitalInput_init@read& (0+255),b
  8728  003224  0E31               	movlw	high _button1Read
  8729  003226  6F83               	movwf	(DigitalInput_init@read+1)& (0+255),b
  8730  003228  ECD7  F017         	call	_DigitalInput_init	;wreg free
  8731  00322C  C080  F16F         	movff	?_DigitalInput_init,_button1Input
  8732  003230  C081  F170         	movff	?_DigitalInput_init+1,_button1Input+1
  8733  003234  0012               	return		;funcret
  8734  003236                     __end_of_ButtonConfigurator_config:
  8735                           	opt callstack 0
  8736                           
  8737 ;; *************** function _DigitalInput_init *****************
  8738 ;; Defined at:
  8739 ;;		line 4 in file "io/digitalinput/DigitalInput.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  init            2    0[BANK0 ] PTR FTN()void 
  8742 ;;		 -> button1Init(1), 
  8743 ;;  read            2    2[BANK0 ] PTR FTN()int 
  8744 ;;		 -> button1Read(2), 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  input           2    4[BANK0 ] struct DigitalInput
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  2    0[BANK0 ] struct DigitalInput
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8756 ;;      Params:         0       4       0       0       0       0       0
  8757 ;;      Locals:         0       2       0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0
  8759 ;;      Totals:         0       6       0       0       0       0       0
  8760 ;;Total ram usage:        6 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    6
  8763 ;; This function calls:
  8764 ;;		_button1Init
  8765 ;; This function is called by:
  8766 ;;		_ButtonConfigurator_config
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text57
  8771  002FAE                     __ptext57:
  8772                           	opt callstack 0
  8773  002FAE                     _DigitalInput_init:
  8774                           	opt callstack 22
  8775  002FAE                     
  8776                           ;io/digitalinput/DigitalInput.c: 5:     DigitalInput input;;io/digitalinput/DigitalInput
      +                          .c: 6:     (*init)();
  8777  002FAE  D802               	call	u4688
  8778  002FB0  EFE5  F017         	goto	u4689
  8779  002FB4                     u4688:
  8780  002FB4  0005               	push	
  8781  002FB6  0100               	movlb	0	; () banked
  8782  002FB8  6EFA               	movwf	pclath,c
  8783  002FBA  5180               	movf	DigitalInput_init@init& (0+255),w,b
  8784  002FBC  6EFD               	movwf	tosl,c
  8785  002FBE  5181               	movf	(DigitalInput_init@init+1)& (0+255),w,b
  8786  002FC0  6EFE               	movwf	tosh,c
  8787  002FC2  50F8               	movf	tblptru,w,c
  8788  002FC4  6EFF               	movwf	tosu,c
  8789  002FC6  50FA               	movf	pclath,w,c
  8790  002FC8  0012               	return		;indir
  8791  002FCA                     u4689:
  8792  002FCA                     
  8793                           ;io/digitalinput/DigitalInput.c: 7:     input.read = read;
  8794  002FCA  C082  F084         	movff	DigitalInput_init@read,DigitalInput_init@input
  8795  002FCE  C083  F085         	movff	DigitalInput_init@read+1,DigitalInput_init@input+1
  8796  002FD2                     
  8797                           ;io/digitalinput/DigitalInput.c: 9:     return input;
  8798  002FD2  C084  F080         	movff	DigitalInput_init@input,?_DigitalInput_init
  8799  002FD6  C085  F081         	movff	DigitalInput_init@input+1,?_DigitalInput_init+1
  8800  002FDA  0012               	return		;funcret
  8801  002FDC                     __end_of_DigitalInput_init:
  8802                           	opt callstack 0
  8803                           
  8804 ;; *************** function _button1Init *****************
  8805 ;; Defined at:
  8806 ;;		line 4 in file "button/ButtonConfigurator.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;		None
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		None
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8820 ;;      Params:         0       0       0       0       0       0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0
  8823 ;;      Totals:         0       0       0       0       0       0       0
  8824 ;;Total ram usage:        0 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:    5
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_ButtonConfigurator_config
  8831 ;;		_DigitalInput_init
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text58
  8836  00339A                     __ptext58:
  8837                           	opt callstack 0
  8838  00339A                     _button1Init:
  8839                           	opt callstack 22
  8840  00339A                     
  8841                           ;button/ButtonConfigurator.c: 5:     TRISD2 = 1;
  8842  00339A  8495               	bsf	3989,2,c	;volatile
  8843  00339C  0012               	return		;funcret
  8844  00339E                     __end_of_button1Init:
  8845                           	opt callstack 0
  8846                           
  8847 ;; *************** function _ISR *****************
  8848 ;; Defined at:
  8849 ;;		line 114 in file "application/Application.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  tmp            20   29[COMRAM] unsigned char [20]
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8863 ;;      Params:         0       0       0       0       0       0       0
  8864 ;;      Locals:        20       0       0       0       0       0       0
  8865 ;;      Temps:         14       0       0       0       0       0       0
  8866 ;;      Totals:        34       0       0       0       0       0       0
  8867 ;;Total ram usage:       34 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; Hardware stack levels required when called:    4
  8870 ;; This function calls:
  8871 ;;		_USARTReadString
  8872 ;;		i2_Led_open
  8873 ;;		i2_USARTWriteLine
  8874 ;; This function is called by:
  8875 ;;		Interrupt level 2
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	intcode
  8880  000008                     __pintcode:
  8881                           	opt callstack 0
  8882  000008                     _ISR:
  8883                           	opt callstack 20
  8884                           
  8885                           ;incstack = 0
  8886  000008  8260               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8887  00000A  EDB6  F012         	call	int_func,f	;refresh shadow registers
  8888                           
  8889                           	psect	intcode_body
  8890  00256C                     __pintcode_body:
  8891                           	opt callstack 20
  8892  00256C                     int_func:
  8893                           	opt callstack 20
  8894  00256C  0006               	pop		; remove dummy address from shadow register refresh
  8895  00256E  CFFA F010          	movff	pclath,??_ISR
  8896  002572  CFFB F011          	movff	pclatu,??_ISR+1
  8897  002576  CFE9 F012          	movff	fsr0l,??_ISR+2
  8898  00257A  CFEA F013          	movff	fsr0h,??_ISR+3
  8899  00257E  CFE1 F014          	movff	fsr1l,??_ISR+4
  8900  002582  CFE2 F015          	movff	fsr1h,??_ISR+5
  8901  002586  CFD9 F016          	movff	fsr2l,??_ISR+6
  8902  00258A  CFDA F017          	movff	fsr2h,??_ISR+7
  8903  00258E  CFF3 F018          	movff	prodl,??_ISR+8
  8904  002592  CFF4 F019          	movff	prodh,??_ISR+9
  8905  002596  CFF6 F01A          	movff	tblptrl,??_ISR+10
  8906  00259A  CFF7 F01B          	movff	tblptrh,??_ISR+11
  8907  00259E  CFF8 F01C          	movff	tblptru,??_ISR+12
  8908  0025A2  CFF5 F01D          	movff	tablat,??_ISR+13
  8909  0025A6                     
  8910                           ;application/Application.c: 116:     if (usart.isDataReady)
  8911  0025A6  0101               	movlb	1	; () banked
  8912  0025A8  514F               	movf	_usart& (0+255),w,b
  8913  0025AA  1150               	iorwf	(_usart+1)& (0+255),w,b
  8914  0025AC  B4D8               	btfsc	status,2,c
  8915  0025AE  EFDB  F012         	goto	i2u570_41
  8916  0025B2  EFDD  F012         	goto	i2u570_40
  8917  0025B6                     i2u570_41:
  8918  0025B6  EF16  F013         	goto	i2l78
  8919  0025BA                     i2u570_40:
  8920  0025BA                     
  8921                           ; BSR set to: 1
  8922                           ;application/Application.c: 117:     {;application/Application.c: 119:         char tmp[
      +                          20] = "";
  8923  0025BA  EE21  F000         	lfsr	2,ISR@F3535
  8924  0025BE  EE10  F01E         	lfsr	1,ISR@tmp
  8925  0025C2  0E13               	movlw	19
  8926  0025C4                     i2u571_41:
  8927  0025C4  CFDB FFE3          	movff	plusw2,plusw1
  8928  0025C8  06E8               	decf	wreg,f,c
  8929  0025CA  E2FC               	bc	i2u571_41
  8930  0025CC                     
  8931                           ; BSR set to: 1
  8932                           ;application/Application.c: 120:         usart.readString(tmp, 20);
  8933  0025CC  0E1E               	movlw	low ISR@tmp
  8934  0025CE  6E04               	movwf	USARTReadString@buf^0,c
  8935  0025D0  0E00               	movlw	high ISR@tmp
  8936  0025D2  6E05               	movwf	(USARTReadString@buf+1)^0,c
  8937  0025D4  0E00               	movlw	0
  8938  0025D6  6E07               	movwf	(USARTReadString@max_length+1)^0,c
  8939  0025D8  0E14               	movlw	20
  8940  0025DA  6E06               	movwf	USARTReadString@max_length^0,c
  8941  0025DC  EE21  F053         	lfsr	2,_usart+4
  8942  0025E0  D802               	call	i2u572_48
  8943  0025E2  EFFD  F012         	goto	i2u572_49
  8944  0025E6                     i2u572_48:
  8945  0025E6  0005               	push	
  8946  0025E8  6EFA               	movwf	pclath,c
  8947  0025EA  50DE               	movf	postinc2,w,c
  8948  0025EC  6EFD               	movwf	tosl,c
  8949  0025EE  50DE               	movf	postinc2,w,c
  8950  0025F0  6EFE               	movwf	tosh,c
  8951  0025F2  50F8               	movf	tblptru,w,c
  8952  0025F4  6EFF               	movwf	tosu,c
  8953  0025F6  50FA               	movf	pclath,w,c
  8954  0025F8  0012               	return		;indir
  8955  0025FA                     i2u572_49:
  8956  0025FA                     
  8957                           ;application/Application.c: 121:         usart.writeLine(tmp);
  8958  0025FA  0E1E               	movlw	low ISR@tmp
  8959  0025FC  6E03               	movwf	i2USARTWriteLine@ln^0,c
  8960  0025FE  0E00               	movlw	high ISR@tmp
  8961  002600  6E04               	movwf	(i2USARTWriteLine@ln+1)^0,c
  8962  002602  EE21  F059         	lfsr	2,_usart+10
  8963  002606  D802               	call	i2u573_48
  8964  002608  EF10  F013         	goto	i2u573_49
  8965  00260C                     i2u573_48:
  8966  00260C  0005               	push	
  8967  00260E  6EFA               	movwf	pclath,c
  8968  002610  50DE               	movf	postinc2,w,c
  8969  002612  6EFD               	movwf	tosl,c
  8970  002614  50DE               	movf	postinc2,w,c
  8971  002616  6EFE               	movwf	tosh,c
  8972  002618  50F8               	movf	tblptru,w,c
  8973  00261A  6EFF               	movwf	tosu,c
  8974  00261C  50FA               	movf	pclath,w,c
  8975  00261E  0012               	return		;indir
  8976  002620                     i2u573_49:
  8977  002620                     
  8978                           ;application/Application.c: 124:         Led_open(&yellowLed);
  8979  002620  0E44               	movlw	low _yellowLed
  8980  002622  6E0B               	movwf	i2Led_open@led^0,c
  8981  002624  0E00               	movlw	high _yellowLed
  8982  002626  6E0C               	movwf	(i2Led_open@led+1)^0,c
  8983  002628  EC46  F018         	call	i2_Led_open	;wreg free
  8984  00262C                     i2l78:
  8985  00262C  C01D  FFF5         	movff	??_ISR+13,tablat
  8986  002630  C01C  FFF8         	movff	??_ISR+12,tblptru
  8987  002634  C01B  FFF7         	movff	??_ISR+11,tblptrh
  8988  002638  C01A  FFF6         	movff	??_ISR+10,tblptrl
  8989  00263C  C019  FFF4         	movff	??_ISR+9,prodh
  8990  002640  C018  FFF3         	movff	??_ISR+8,prodl
  8991  002644  C017  FFDA         	movff	??_ISR+7,fsr2h
  8992  002648  C016  FFD9         	movff	??_ISR+6,fsr2l
  8993  00264C  C015  FFE2         	movff	??_ISR+5,fsr1h
  8994  002650  C014  FFE1         	movff	??_ISR+4,fsr1l
  8995  002654  C013  FFEA         	movff	??_ISR+3,fsr0h
  8996  002658  C012  FFE9         	movff	??_ISR+2,fsr0l
  8997  00265C  C011  FFFB         	movff	??_ISR+1,pclatu
  8998  002660  C010  FFFA         	movff	??_ISR,pclath
  8999  002664  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9000  002666  0011               	retfie		f
  9001  002668                     __end_of_ISR:
  9002                           	opt callstack 0
  9003                           
  9004 ;; *************** function i2_USARTWriteLine *****************
  9005 ;; Defined at:
  9006 ;;		line 93 in file "usart/UsartFunctions.h"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  ln              2    2[COMRAM] PTR const unsigned char 
  9009 ;;		 -> ISR@tmp(20), STR_1(10), 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9021 ;;      Params:         2       0       0       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0
  9024 ;;      Totals:         2       0       0       0       0       0       0
  9025 ;;Total ram usage:        2 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    1
  9028 ;; This function calls:
  9029 ;;		i2_USARTWriteString
  9030 ;; This function is called by:
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text60
  9035  003286                     __ptext60:
  9036                           	opt callstack 0
  9037  003286                     i2_USARTWriteLine:
  9038                           	opt callstack 22
  9039  003286                     
  9040                           ;usart/UsartFunctions.h: 94:     USARTWriteString(ln);
  9041  003286  C003  F001         	movff	i2USARTWriteLine@ln,i2USARTWriteString@str
  9042  00328A  C004  F002         	movff	i2USARTWriteLine@ln+1,i2USARTWriteString@str+1
  9043  00328E  EC83  F016         	call	i2_USARTWriteString	;wreg free
  9044                           
  9045                           ;usart/UsartFunctions.h: 95:     USARTWriteString("\r\n");
  9046  003292  0EA4               	movlw	low STR_2
  9047  003294  6E01               	movwf	i2USARTWriteString@str^0,c
  9048  003296  0E06               	movlw	high STR_2
  9049  003298  6E02               	movwf	(i2USARTWriteString@str+1)^0,c
  9050  00329A  EC83  F016         	call	i2_USARTWriteString	;wreg free
  9051  00329E  0012               	return		;funcret
  9052  0032A0                     __end_ofi2_USARTWriteLine:
  9053                           	opt callstack 0
  9054                           
  9055 ;; *************** function i2_USARTWriteString *****************
  9056 ;; Defined at:
  9057 ;;		line 71 in file "usart/UsartFunctions.h"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  str             2    0[COMRAM] PTR const unsigned char 
  9060 ;;		 -> STR_2(3), ISR@tmp(20), STR_1(10), 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9072 ;;      Params:         2       0       0       0       0       0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0
  9075 ;;      Totals:         2       0       0       0       0       0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		i2_USARTWriteLine
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text61
  9086  002D06                     __ptext61:
  9087                           	opt callstack 0
  9088  002D06                     i2_USARTWriteString:
  9089                           	opt callstack 22
  9090  002D06                     
  9091                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  9092  002D06  EF9F  F016         	goto	i2l3850
  9093  002D0A                     i2l425:
  9094  002D0A  A89E               	btfss	3998,4,c	;volatile
  9095  002D0C  EF8A  F016         	goto	i2u375_41
  9096  002D10  EF8C  F016         	goto	i2u375_40
  9097  002D14                     i2u375_41:
  9098  002D14  EF85  F016         	goto	i2l425
  9099  002D18                     i2u375_40:
  9100  002D18                     
  9101                           ;usart/UsartFunctions.h: 77:         TXREG = (*str);
  9102  002D18  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  9103  002D1C  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  9104  002D20  6AF8               	clrf	tblptru,c
  9105  002D22  0E05               	movlw	(high __ramtop+-1)
  9106  002D24  64F7               	cpfsgt	tblptrh,c
  9107  002D26  D003               	bra	i2u376_47
  9108  002D28  0008               	tblrd		*
  9109  002D2A  50F5               	movf	tablat,w,c
  9110  002D2C  D005               	bra	i2u376_40
  9111  002D2E                     i2u376_47:
  9112  002D2E  CFF6 FFE9          	movff	tblptrl,fsr0l
  9113  002D32  CFF7 FFEA          	movff	tblptrh,fsr0h
  9114  002D36  50EF               	movf	indf0,w,c
  9115  002D38                     i2u376_40:
  9116  002D38  6EAD               	movwf	173,c	;volatile
  9117  002D3A                     
  9118                           ;usart/UsartFunctions.h: 80:         str++;
  9119  002D3A  4A01               	infsnz	i2USARTWriteString@str^0,f,c
  9120  002D3C  2A02               	incf	(i2USARTWriteString@str+1)^0,f,c
  9121  002D3E                     i2l3850:
  9122                           
  9123                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  9124  002D3E  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  9125  002D42  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  9126  002D46  6AF8               	clrf	tblptru,c
  9127  002D48  0E05               	movlw	(high __ramtop+-1)
  9128  002D4A  64F7               	cpfsgt	tblptrh,c
  9129  002D4C  D003               	bra	i2u377_47
  9130  002D4E  0008               	tblrd		*
  9131  002D50  50F5               	movf	tablat,w,c
  9132  002D52  D005               	bra	i2u377_40
  9133  002D54                     i2u377_47:
  9134  002D54  CFF6 FFE9          	movff	tblptrl,fsr0l
  9135  002D58  CFF7 FFEA          	movff	tblptrh,fsr0h
  9136  002D5C  50EF               	movf	indf0,w,c
  9137  002D5E                     i2u377_40:
  9138  002D5E  0900               	iorlw	0
  9139  002D60  A4D8               	btfss	status,2,c
  9140  002D62  EFB5  F016         	goto	i2u378_41
  9141  002D66  EFB7  F016         	goto	i2u378_40
  9142  002D6A                     i2u378_41:
  9143  002D6A  EF85  F016         	goto	i2l425
  9144  002D6E                     i2u378_40:
  9145  002D6E  0012               	return		;funcret
  9146  002D70                     __end_ofi2_USARTWriteString:
  9147                           	opt callstack 0
  9148                           
  9149 ;; *************** function i2_Led_open *****************
  9150 ;; Defined at:
  9151 ;;		line 11 in file "led/Led.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  led             2   10[COMRAM] PTR struct Led
  9154 ;;		 -> blueLed(4), redLed(4), yellowLed(4), 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9166 ;;      Params:         2       0       0       0       0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0
  9169 ;;      Totals:         2       0       0       0       0       0       0
  9170 ;;Total ram usage:        2 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:    3
  9173 ;; This function calls:
  9174 ;;		i2_DigitalOutput_open
  9175 ;; This function is called by:
  9176 ;;		_ISR
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text62
  9181  00308C                     __ptext62:
  9182                           	opt callstack 0
  9183  00308C                     i2_Led_open:
  9184                           	opt callstack 20
  9185  00308C                     
  9186                           ;led/Led.c: 12:     led->isOpen = 1;
  9187  00308C  EE20 F002          	lfsr	2,2
  9188  003090  500B               	movf	i2Led_open@led^0,w,c
  9189  003092  26D9               	addwf	fsr2l,f,c
  9190  003094  500C               	movf	(i2Led_open@led+1)^0,w,c
  9191  003096  22DA               	addwfc	fsr2h,f,c
  9192  003098  0E01               	movlw	1
  9193  00309A  6EDE               	movwf	postinc2,c
  9194  00309C  0E00               	movlw	0
  9195  00309E  6EDD               	movwf	postdec2,c
  9196  0030A0                     
  9197                           ;led/Led.c: 13:     DigitalOutput_open(led->output);
  9198  0030A0  C00B  FFD9         	movff	i2Led_open@led,fsr2l
  9199  0030A4  C00C  FFDA         	movff	i2Led_open@led+1,fsr2h
  9200  0030A8  CFDE F009          	movff	postinc2,i2DigitalOutput_open@output
  9201  0030AC  CFDD F00A          	movff	postdec2,i2DigitalOutput_open@output+1
  9202  0030B0  EC5B  F018         	call	i2_DigitalOutput_open	;wreg free
  9203  0030B4  0012               	return		;funcret
  9204  0030B6                     __end_ofi2_Led_open:
  9205                           	opt callstack 0
  9206                           
  9207 ;; *************** function i2_DigitalOutput_open *****************
  9208 ;; Defined at:
  9209 ;;		line 11 in file "io/digitalOutput/DigitalOutput.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  output          2    8[COMRAM] PTR struct DigitalOutput
  9212 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  9213 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), redLedOutput(4), 
  9214 ;;		 -> yellowLedOutput(4), 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9226 ;;      Params:         2       0       0       0       0       0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0
  9229 ;;      Totals:         2       0       0       0       0       0       0
  9230 ;;Total ram usage:        2 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    2
  9233 ;; This function calls:
  9234 ;;		i2_DigitalOutput_set
  9235 ;; This function is called by:
  9236 ;;		i2_Led_open
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text63
  9241  0030B6                     __ptext63:
  9242                           	opt callstack 0
  9243  0030B6                     i2_DigitalOutput_open:
  9244                           	opt callstack 20
  9245  0030B6                     
  9246                           ;io/digitalOutput/DigitalOutput.c: 12:     output->isHigh = 1;
  9247  0030B6  EE20 F002          	lfsr	2,2
  9248  0030BA  5009               	movf	i2DigitalOutput_open@output^0,w,c
  9249  0030BC  26D9               	addwf	fsr2l,f,c
  9250  0030BE  500A               	movf	(i2DigitalOutput_open@output+1)^0,w,c
  9251  0030C0  22DA               	addwfc	fsr2h,f,c
  9252  0030C2  0E01               	movlw	1
  9253  0030C4  6EDE               	movwf	postinc2,c
  9254  0030C6  0E00               	movlw	0
  9255  0030C8  6EDD               	movwf	postdec2,c
  9256  0030CA                     
  9257                           ;io/digitalOutput/DigitalOutput.c: 13:     DigitalOutput_set(output,1);
  9258  0030CA  C009  F005         	movff	i2DigitalOutput_open@output,i2DigitalOutput_set@outputable
  9259  0030CE  C00A  F006         	movff	i2DigitalOutput_open@output+1,i2DigitalOutput_set@outputable+1
  9260  0030D2  0E00               	movlw	0
  9261  0030D4  6E08               	movwf	(i2DigitalOutput_set@value+1)^0,c
  9262  0030D6  0E01               	movlw	1
  9263  0030D8  6E07               	movwf	i2DigitalOutput_set@value^0,c
  9264  0030DA  ECBD  F017         	call	i2_DigitalOutput_set	;wreg free
  9265  0030DE  0012               	return		;funcret
  9266  0030E0                     __end_ofi2_DigitalOutput_open:
  9267                           	opt callstack 0
  9268                           
  9269 ;; *************** function i2_DigitalOutput_set *****************
  9270 ;; Defined at:
  9271 ;;		line 23 in file "io/digitalOutput/DigitalOutput.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  outputable      2    4[COMRAM] PTR struct DigitalOutput
  9274 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  9275 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), redLedOutput(4), 
  9276 ;;		 -> yellowLedOutput(4), 
  9277 ;;  value           2    6[COMRAM] int 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9289 ;;      Params:         4       0       0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0
  9292 ;;      Totals:         4       0       0       0       0       0       0
  9293 ;;Total ram usage:        4 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    1
  9296 ;; This function calls:
  9297 ;;		i2_blueLedSet
  9298 ;;		i2_redLedSet
  9299 ;;		i2_xEngineDirSet
  9300 ;;		i2_xEngineMotionSet
  9301 ;;		i2_yellowLedSet
  9302 ;; This function is called by:
  9303 ;;		i2_DigitalOutput_open
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text64
  9308  002F7A                     __ptext64:
  9309                           	opt callstack 0
  9310  002F7A                     i2_DigitalOutput_set:
  9311                           	opt callstack 20
  9312  002F7A                     
  9313                           ;io/digitalOutput/DigitalOutput.c: 24:     outputable->set(&outputable,value);
  9314  002F7A  0E05               	movlw	low i2DigitalOutput_set@outputable
  9315  002F7C  6E01               	movwf	i2blueLedSet@button^0,c
  9316  002F7E  0E00               	movlw	high i2DigitalOutput_set@outputable
  9317  002F80  6E02               	movwf	(i2blueLedSet@button+1)^0,c
  9318  002F82  C007  F003         	movff	i2DigitalOutput_set@value,i2blueLedSet@value
  9319  002F86  C008  F004         	movff	i2DigitalOutput_set@value+1,i2blueLedSet@value+1
  9320  002F8A  C005  FFD9         	movff	i2DigitalOutput_set@outputable,fsr2l
  9321  002F8E  C006  FFDA         	movff	i2DigitalOutput_set@outputable+1,fsr2h
  9322  002F92  D802               	call	i2u541_48
  9323  002F94  EFD6  F017         	goto	i2u541_49
  9324  002F98                     i2u541_48:
  9325  002F98  0005               	push	
  9326  002F9A  6EFA               	movwf	pclath,c
  9327  002F9C  50DE               	movf	postinc2,w,c
  9328  002F9E  6EFD               	movwf	tosl,c
  9329  002FA0  50DE               	movf	postinc2,w,c
  9330  002FA2  6EFE               	movwf	tosh,c
  9331  002FA4  50F8               	movf	tblptru,w,c
  9332  002FA6  6EFF               	movwf	tosu,c
  9333  002FA8  50FA               	movf	pclath,w,c
  9334  002FAA  0012               	return		;indir
  9335  002FAC                     i2u541_49:
  9336  002FAC  0012               	return		;funcret
  9337  002FAE                     __end_ofi2_DigitalOutput_set:
  9338                           	opt callstack 0
  9339                           
  9340 ;; *************** function i2_blueLedSet *****************
  9341 ;; Defined at:
  9342 ;;		line 28 in file "led/LedConfigurator.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  button          2    0[COMRAM] PTR struct DigitalOutput
  9345 ;;		 -> i2DigitalOutput_set@outputable(2), DigitalOutput_set@outputable(2), 
  9346 ;;  value           2    2[COMRAM] int 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		None
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9358 ;;      Params:         4       0       0       0       0       0       0
  9359 ;;      Locals:         0       0       0       0       0       0       0
  9360 ;;      Temps:          0       0       0       0       0       0       0
  9361 ;;      Totals:         4       0       0       0       0       0       0
  9362 ;;Total ram usage:        4 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; This function calls:
  9365 ;;		Nothing
  9366 ;; This function is called by:
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text65
  9371  003332                     __ptext65:
  9372                           	opt callstack 0
  9373  003332                     i2_blueLedSet:
  9374                           	opt callstack 20
  9375  003332                     
  9376                           ;led/LedConfigurator.c: 29:         LATCbits.LATC3 = value;
  9377  003332  B003               	btfsc	i2blueLedSet@value^0,0,c
  9378  003334  D002               	bra	i2u268_45
  9379  003336  968B               	bcf	139,3,c	;volatile
  9380  003338  D001               	bra	i2u268_46
  9381  00333A                     i2u268_45:
  9382  00333A  868B               	bsf	139,3,c	;volatile
  9383  00333C                     i2u268_46:
  9384  00333C  0012               	return		;funcret
  9385  00333E                     __end_ofi2_blueLedSet:
  9386                           	opt callstack 0
  9387                           
  9388 ;; *************** function i2_redLedSet *****************
  9389 ;; Defined at:
  9390 ;;		line 17 in file "led/LedConfigurator.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  button          2    0[COMRAM] PTR struct DigitalOutput
  9393 ;;		 -> DigitalOutput_set@outputable(2), 
  9394 ;;  value           2    2[COMRAM] int 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		None
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9406 ;;      Params:         4       0       0       0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0
  9409 ;;      Totals:         4       0       0       0       0       0       0
  9410 ;;Total ram usage:        4 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           	psect	text66
  9419  00333E                     __ptext66:
  9420                           	opt callstack 0
  9421  00333E                     i2_redLedSet:
  9422                           	opt callstack 20
  9423  00333E                     
  9424                           ;led/LedConfigurator.c: 18:         LATDbits.LATD1 = value;
  9425  00333E  B003               	btfsc	i2redLedSet@value^0,0,c
  9426  003340  D002               	bra	i2u266_45
  9427  003342  928C               	bcf	140,1,c	;volatile
  9428  003344  D001               	bra	i2u266_46
  9429  003346                     i2u266_45:
  9430  003346  828C               	bsf	140,1,c	;volatile
  9431  003348                     i2u266_46:
  9432  003348  0012               	return		;funcret
  9433  00334A                     __end_ofi2_redLedSet:
  9434                           	opt callstack 0
  9435                           
  9436 ;; *************** function i2_xEngineDirSet *****************
  9437 ;; Defined at:
  9438 ;;		line 42 in file "engine/EngineConfigurator.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  engine          2    0[COMRAM] PTR struct DigitalOutput
  9441 ;;		 -> DigitalOutput_set@outputable(2), 
  9442 ;;  value           2    2[COMRAM] int 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		None
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9454 ;;      Params:         4       0       0       0       0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0
  9457 ;;      Totals:         4       0       0       0       0       0       0
  9458 ;;Total ram usage:        4 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; This function calls:
  9461 ;;		Nothing
  9462 ;; This function is called by:
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text67
  9467  00334A                     __ptext67:
  9468                           	opt callstack 0
  9469  00334A                     i2_xEngineDirSet:
  9470                           	opt callstack 20
  9471  00334A                     
  9472                           ;engine/EngineConfigurator.c: 43:     LATBbits.LATB0 = value;
  9473  00334A  B003               	btfsc	i2xEngineDirSet@value^0,0,c
  9474  00334C  D002               	bra	i2u265_45
  9475  00334E  908A               	bcf	138,0,c	;volatile
  9476  003350  D001               	bra	i2u265_46
  9477  003352                     i2u265_45:
  9478  003352  808A               	bsf	138,0,c	;volatile
  9479  003354                     i2u265_46:
  9480  003354  0012               	return		;funcret
  9481  003356                     __end_ofi2_xEngineDirSet:
  9482                           	opt callstack 0
  9483                           
  9484 ;; *************** function i2_xEngineMotionSet *****************
  9485 ;; Defined at:
  9486 ;;		line 18 in file "engine/EngineConfigurator.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  engine          2    0[COMRAM] PTR struct DigitalOutput
  9489 ;;		 -> DigitalOutput_set@outputable(2), 
  9490 ;;  value           2    2[COMRAM] int 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      void 
  9495 ;; Registers used:
  9496 ;;		None
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9502 ;;      Params:         4       0       0       0       0       0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0
  9504 ;;      Temps:          0       0       0       0       0       0       0
  9505 ;;      Totals:         4       0       0       0       0       0       0
  9506 ;;Total ram usage:        4 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text68
  9515  003356                     __ptext68:
  9516                           	opt callstack 0
  9517  003356                     i2_xEngineMotionSet:
  9518                           	opt callstack 20
  9519  003356                     
  9520                           ;engine/EngineConfigurator.c: 19:     LATCbits.LATC0 = value;
  9521  003356  B003               	btfsc	i2xEngineMotionSet@value^0,0,c
  9522  003358  D002               	bra	i2u264_45
  9523  00335A  908B               	bcf	139,0,c	;volatile
  9524  00335C  D001               	bra	i2u264_46
  9525  00335E                     i2u264_45:
  9526  00335E  808B               	bsf	139,0,c	;volatile
  9527  003360                     i2u264_46:
  9528  003360  0012               	return		;funcret
  9529  003362                     __end_ofi2_xEngineMotionSet:
  9530                           	opt callstack 0
  9531                           
  9532 ;; *************** function i2_yellowLedSet *****************
  9533 ;; Defined at:
  9534 ;;		line 23 in file "led/LedConfigurator.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  button          2    0[COMRAM] PTR struct DigitalOutput
  9537 ;;		 -> DigitalOutput_set@outputable(2), 
  9538 ;;  value           2    2[COMRAM] int 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		None
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9550 ;;      Params:         4       0       0       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0
  9553 ;;      Totals:         4       0       0       0       0       0       0
  9554 ;;Total ram usage:        4 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           	psect	text69
  9563  003362                     __ptext69:
  9564                           	opt callstack 0
  9565  003362                     i2_yellowLedSet:
  9566                           	opt callstack 20
  9567  003362                     
  9568                           ;led/LedConfigurator.c: 24:         LATDbits.LATD0 = value;
  9569  003362  B003               	btfsc	i2yellowLedSet@value^0,0,c
  9570  003364  D002               	bra	i2u267_45
  9571  003366  908C               	bcf	140,0,c	;volatile
  9572  003368  D001               	bra	i2u267_46
  9573  00336A                     i2u267_45:
  9574  00336A  808C               	bsf	140,0,c	;volatile
  9575  00336C                     i2u267_46:
  9576  00336C  0012               	return		;funcret
  9577  00336E                     __end_ofi2_yellowLedSet:
  9578                           	opt callstack 0
  9579                           
  9580 ;; *************** function _USARTReadString *****************
  9581 ;; Defined at:
  9582 ;;		line 40 in file "usart/UsartFunctions.h"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  buf             2    3[COMRAM] PTR unsigned char 
  9585 ;;		 -> ISR@tmp(20), 
  9586 ;;  max_length      2    5[COMRAM] int 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  i               2   12[COMRAM] int 
  9589 ;;  tmp             1   14[COMRAM] unsigned char 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  2    3[COMRAM] int 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9599 ;;      Params:         4       0       0       0       0       0       0
  9600 ;;      Locals:         3       0       0       0       0       0       0
  9601 ;;      Temps:          5       0       0       0       0       0       0
  9602 ;;      Totals:        12       0       0       0       0       0       0
  9603 ;;Total ram usage:       12 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    2
  9606 ;; This function calls:
  9607 ;;		_USARTReadChar
  9608 ;; This function is called by:
  9609 ;;		_setupFunctions
  9610 ;;		_ISR
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text70
  9615  0028F4                     __ptext70:
  9616                           	opt callstack 0
  9617  0028F4                     _USARTReadString:
  9618                           	opt callstack 21
  9619  0028F4                     
  9620                           ;usart/UsartFunctions.h: 41:     int i = 0;
  9621  0028F4  0E00               	movlw	0
  9622  0028F6  6E0E               	movwf	(USARTReadString@i+1)^0,c
  9623  0028F8  0E00               	movlw	0
  9624  0028FA  6E0D               	movwf	USARTReadString@i^0,c
  9625                           
  9626                           ;usart/UsartFunctions.h: 43:     for (i = 0; i < max_length - 1; i++) {
  9627  0028FC  0E00               	movlw	0
  9628  0028FE  6E0E               	movwf	(USARTReadString@i+1)^0,c
  9629  002900  0E00               	movlw	0
  9630  002902  6E0D               	movwf	USARTReadString@i^0,c
  9631  002904  EFAD  F014         	goto	i2l3906
  9632  002908                     i2l3894:
  9633                           
  9634                           ;usart/UsartFunctions.h: 44:         tmp = USARTReadChar();
  9635  002908  EC50  F019         	call	_USARTReadChar	;wreg free
  9636  00290C  6E0F               	movwf	USARTReadString@tmp^0,c
  9637  00290E                     
  9638                           ;usart/UsartFunctions.h: 46:         if (tmp == '\0' || tmp == '\n' || tmp == '\r') {
  9639  00290E  500F               	movf	USARTReadString@tmp^0,w,c
  9640  002910  B4D8               	btfsc	status,2,c
  9641  002912  EF8D  F014         	goto	i2u382_41
  9642  002916  EF8F  F014         	goto	i2u382_40
  9643  00291A                     i2u382_41:
  9644  00291A  EFC8  F014         	goto	i2l3908
  9645  00291E                     i2u382_40:
  9646  00291E  0E0A               	movlw	10
  9647  002920  180F               	xorwf	USARTReadString@tmp^0,w,c
  9648  002922  B4D8               	btfsc	status,2,c
  9649  002924  EF96  F014         	goto	i2u383_41
  9650  002928  EF98  F014         	goto	i2u383_40
  9651  00292C                     i2u383_41:
  9652  00292C  EFC8  F014         	goto	i2l3908
  9653  002930                     i2u383_40:
  9654  002930  0E0D               	movlw	13
  9655  002932  180F               	xorwf	USARTReadString@tmp^0,w,c
  9656  002934  A4D8               	btfss	status,2,c
  9657  002936  EF9F  F014         	goto	i2u384_41
  9658  00293A  EFA1  F014         	goto	i2u384_40
  9659  00293E                     i2u384_41:
  9660  00293E  EFA3  F014         	goto	i2l3902
  9661  002942                     i2u384_40:
  9662  002942  EFC8  F014         	goto	i2l3908
  9663  002946                     i2l3902:
  9664                           
  9665                           ;usart/UsartFunctions.h: 49:         buf[i] = tmp;
  9666  002946  500D               	movf	USARTReadString@i^0,w,c
  9667  002948  2404               	addwf	USARTReadString@buf^0,w,c
  9668  00294A  6ED9               	movwf	fsr2l,c
  9669  00294C  500E               	movf	(USARTReadString@i+1)^0,w,c
  9670  00294E  2005               	addwfc	(USARTReadString@buf+1)^0,w,c
  9671  002950  6EDA               	movwf	fsr2h,c
  9672  002952  C00F  FFDF         	movff	USARTReadString@tmp,indf2
  9673  002956                     
  9674                           ;usart/UsartFunctions.h: 50:     }
  9675  002956  4A0D               	infsnz	USARTReadString@i^0,f,c
  9676  002958  2A0E               	incf	(USARTReadString@i+1)^0,f,c
  9677  00295A                     i2l3906:
  9678  00295A  0EFF               	movlw	255
  9679  00295C  6E08               	movwf	??_USARTReadString^0,c
  9680  00295E  0EFF               	movlw	255
  9681  002960  6E09               	movwf	(??_USARTReadString+1)^0,c
  9682  002962  C006  F00A         	movff	USARTReadString@max_length,??_USARTReadString+2
  9683  002966  C007  F00B         	movff	USARTReadString@max_length+1,??_USARTReadString+3
  9684  00296A  5008               	movf	??_USARTReadString^0,w,c
  9685  00296C  260A               	addwf	(??_USARTReadString+2)^0,f,c
  9686  00296E  5009               	movf	(??_USARTReadString+1)^0,w,c
  9687  002970  220B               	addwfc	(??_USARTReadString+3)^0,f,c
  9688  002972  500A               	movf	(??_USARTReadString+2)^0,w,c
  9689  002974  5C0D               	subwf	USARTReadString@i^0,w,c
  9690  002976  500E               	movf	(USARTReadString@i+1)^0,w,c
  9691  002978  0A80               	xorlw	128
  9692  00297A  6E0C               	movwf	(??_USARTReadString+4)^0,c
  9693  00297C  500B               	movf	(??_USARTReadString+3)^0,w,c
  9694  00297E  0A80               	xorlw	128
  9695  002980  580C               	subwfb	(??_USARTReadString+4)^0,w,c
  9696  002982  A0D8               	btfss	status,0,c
  9697  002984  EFC6  F014         	goto	i2u385_41
  9698  002988  EFC8  F014         	goto	i2u385_40
  9699  00298C                     i2u385_41:
  9700  00298C  EF84  F014         	goto	i2l3894
  9701  002990                     i2u385_40:
  9702  002990                     i2l3908:
  9703                           
  9704                           ;usart/UsartFunctions.h: 52:     buf[i + 1] = '\0';
  9705  002990  500D               	movf	USARTReadString@i^0,w,c
  9706  002992  2404               	addwf	USARTReadString@buf^0,w,c
  9707  002994  6E08               	movwf	??_USARTReadString^0,c
  9708  002996  500E               	movf	(USARTReadString@i+1)^0,w,c
  9709  002998  2005               	addwfc	(USARTReadString@buf+1)^0,w,c
  9710  00299A  6E09               	movwf	(??_USARTReadString+1)^0,c
  9711  00299C  0E01               	movlw	1
  9712  00299E  2408               	addwf	??_USARTReadString^0,w,c
  9713  0029A0  6ED9               	movwf	fsr2l,c
  9714  0029A2  0E00               	movlw	0
  9715  0029A4  2009               	addwfc	(??_USARTReadString+1)^0,w,c
  9716  0029A6  6EDA               	movwf	fsr2h,c
  9717  0029A8  0E00               	movlw	0
  9718  0029AA  6EDF               	movwf	indf2,c
  9719  0029AC  0012               	return		;funcret
  9720  0029AE                     __end_of_USARTReadString:
  9721                           	opt callstack 0
  9722                           
  9723 ;; *************** function _USARTReadChar *****************
  9724 ;; Defined at:
  9725 ;;		line 35 in file "usart/UsartFunctions.h"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;		None
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;		None
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  1    wreg      unsigned char 
  9732 ;; Registers used:
  9733 ;;		wreg, status,2, status,0, cstack
  9734 ;; Tracked objects:
  9735 ;;		On entry : 0/0
  9736 ;;		On exit  : 0/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9739 ;;      Params:         0       0       0       0       0       0       0
  9740 ;;      Locals:         0       0       0       0       0       0       0
  9741 ;;      Temps:          0       0       0       0       0       0       0
  9742 ;;      Totals:         0       0       0       0       0       0       0
  9743 ;;Total ram usage:        0 bytes
  9744 ;; Hardware stack levels used:    1
  9745 ;; Hardware stack levels required when called:    1
  9746 ;; This function calls:
  9747 ;;		_USARTDataReady
  9748 ;; This function is called by:
  9749 ;;		_USARTReadString
  9750 ;;		_setupFunctions
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text71
  9755  0032A0                     __ptext71:
  9756                           	opt callstack 0
  9757  0032A0                     _USARTReadChar:
  9758                           	opt callstack 21
  9759  0032A0                     i2l3828:
  9760  0032A0  EC1B  F019         	call	_USARTDataReady	;wreg free
  9761  0032A4  5001               	movf	?_USARTDataReady^0,w,c
  9762  0032A6  1002               	iorwf	(?_USARTDataReady+1)^0,w,c
  9763  0032A8  B4D8               	btfsc	status,2,c
  9764  0032AA  EF59  F019         	goto	i2u373_41
  9765  0032AE  EF5B  F019         	goto	i2u373_40
  9766  0032B2                     i2u373_41:
  9767  0032B2  EF50  F019         	goto	i2l3828
  9768  0032B6                     i2u373_40:
  9769  0032B6                     
  9770                           ;usart/UsartFunctions.h: 37:     return RCREG;
  9771  0032B6  50AE               	movf	174,w,c	;volatile
  9772  0032B8  0012               	return		;funcret
  9773  0032BA                     __end_of_USARTReadChar:
  9774                           	opt callstack 0
  9775                           
  9776 ;; *************** function _USARTDataReady *****************
  9777 ;; Defined at:
  9778 ;;		line 25 in file "usart/UsartFunctions.h"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2    0[COMRAM] int 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9792 ;;      Params:         2       0       0       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0
  9794 ;;      Temps:          1       0       0       0       0       0       0
  9795 ;;      Totals:         3       0       0       0       0       0       0
  9796 ;;Total ram usage:        3 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_USARTReadChar
  9802 ;;		_setupFunctions
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text72
  9807  003236                     __ptext72:
  9808                           	opt callstack 0
  9809  003236                     _USARTDataReady:
  9810                           	opt callstack 21
  9811  003236                     
  9812                           ;usart/UsartFunctions.h: 26:     return PIR1bits.RCIF;
  9813  003236  BA9E               	btfsc	158,5,c	;volatile
  9814  003238  EF20  F019         	goto	i2u277_41
  9815  00323C  EF24  F019         	goto	i2u277_40
  9816  003240                     i2u277_41:
  9817  003240  6A03               	clrf	??_USARTDataReady^0,c
  9818  003242  2A03               	incf	??_USARTDataReady^0,f,c
  9819  003244  EF25  F019         	goto	i2u277_48
  9820  003248                     i2u277_40:
  9821  003248  6A03               	clrf	??_USARTDataReady^0,c
  9822  00324A                     i2u277_48:
  9823  00324A  5003               	movf	??_USARTDataReady^0,w,c
  9824  00324C  6E01               	movwf	?_USARTDataReady^0,c
  9825  00324E  6A02               	clrf	(?_USARTDataReady+1)^0,c
  9826  003250  0012               	return		;funcret
  9827  003252                     __end_of_USARTDataReady:
  9828                           	opt callstack 0
  9829                           
  9830                           	psect	text73
  9831  000000                     __ptext73:
  9832                           	opt callstack 0
  9833  000000                     
  9834                           	psect	rparam
  9835  0000                     
  9836                           	psect	temp
  9837  000060                     btemp:
  9838                           	opt callstack 0
  9839  000060                     	ds	1
  9840  0000                     int$flags	set	btemp
  9841  0000                     wtemp8	set	btemp+1
  9842  0000                     ttemp5	set	btemp+1
  9843  0000                     ttemp6	set	btemp+4
  9844  0000                     ttemp7	set	btemp+8
  9845                           tosu	equ	0xFFF
  9846                           tosh	equ	0xFFE
  9847                           tosl	equ	0xFFD
  9848                           stkptr	equ	0xFFC
  9849                           pclatu	equ	0xFFB
  9850                           pclath	equ	0xFFA
  9851                           pcl	equ	0xFF9
  9852                           tblptru	equ	0xFF8
  9853                           tblptrh	equ	0xFF7
  9854                           tblptrl	equ	0xFF6
  9855                           tablat	equ	0xFF5
  9856                           prodh	equ	0xFF4
  9857                           prodl	equ	0xFF3
  9858                           indf0	equ	0xFEF
  9859                           postinc0	equ	0xFEE
  9860                           postdec0	equ	0xFED
  9861                           preinc0	equ	0xFEC
  9862                           plusw0	equ	0xFEB
  9863                           fsr0h	equ	0xFEA
  9864                           fsr0l	equ	0xFE9
  9865                           wreg	equ	0xFE8
  9866                           indf1	equ	0xFE7
  9867                           postinc1	equ	0xFE6
  9868                           postdec1	equ	0xFE5
  9869                           preinc1	equ	0xFE4
  9870                           plusw1	equ	0xFE3
  9871                           fsr1h	equ	0xFE2
  9872                           fsr1l	equ	0xFE1
  9873                           bsr	equ	0xFE0
  9874                           indf2	equ	0xFDF
  9875                           postinc2	equ	0xFDE
  9876                           postdec2	equ	0xFDD
  9877                           preinc2	equ	0xFDC
  9878                           plusw2	equ	0xFDB
  9879                           fsr2h	equ	0xFDA
  9880                           fsr2l	equ	0xFD9
  9881                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    124
    Data        0
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     49      95
    BANK0           128     94      94
    BANK1           256    104     217
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    MotionController_init@motionController.dirOutput	PTR struct DigitalOutput size(2) Largest target is 0
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_init@motionController.motionOutput	PTR struct DigitalOutput size(2) Largest target is 0
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    S50$4$0	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[3]), ISR@tmp(COMRAM[20]), STR_1(CODE[10]), 

    button1Read@in	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    xEngineMotionSet@engine	PTR struct DigitalOutput size(2) Largest target is 2
		 -> DigitalOutput_set@outputable(BANK0[2]), 

    xEngineDirSet@engine	PTR struct DigitalOutput size(2) Largest target is 2
		 -> DigitalOutput_set@outputable(BANK0[2]), 

    redLedSet@button	PTR struct DigitalOutput size(2) Largest target is 2
		 -> DigitalOutput_set@outputable(BANK0[2]), 

    yellowLedSet@button	PTR struct DigitalOutput size(2) Largest target is 2
		 -> DigitalOutput_set@outputable(BANK0[2]), 

    blueLedSet@button	PTR struct DigitalOutput size(2) Largest target is 2
		 -> DigitalOutput_set@outputable(BANK0[2]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_3(CODE[29]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    Application_loop@app	PTR struct . size(2) Largest target is 2
		 -> main@app(BANK0[2]), 

    ?_MotionController_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    ?_MotionController_init.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_Led_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    ?_Led_init.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    S25$0$0	PTR struct DigitalOutput size(2) Largest target is 2
		 -> DigitalOutput_set@outputable(BANK0[2]), 

    ?_DigitalOutput_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    S34$0$0	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    ?_DigitalInput_init.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    ?_Engine_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    ?_Engine_init.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_Engine_init.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_Button_init.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    ?_Button_init.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ?_Button_init.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    S50$2$0	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    S50$5$0	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), STR_1(CODE[10]), 

    S2142_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    sp__Point_toString	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    USARTInit@usart	PTR struct . size(2) Largest target is 20
		 -> usart(BANK1[20]), 

    setupFunctions@usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    setupFunctions@usart.writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    setupFunctions@usart.writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    setupFunctions@usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    setupFunctions@usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    setupFunctions@usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    setupFunctions@usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    setupFunctions@usart.readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    setupFunctions@usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    setupFunctions@usart.isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    setupFunctions@usart	PTR struct . size(2) Largest target is 20
		 -> usart(BANK1[20]), 

    USARTWriteLine@ln	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), STR_1(CODE[10]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[3]), ISR@tmp(COMRAM[20]), STR_1(CODE[10]), 

    USARTReadString@buf	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    MotionController_getDestinationCoord@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController	PTR struct MotionController size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    MotionController_getCurrentCoord@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController	PTR struct MotionController size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    MotionController_control@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController	PTR struct MotionController size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    motionController.z.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    motionController.y.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    motionController.x.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Led_close@led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    Led_close@led	PTR struct Led size(2) Largest target is 5
		 -> blueLed(COMRAM[4]), yellowLed(COMRAM[4]), 

    Led_open@led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    Led_open@led	PTR struct Led size(2) Largest target is 5
		 -> blueLed(COMRAM[4]), redLed(COMRAM[4]), yellowLed(COMRAM[4]), 

    led.output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    Led_init@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    DigitalOutput_set@outputable.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    DigitalOutput_set@outputable	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), 
		 -> yellowLedOutput(BANK1[4]), 

    DigitalOutput_close@output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    DigitalOutput_close@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), 
		 -> yellowLedOutput(BANK1[4]), 

    DigitalOutput_open@output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    DigitalOutput_open@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), 
		 -> yellowLedOutput(BANK1[4]), 

    DigitalOutput_init@init	PTR FTN()void  size(2) Largest target is 1
		 -> blueLedInit(), yellowLedInit(), redLedInit(), zEngineDirInit(), 
		 -> yEngineDirInit(), xEngineDirInit(), zEngineMotionInit(), yEngineMotionInit(), 
		 -> xEngineMotionInit(), 

    DigitalOutput_init@set	PTR FTN()void  size(2) Largest target is 1
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), 

    output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> i2_xEngineMotionSet(), i2_xEngineDirSet(), i2_redLedSet(), i2_yellowLedSet(), 
		 -> i2_blueLedSet(), blueLedSet(), yellowLedSet(), redLedSet(), 
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), 
		 -> yellowLedOutput(BANK1[4]), 

    DigitalInput_getValue@input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    DigitalInput_getValue@input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    DigitalInput_init@read	PTR FTN()int  size(2) Largest target is 2
		 -> button1Read(), 

    DigitalInput_init@init	PTR FTN()void  size(2) Largest target is 1
		 -> button1Init(), 

    input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    Engine_setDestinationToAddCurrentCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_setDestinationToAddCurrentCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_step@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_step@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_step@engine	PTR struct Engine size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    Engine_getDestinationCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getDestinationCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getDestinationCoord@engine	PTR struct Engine size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    Engine_getCurrentCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getCurrentCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getCurrentCoord@engine	PTR struct Engine size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    Engine_getStepPerMetrice@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getStepPerMetrice@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getStepPerMetrice@engine	PTR struct Engine size(2) Largest target is 60
		 -> motionController(BANK1[54]), 

    Engine_setStepPerMetrice@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_setStepPerMetrice@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_setStepPerMetrice@engine	PTR struct Engine size(2) Largest target is 60
		 -> MotionController_init@motionController(BANK1[54]), 

    engine.dirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    Engine_init@dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    engine.motionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    Engine_init@motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Button_isPressed@button.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Button_isPressed@button.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    Button_isPressed@button	PTR struct Button size(2) Largest target is 5
		 -> button(COMRAM[4]), 

    Button_init@onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    buton.input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    Button_init@input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    buton.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    buton.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    button.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    blueLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    redLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    yellowLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    motionController.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    motionController.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    S108Button$onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    button.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S108Button$input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    button.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(BANK1[2]), 

    redLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    blueLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    S104Led$output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    yellowLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    S93Engine$dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    S93Engine$motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    S50$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    S50$writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    usart.writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    S50$writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    usart.writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    S50$writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    S50$writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    S50$writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    S50$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    S50$readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    usart.readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    S50$readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    S50$isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    usart.isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    zEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    yEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    xEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    zEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    yEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    xEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    S34DigitalInput$read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    button1Input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(BANK1[2]), 

    blueLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    yellowLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    S25DigitalOutput$set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 

    redLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> blueLedSet(), yellowLedSet(), redLedSet(), xEngineDirSet(), 
		 -> xEngineMotionSet(), blueLedOutput(BANK1[4]), redLedOutput(BANK1[4]), yellowLedOutput(BANK1[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_USARTReadString
    i2_USARTWriteLine->i2_USARTWriteString
    i2_Led_open->i2_DigitalOutput_open
    i2_DigitalOutput_open->i2_DigitalOutput_set
    i2_DigitalOutput_set->i2_blueLedSet
    i2_DigitalOutput_set->i2_redLedSet
    i2_DigitalOutput_set->i2_xEngineDirSet
    i2_DigitalOutput_set->i2_xEngineMotionSet
    i2_DigitalOutput_set->i2_yellowLedSet
    _USARTReadChar->_USARTDataReady

Critical Paths under _main in BANK0

    _main->_Application_init
    _Application_loop->_Led_close
    _Application_loop->_Led_open
    _USARTWriteLine->_USARTWriteString
    _Led_open->_DigitalOutput_open
    _Led_close->_DigitalOutput_close
    _Button_isPressed->_DigitalInput_getValue
    _DigitalInput_getValue->_button1Read
    _Application_init->_MotionController_init
    _USARTInit->_calculateSpbrg
    _calculateSpbrg->___aldiv
    _MotionController_init->_Engine_init
    _EngineConfigurator_configEngines->_DigitalOutput_init
    _MotionController_control->___xxtofl
    _abs->___fltol
    ___xxtofl->_abs
    ___fltol->___flsub
    ___flsub->___fladd
    ___flmul->_Engine_getStepPerMetrice
    _MotionController_getDestinationCoord->_Point_init3D
    _MotionController_getCurrentCoord->_Point_init3D
    _Point_init3D->_Engine_getCurrentCoord
    _Point_init3D->_Engine_getDestinationCoord
    _Engine_step->_DigitalOutput_close
    _Engine_step->_DigitalOutput_open
    _DigitalOutput_open->_DigitalOutput_set
    _DigitalOutput_close->_DigitalOutput_set
    _DigitalOutput_set->_blueLedSet
    _DigitalOutput_set->_redLedSet
    _DigitalOutput_set->_xEngineDirSet
    _DigitalOutput_set->_xEngineMotionSet
    _DigitalOutput_set->_yellowLedSet
    _LedConfigurator_config->_DigitalOutput_init
    _ButtonConfigurator_config->_DigitalInput_init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Application_init
    _Application_init->_MotionController_control

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   70592
                                             92 BANK0      2     2      0
                   _Application_init
                   _Application_loop
 ---------------------------------------------------------------------------------
 (1) _Application_loop                                     2     0      2    3642
                                             12 BANK0      2     0      2
                   _Button_isPressed
                          _Led_close
                           _Led_open
                     _USARTWriteLine *
 ---------------------------------------------------------------------------------
 (2) _USARTWriteLine                                       2     0      2     436
                                              2 BANK0      2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     245
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Led_open                                             2     0      2    1367
                                             10 BANK0      2     0      2
                 _DigitalOutput_open
 ---------------------------------------------------------------------------------
 (2) _Led_close                                            2     0      2    1312
                                             10 BANK0      2     0      2
                _DigitalOutput_close
 ---------------------------------------------------------------------------------
 (2) _Button_isPressed                                     4     2      2     437
                                              7 BANK0      4     2      2
              _DigitalInput_getValue
 ---------------------------------------------------------------------------------
 (3) _DigitalInput_getValue                                4     2      2     282
                                              3 BANK0      4     2      2
                        _button1Read *
 ---------------------------------------------------------------------------------
 (4) _button1Read                                          3     1      2      65
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Application_init                                     4     2      2   66916
                                             90 BANK0      2     2      0
                                            102 BANK1      2     0      2
          _ButtonConfigurator_config
                        _Button_init
             _LedConfigurator_config
                           _Led_init
           _MotionController_control
              _MotionController_init
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            6     0      6    1422
                                             26 BANK0      6     0      6
                     _calculateSpbrg
                   _enableInterrupts
                     _setupFunctions
 ---------------------------------------------------------------------------------
 (3) _setupFunctions                                       2     0      2     400
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _enableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateSpbrg                                      12     8      4     780
                                             14 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _MotionController_init                              108    54     54    3269
                                             36 BANK0     54     0     54
                                              0 BANK1     54    54      0
   _EngineConfigurator_configEngines
                        _Engine_init
           _Engine_setStepPerMetrice
 ---------------------------------------------------------------------------------
 (3) _Engine_setStepPerMetrice                             6     0      6     602
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _Engine_init                                         36    18     18     744
                                              0 BANK0     36    18     18
 ---------------------------------------------------------------------------------
 (3) _EngineConfigurator_configEngines                     0     0      0    1716
                 _DigitalOutput_init
 ---------------------------------------------------------------------------------
 (2) _MotionController_control                           104   102      2   59551
                                             52 BANK0      2     0      2
                                              0 BANK1    102   102      0
           _Engine_getStepPerMetrice
                        _Engine_step
   _MotionController_getCurrentCoord
_MotionController_getDestinationCoor
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _abs
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     363
                                             34 BANK0      4     2      2
                            ___flsub (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     816
                                             38 BANK0     14    10      4
                            ___flsub (ARG)
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     607
                                             24 BANK0     10     6      4
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   17847
                                             16 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    9642
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8   12293
                                              4 BANK0     25    17      8
           _Engine_getStepPerMetrice (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    4246
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3743
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _MotionController_getDestinationCoord                12     0     12    1225
                                             28 BANK0     12     0     12
         _Engine_getDestinationCoord
                       _Point_init3D
 ---------------------------------------------------------------------------------
 (4) _Engine_getDestinationCoord                           4     0      4     301
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _MotionController_getCurrentCoord                    12     0     12    1225
                                             28 BANK0     12     0     12
             _Engine_getCurrentCoord
                       _Point_init3D
 ---------------------------------------------------------------------------------
 (4) _Point_init3D                                        24    12     12     741
                                              4 BANK0     24    12     12
             _Engine_getCurrentCoord (ARG)
         _Engine_getDestinationCoord (ARG)
 ---------------------------------------------------------------------------------
 (4) _Engine_getCurrentCoord                               4     0      4     301
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _Engine_step                                          4     0      4    3915
                                             10 BANK0      4     0      4
                _DigitalOutput_close
                 _DigitalOutput_open
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_open                                   2     0      2    1070
                                              8 BANK0      2     0      2
                  _DigitalOutput_set
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_close                                  2     0      2    1070
                                              8 BANK0      2     0      2
                  _DigitalOutput_set
 ---------------------------------------------------------------------------------
 (4) _DigitalOutput_set                                    4     0      4     738
                                              4 BANK0      4     0      4
                         _blueLedSet *
                          _redLedSet *
                      _xEngineDirSet *
                   _xEngineMotionSet *
                       _yellowLedSet *
 ---------------------------------------------------------------------------------
 (5) _yellowLedSet                                         4     0      4      31
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _xEngineMotionSet                                     4     0      4      31
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _xEngineDirSet                                        4     0      4      31
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _redLedSet                                            4     0      4      31
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _blueLedSet                                           4     0      4     161
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _Engine_getStepPerMetrice                             4     0      4     301
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _Led_init                                             8     4      4     335
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LedConfigurator_config                               0     0      0    1716
                 _DigitalOutput_init
 ---------------------------------------------------------------------------------
 (4) _DigitalOutput_init                                   8     4      4    1716
                                              0 BANK0      8     4      4
                        _blueLedInit *
                         _redLedInit *
                     _xEngineDirInit *
                  _xEngineMotionInit *
                     _yEngineDirInit *
                  _yEngineMotionInit *
                      _yellowLedInit *
                     _zEngineDirInit *
                  _zEngineMotionInit *
 ---------------------------------------------------------------------------------
 (5) _zEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _zEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _yellowLedInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _yEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _yEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _xEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _xEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _redLedInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _blueLedInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Button_init                                          8     4      4     313
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ButtonConfigurator_config                            0     0      0     276
                  _DigitalInput_init
 ---------------------------------------------------------------------------------
 (3) _DigitalInput_init                                    6     2      4     276
                                              0 BANK0      6     2      4
                        _button1Init *
 ---------------------------------------------------------------------------------
 (4) _button1Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 34    34      0    1090
                                             15 COMRAM    34    34      0
                    _USARTReadString *
                         i2_Led_open
                   i2_USARTWriteLine *
 ---------------------------------------------------------------------------------
 (8) i2_USARTWriteLine                                     2     0      2     145
                                              2 COMRAM     2     0      2
                 i2_USARTWriteString
 ---------------------------------------------------------------------------------
 (9) i2_USARTWriteString                                   2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i2_Led_open                                           2     0      2     519
                                             10 COMRAM     2     0      2
               i2_DigitalOutput_open
 ---------------------------------------------------------------------------------
 (9) i2_DigitalOutput_open                                 2     0      2     422
                                              8 COMRAM     2     0      2
                i2_DigitalOutput_set
 ---------------------------------------------------------------------------------
 (10) i2_DigitalOutput_set                                 4     0      4     325
                                              4 COMRAM     4     0      4
                       i2_blueLedSet *
                        i2_redLedSet *
                    i2_xEngineDirSet *
                 i2_xEngineMotionSet *
                     i2_yellowLedSet *
 ---------------------------------------------------------------------------------
 (11) i2_yellowLedSet                                      4     0      4      22
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) i2_xEngineMotionSet                                  4     0      4      22
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) i2_xEngineDirSet                                     4     0      4      22
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) i2_redLedSet                                         4     0      4      22
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) i2_blueLedSet                                        4     0      4      74
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _USARTReadString                                     12     8      4     337
                                              3 COMRAM    12     8      4
                      _USARTReadChar
 ---------------------------------------------------------------------------------
 (9) _USARTReadChar                                        0     0      0       0
                     _USARTDataReady
 ---------------------------------------------------------------------------------
 (10) _USARTDataReady                                      3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_init
     _ButtonConfigurator_config
       _DigitalInput_init
         _button1Init *
     _Button_init
     _LedConfigurator_config
       _DigitalOutput_init
         _blueLedInit *
         _redLedInit *
         _xEngineDirInit *
         _xEngineMotionInit *
         _yEngineDirInit *
         _yEngineMotionInit *
         _yellowLedInit *
         _zEngineDirInit *
         _zEngineMotionInit *
     _Led_init
     _MotionController_control
       _Engine_getStepPerMetrice
       _Engine_step
         _DigitalOutput_close
           _DigitalOutput_set
             _blueLedSet *
             _redLedSet *
             _xEngineDirSet *
             _xEngineMotionSet *
             _yellowLedSet *
         _DigitalOutput_open
           _DigitalOutput_set
             _blueLedSet *
             _redLedSet *
             _xEngineDirSet *
             _xEngineMotionSet *
             _yellowLedSet *
       _MotionController_getCurrentCoord
         _Engine_getCurrentCoord
         _Point_init3D
           _Engine_getCurrentCoord (ARG)
           _Engine_getDestinationCoord (ARG)
       _MotionController_getDestinationCoord
         _Engine_getDestinationCoord
         _Point_init3D
           _Engine_getCurrentCoord (ARG)
           _Engine_getDestinationCoord (ARG)
       ___fladd
       ___fldiv
       ___flge
       ___flmul
         _Engine_getStepPerMetrice (ARG)
       ___flsub
         ___fladd
       ___fltol
         ___flsub (ARG)
           ___fladd
       ___xxtofl
         ___flsub (ARG)
           ___fladd
         ___fltol (ARG)
           ___flsub (ARG)
             ___fladd
         _abs (ARG)
           ___flsub (ARG)
             ___fladd
           ___fltol (ARG)
             ___flsub (ARG)
               ___fladd
       _abs
         ___flsub (ARG)
           ___fladd
         ___fltol (ARG)
           ___flsub (ARG)
             ___fladd
     _MotionController_init
       _EngineConfigurator_configEngines
         _DigitalOutput_init
           _blueLedInit *
           _redLedInit *
           _xEngineDirInit *
           _xEngineMotionInit *
           _yEngineDirInit *
           _yEngineMotionInit *
           _yellowLedInit *
           _zEngineDirInit *
           _zEngineMotionInit *
       _Engine_init
       _Engine_setStepPerMetrice
     _USARTInit
       _calculateSpbrg
         ___aldiv
       _enableInterrupts
       _setupFunctions
   _Application_loop
     _Button_isPressed
       _DigitalInput_getValue
         _button1Read *
     _Led_close
       _DigitalOutput_close
         _DigitalOutput_set
           _blueLedSet *
           _redLedSet *
           _xEngineDirSet *
           _xEngineMotionSet *
           _yellowLedSet *
     _Led_open
       _DigitalOutput_open
         _DigitalOutput_set
           _blueLedSet *
           _redLedSet *
           _xEngineDirSet *
           _xEngineMotionSet *
           _yellowLedSet *
     _USARTWriteLine *
       _USARTWriteString

 _ISR (ROOT)
   _USARTReadString *
     _USARTReadChar
       _USARTDataReady
   i2_Led_open *
     i2_DigitalOutput_open
       i2_DigitalOutput_set
         i2_blueLedSet *
         i2_redLedSet *
         i2_xEngineDirSet *
         i2_xEngineMotionSet *
         i2_yellowLedSet *
   i2_USARTWriteLine *
     i2_USARTWriteString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     68      D9       7       84.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5E      5E       5       73.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     31      5F       1       75.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     196      15        0.0%
DATA                 0      0     196       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 13 18:25:51 2020

                                     ?_USARTDataReady 0001  
                                   USARTInit@baudRate 009C  
                                        fp__redLedSet 0000  
                                      _yEngineDirInit 3386  
                       i2DigitalOutput_set@outputable 0005  
                                        ___fldiv@aexp 0098  
                                        ___fldiv@bexp 0097  
                                        ___fldiv@sign 0090  
                                       fp__redLedInit 0000  
                                                  _L1 0659  
                                                  _L2 0655  
                                                  _L3 0651  
                                                  _L4 064D  
                                                  _L5 0649  
                                                  _L6 0645  
                                                  _P1 0641  
                                                  l70 2A30  
                                                  _P2 063D  
                                                  _P3 0639  
                                                  _P4 0635  
                                                  l65 224E  
                                                  _P5 0631  
                                                  l83 3194  
                                                  l93 2F0C  
                                                  l86 3150  
                                                  l96 31D4  
                                                  l99 3214  
            MotionController_control@destinationCoord 01BF  
                                                  _bp 0669  
                                                  _cp 061D  
                               __size_of_yellowLedSet 0018  
                                         __CFG_BORV$3 000000  
                                        __CFG_CP0$OFF 000000  
                                        __CFG_CP1$OFF 000000  
                                        __CFG_CP2$OFF 000000  
                                        __CFG_CP3$OFF 000000  
                                         __CFG_LVP$ON 000000  
                                                 l110 2AAE  
                                                 l102 326A  
                                                 l105 31F4  
                                                 l132 3394  
                                                 l141 3318  
                                                 l109 2A7A  
                                                 l150 338C  
                                                 l135 3390  
                                                 l153 3388  
                                                 l138 3398  
                                                 l156 3384  
                                                 l180 305E  
                                                 l172 2DCA  
                                                 l270 07BC  
                                                 l159 3300  
                                                 l183 308A  
                                                 l168 2FDA  
                                                 l272 0806  
                                                 l264 274C  
                                                 l432 312A  
                                                 l177 2F78  
                                                 l193 3284  
                                                 l425 2BB6  
                                                 l186 2F42  
                                                 l274 0850  
                                                 l267 282A  
                                                 l292 12EE  
                                                 l196 3006  
                                                 l429 2C1C  
                                                 l622 3378  
                                                 l631 32D0  
                                                 l295 2BA6  
                                                 l199 3032  
                                                 l616 3380  
                                                 l625 32E8  
                                                 l481 28F2  
                                                 l634 2D04  
                                                 l298 2B2A  
                                                 l490 2ED6  
                                                 l651 3234  
                                                 l619 337C  
                                                 l628 3330  
                                                 l484 3374  
                                                 l645 339C  
                                                 l581 2E56  
                                                 l733 235C  
                                                 l487 2C90  
                                                 l648 31B4  
                                                 l569 315E  
                                                 l924 256A  
                                                 l919 2524  
                                                 l951 2464  
                                                 _GIE 007F97  
                                        __CFG_CPB$OFF 000000  
                                        __CFG_CPD$OFF 000000  
                                                 _ISR 0008  
                                      ?_USARTReadChar 0001  
                                                 _lg2 062D  
                                                 _abs 2E58  
                                   _DigitalInput_init 2FAE  
                              __size_of_yellowLedInit 0004  
                                    _yEngineDirOutput 004C  
                                    fp__yellowLedInit 0000  
                                                 _ovt 0621  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                        ___flmul@aexp 0091  
                                        ___flmul@bexp 0096  
                                  ?_DigitalInput_init 0080  
                                        ___flmul@sign 0090  
                                        ___flmul@temp 009B  
                                        ___flmul@prod 0097  
                          __end_ofi2_USARTWriteString 2D70  
                           __size_of_Button_isPressed 0026  
                                      fp__button1Init 0000  
                                      fp__button1Read 0000  
                                                ?_ISR 0001  
                                        ___fltol@exp1 00A1  
                                     ?_calculateSpbrg 008E  
                                        __CFG_WDT$OFF 000000  
                                                ?_abs 00A2  
                                                l1208 16CA  
                                                l1224 2E12  
                                                l1312 2130  
                                                l1241 1D9C  
                                                l1209 16B8  
                                                l1250 1E84  
                                                l1323 20C8  
                                                l1236 1F78  
                                                l1316 206C  
                                                l1332 2E98  
                                                l1309 1FD4  
                                                l1238 1DD8  
                                                l1182 14E0  
                                                l1247 1E1E  
                                                l1191 17B0  
                                                l1183 14CE  
                                                l1272 1BDC  
                                                l1184 1494  
                                                l1249 1E96  
                                                l1329 2E90  
                                                l1275 1A6E  
                                                l4100 3376  
                                                l1268 1878  
                                                l1285 1B9E  
                                                l1277 1AE6  
                                                l4110 3034  
                                                l4102 3252  
                                                l1278 1AD4  
                                                l1199 15FA  
                                                l4120 2F4C  
                                                l4112 304A  
                                                l4200 1358  
                                                l5000 119A  
                                                l4122 2F68  
                                                l4114 3060  
                                                l4106 31D6  
                                                l4210 1386  
                                                l4202 135E  
                                                l5010 1282  
                                                l5002 11CE  
                                                l4132 339A  
                                                l4116 3076  
                                                l4300 155C  
                                                l4220 13BA  
                                                l4212 1388  
                                                l4204 1370  
                                                l5012 12B8  
                                                l5004 11E2  
                                                l4140 2256  
                                                l5022 3216  
                                                l4118 2F44  
                                                l5014 2C92  
                                                l4126 2E14  
                                                l4310 15C8  
                                                l4302 155E  
                                                l4230 13F6  
                                                l4214 1398  
                                                l4222 13C2  
                                                l4206 1372  
                                                l5006 1216  
                                                l4150 2296  
                                                l4142 2264  
                                                l4134 3196  
                                                l5030 2FDC  
                                                l5024 3174  
                                                l5016 326C  
                                                l4072 330C  
                                                l4080 32C4  
                                                l4128 2E44  
                                                l4320 1620  
                                                l4312 15CA  
                                                l4304 1568  
                                                l4240 140A  
                                                l4232 13FA  
                                                l4224 13D2  
                                                l4216 13A8  
                                                l4208 1378  
                                                l5008 124C  
                                                l4160 22D4  
                                                l4152 229A  
                                                l4144 2274  
                                                l5040 3008  
                                                l5032 2FF2  
                                 fp_i2_USARTWriteLine 0000  
                                                l5026 3184  
                                                l4082 3392  
                                                l4090 3386  
                                                l5018 3274  
                                                l4074 32F4  
                                                l4410 2A46  
                                                l4330 164E  
                                                l4314 15DA  
                                                l4306 156E  
                                                l4250 141E  
                                                l4242 140E  
                                                l4234 13FE  
                                                l4226 13E4  
                                                l4218 13B8  
                                                l4402 31B6  
                                                l4170 231C  
                                                l4162 22E2  
                                                l4154 22AA  
                                                l4146 2278  
                                                l4138 2250  
                                                l5050 2132  
                                                l5034 312C  
                                                l5042 301E  
                                                l4084 338E  
                                                l4092 3382  
                                                l4404 31F6  
                                                l4076 32DC  
                                                l4412 2A62  
                                                l4500 1C72  
                                                l4332 165C  
                                                l4324 1634  
                                                l4340 167A  
                                                l4308 1594  
                                                l4316 15EA  
                                                l4252 1422  
                                                l4244 1412  
                                                l4236 1402  
                                                l4228 13F2  
                                                l4260 1432  
                                                l4172 2326  
                                                l4164 22EC  
                                                l4156 22C0  
                                                l4148 2286  
                                                l5060 21A0  
                                                l5052 2150  
                                                l5036 3148  
                                                l5044 3110  
                                                l5108 3152  
                                                l4414 2FAE  
                                                l4086 3396  
                                                l4078 3324  
                                                l4094 2F0E  
                                                l4510 1CAC  
                                                l4502 1C82  
                                                l4334 1664  
                                                l4326 163E  
                                                l4318 1610  
                                                l4342 1688  
                                                l4270 14A2  
                                                l4262 1436  
                                                l4254 1426  
                                                l4246 1416  
                                                l4238 1406  
                                                l4190 131E  
                                                l4182 12F0  
                                                l4422 2668  
                                                l4166 230A  
                                                l4158 22C8  
                                                l4174 232C  
                                                l5070 21FE  
                                                l5062 21B0  
                                                l5054 216C  
                                                l4416 2FCA  
                                                l4088 338A  
                                                l4096 337E  
                                                l4408 2A32  
                                                l4424 2B2C  
                                                l4600 1F6C  
                                                l4512 1CC2  
                                                l4504 1C92  
                                                l4352 16DA  
                                                l4360 1730  
                                                l4344 168C  
                                                l4336 1668  
                                                l4328 164C  
                                                l4280 14CC  
                                                l4272 14AE  
                                                l4264 1460  
                                                l4256 142A  
                                                l4248 141A  
                                                l4192 132E  
                                                l4184 12FE  
                                                l4432 2E58  
                                                l4176 233C  
                                                l4168 231A  
                                                l5072 221C  
                                                l5064 21BE  
                                                l5056 217E  
                                                l4440 2BE6  
                                                l5080 29AE  
                                                l4418 2FD2  
                                                l4098 337A  
                                                l4602 1F6E  
                                                l4530 1D16  
                                                l4514 1CD2  
                                                l4522 1CF2  
                                                l4506 1C94  
                                                l4610 17B2  
                                                l4370 1782  
                                                l4362 1740  
                                                l4354 16E6  
                                                l4346 169A  
                                                l4338 1678  
                                                l4290 1522  
                                                l4282 14EE  
                                                l4274 14B2  
                                                l4266 147C  
                                                l4258 142E  
                                                l4194 133E  
                                                l4186 130C  
                                                l4434 2E74  
                                                l4178 234C  
                                                l4450 2866  
                                                l5074 2220  
                                                l5066 21C2  
                                                l5058 2190  
                                                l4442 2BEC  
                                                l5082 29DE  
                                                l4428 2AB0  
                                                l4540 1D68  
                                                l4532 1D30  
                                                l4524 1D02  
                                                l4516 1CDA  
                                                l4508 1C9C  
                                                l4700 1A8C  
                                                l4620 17F0  
                                                l4612 17C0  
                                                l4380 17A0  
                                                l4372 1788  
                                                l4364 1750  
                                                l4356 16F4  
                                                l4348 16B0  
                                                l4292 1530  
                                                l4284 14FE  
                                                l4276 14C0  
                                                l4268 148C  
                                                l4196 1340  
                                                l4188 130E  
                                                l4460 28CA  
                                                l4452 287A  
                                                l4444 282C  
                                                l5076 2246  
                                                l5068 21E0  
                                                l4436 2BB2  
                                                l5084 2A04  
                                                l4550 1DC4  
                                                l4542 1D78  
                                                l4534 1D40  
                                                l4526 1D02  
                                                l4518 1CDE  
                                                l4710 1AF6  
                                                l4702 1A90  
                                                l4630 1822  
                                                l4622 1800  
                                                l4614 17CE  
                                                l4374 178A  
                                                l4366 1770  
                                                l4358 172E  
                                                l4294 153E  
                                                l4278 14C2  
                                                l4198 1348  
                                                l4462 28DE  
                                                l4454 288E  
                                                l4446 283C  
                                                l4390 2DC2  
                                                l4438 2BC4  
                                                l5086 2A12  
                                                l4560 1E04  
                                                l4552 1DC6  
                                                l4544 1D8C  
                                                l4536 1D50  
                                                l4480 1C0C  
                                                l4472 1BDE  
                                                l4720 1B58  
                                                l4712 1B02  
                                                l4704 1A9E  
                                                l4640 1862  
                                                l4632 1830  
                                                l4624 1806  
                                                l4616 17D0  
                                                l4376 1790  
                                                l4368 1774  
                                                l4296 154A  
                                                l4288 1512  
                                                l4800 2418  
                                                l4464 336E  
                                                l4456 28A2  
                                                l4448 2852  
                                                l4384 2D70  
                                                l5088 2A24  
                                                l4570 1E40  
                                                l4562 1E0E  
                                                l4554 1DD6  
                                                l4546 1D9A  
                                                l4538 1D60  
                                                l4490 1C46  
                                                l4482 1C1C  
                                                l4474 1BEC  
                                                l4730 1BC0  
                                                l4722 1B6C  
                                                l4714 1B10  
                                                l4706 1ACC  
                                                l4650 18AC  
                                                l4642 1868  
                                                l4634 1832  
                                                l4626 1816  
                                                l4618 17E0  
                                                l4378 179E  
                                                l4298 154E  
                                                l4802 2424  
                                                l4394 2ED8  
                                                l4466 2C1E  
                                                l4458 28B6  
                                                l4386 2DA2  
                                                l4580 1EB2  
                                                l4572 1E4E  
                                                l4564 1E1C  
                                                l4556 1DE8  
                                                l4548 1DA6  
                                                l4492 1C4C  
                                                l4484 1C2C  
                                                l4476 1BFA  
                                                l4732 1BC2  
                                                l4724 1B86  
                                                l4716 1B3A  
                                                l4660 18FC  
                                                l4652 18B8  
                                                l4644 1888  
                                                l4636 1842  
                                                l4628 181C  
                                                l4740 2DCC  
                                                l4804 2434  
                                                l4820 1FFA  
                                                l4812 1F7E  
                                                l4900 06A8  
                                                l4396 2EE8  
                                                l4468 2C52  
                                                l4388 2DB6  
                                                l4590 1F1E  
                                                l4582 1EC0  
                                                l4574 1E7C  
                                                l4558 1DFE  
                                                l4566 1E2E  
                                                l4494 1C52  
                                                l4486 1C2E  
                                                l4478 1BFC  
                                                l4750 24A6  
                                                l4726 1BA2  
                                                l4734 1BC8  
                                                l4718 1B3E  
                                                l4670 193E  
                                                l4662 1908  
                                                l4654 18C2  
                                                l4646 1898  
                                                l4638 1852  
                                                l4742 2DDE  
                                                l4806 2444  
                                                l4830 2054  
                                                l4814 1F90  
                                                l4910 07AE  
                                                l4902 06DC  
                                                l4398 2EFA  
                                                l4592 1F38  
                                                l4584 1EEA  
                                                l4568 1E3C  
                                                l4496 1C60  
                                                l4488 1C36  
                                                l4760 2512  
                                                l4752 24D4  
                                                l4736 1BCC  
                                                l4728 1BB2  
                                                l4680 19A0  
                                                l4672 194A  
                                                l4664 1914  
                                                l4656 18D8  
                                                l4808 2454  
                                                l4840 20B8  
                                                l4832 2056  
                                                l4824 200E  
                                                l4816 1F9E  
                                                l4920 0856  
                                                l4912 07C2  
                                                l4904 0710  
                                                l4594 1F54  
                                                l4578 1EA6  
                                                l4586 1EEE  
                                                l4498 1C62  
                                                l4762 2562  
                                                l4754 24E4  
                                                l4746 2466  
                                                l4690 1A36  
                                                l4682 19AC  
                                                l4674 195A  
                                                l4666 1922  
                                                l4658 18E4  
                                                l4770 2376  
                                                l4850 2110  
                                                l4842 20D6  
                                                l4834 2062  
                                                l4826 2016  
                                                l4818 1FE4  
                                                l4930 0AA0  
                                                l4922 09A0  
                                                l4914 07F8  
                                                l4906 0744  
                     __size_of_Engine_getCurrentCoord 001A  
                                                l4596 1F58  
                                                l4588 1F08  
                                                l4764 2568  
                                                l4756 24F2  
                                                l4748 2496  
                                                l4692 1A54  
                                                l4684 19C8  
                                                l4676 1974  
                                                l4668 192E  
                                                l4780 23C6  
                                                l4852 211E  
                                                l4844 20D8  
                                                l4836 209E  
                                                l4828 2022  
                                                l4940 0BBE  
                                                l4932 0AD4  
                                                l4924 09E0  
                                                l4916 080C  
                                                l4908 0778  
                                                l4860 2E9A  
                                                l4598 1F66  
                                                l4758 2504  
                                                l4694 1A5E  
                                                l4686 19F2  
                                                l4678 1984  
                                                l4790 23F0  
                                                l4782 23CA  
                                                l4774 238A  
                                                l4854 2120  
                                                l4846 20DC  
                                                l4838 20AA  
                                                l4950 0C8A  
                                                l4942 0BD6  
                                                l4926 0A26  
                                                l4918 0842  
                                                l4870 2EC0  
                                                l4862 2E9E  
                                                l4696 1A6C  
                                                l4688 1A28  
                                                l4792 23FA  
                                                l4784 23D8  
                                                l4776 23B4  
                                                l4768 235E  
                                                l4848 2100  
                                                l4960 0D9A  
                                                l4952 0CC0  
                                                l4944 0C0A  
                                                l4936 0B76  
                                                l4928 0A6C  
                                                l4880 2ECA  
                                                l4872 2EC2  
                                                l4864 2EA2  
                                                l4698 1A7E  
                                                l4794 2404  
                                                l4778 23B6  
                                                l4970 0EBC  
                                                l4962 0DCE  
                                                l4954 0CF6  
                                                l4946 0C3E  
                                                l4938 0B8A  
                                                l4890 27BE  
                                                l4882 274E  
                                                l4874 2EC4  
                                                l4866 2EA4  
                                                l4980 0F84  
                                                l4972 0ED0  
                                                l4956 0D2C  
                                                l4948 0C56  
                                                l4892 27DC  
                                                l4884 2752  
                                                l4876 2EC6  
                                                l4868 2EBE  
                                                l4982 0FBA  
                                                l4974 0F04  
                                                l4966 0E70  
                                                l4958 0D66  
                                                l4894 27FA  
                                                l4886 2776  
                                                l4878 2EC8  
                                                l4992 1102  
                                                l4984 0FF0  
                                                l4976 0F38  
                                                l4968 0E88  
                                                l4896 2818  
                                                l4888 279A  
                                                l4994 111A  
                                                l4986 1026  
                                                l4978 0F50  
                                                l4996 114E  
                                                l4988 1060  
                                                l4998 1166  
                                                STR_1 069A  
                                                STR_2 06A4  
                                                STR_3 067D  
                                                _BRGH 007D62  
                                 i2yellowLedSet@value 0003  
                                                _CREN 007D5C  
                                                _LATA 000F89  
                                                _LATB 000F8A  
                                                _LATC 000F8B  
                                                _LATD 000F8C  
                                                _LATE 000F8D  
                                                u5000 17CE  
                                                u4200 2286  
                                                u4105 3316  
                                                u5001 17CA  
                                                u4201 2282  
                                                u4106 3318  
                                                u5010 17E0  
                                                u4210 22C0  
                                                u4115 32FE  
                                                u5011 17DC  
                                                u4211 22BC  
                                                u4116 3300  
                                                u5100 1A8C  
                                                u5020 17F0  
                                                u4300 1398  
                                                u4220 22E2  
                                                u4125 32E6  
                                                u5101 1A88  
                                                u5021 17EC  
                                                u4301 1394  
                                                u4221 22DE  
                                                u4126 32E8  
                                                u5110 1A9E  
                                                u5030 1830  
                                                u4310 13A8  
                                                u4230 230A  
                                                u4135 332E  
                                                u5111 1A9A  
                                                u5031 182C  
                                                u4311 13A4  
                                                u4231 2306  
                                                u4136 3330  
                                                u5200 24D4  
                                                u5120 1ACC  
                                                u5040 1842  
                                                u4400 14EE  
                                                u4320 13E4  
                                                u4240 233C  
                                                u4145 32CE  
                                                u5201 24D0  
                                                u5121 1AC8  
                                                u5041 183E  
                                                u4401 14EA  
                                                u4321 13E0  
                                                u4241 2338  
                                                u4146 32D0  
                                                u5210 24F2  
                                                u5130 1AE2  
                                                u5050 1852  
                                                u4410 14FE  
                                                u4330 13F2  
                                                u4250 130C  
                                                u4171 2E4E  
                                                u5211 24EE  
                                                u5131 1ADE  
                                                u5051 184E  
                                                u4411 14FA  
                                                u4331 13EE  
                                                u4251 1308  
                                                u5220 2512  
                                                u5140 1AF6  
                                                u5060 1888  
                                                u4500 165C  
                                                u4420 1530  
                                                u4340 1460  
                                                u4260 131E  
                                                u5300 2444  
                                                u4180 31AA  
                                                u5221 250E  
                                                u5141 1AF2  
                                                u5061 1884  
                                                u4501 1658  
                                                u4421 152C  
                                                u4341 145C  
                                                u4261 131A  
                                                u5301 2440  
                                                u4181 31A0  
                                                u4158 2F2E  
                                                u5230 2562  
                                                u5150 1B10  
                                                u5070 1898  
                                                u4510 1678  
                                                u4430 153E  
                                                u4350 1478  
                                                u4270 132E  
                                                u5310 1F90  
                                                u4190 2264  
                                                u4159 2F42  
                                                u5231 255E  
                                                u5151 1B0C  
                                                u5071 1894  
                                                u4511 1674  
                                                u4431 153A  
                                                u4351 1472  
                                                u4271 132A  
                                                u5311 1F8C  
                                                u4191 2260  
                                                u4168 2F52  
                                                u5160 1B58  
                                                u5080 1A12  
                                                u4600 1750  
                                                u4520 1688  
                                                u4440 155C  
                                                u4360 147A  
                                                u4280 1370  
                                                u5240 2376  
                                                u5400 211E  
                                                u5320 1F9E  
                                                u4169 2F68  
                                                u5161 1B54  
                                                u4601 174C  
                                                u4521 1684  
                                                u4441 1558  
                                                u4281 136C  
                                                u5241 2372  
                                                u5401 211A  
                                                u5321 1F9A  
                                                u5170 1B86  
                                                u5090 1A6C  
                                                u4610 1770  
                                                u4530 169A  
                                                u4450 1594  
                                                u4370 14A2  
                                                u4290 1386  
                                                u5250 23AA  
                                                u5330 1FFA  
                                                u5171 1B82  
                                                u5091 1A68  
                                                u4611 176C  
                                                u4531 1696  
                                                u4451 1590  
                                                u4371 149E  
                                                u4291 1382  
                                                u5331 1FF6  
                                                _PEIE 007F96  
                                                u5180 1BC0  
                                                u4620 1782  
                                                u4540 16B0  
                                                u4460 15DA  
                                                u4380 14C0  
                                                u5260 23D8  
                                                u5340 2050  
                                                u5500 0842  
                                                u4188 31AE  
                                                u4701 2B22  
                                                u5181 1BBC  
                                                u5085 1A08  
                                                u4621 177E  
                                                u4541 16AC  
                                                u4461 15D6  
                                                u4381 14BC  
                                                u5261 23D4  
                                                u5341 204C  
                                                u5501 083E  
                                                u5421 276E  
                                                u5190 2496  
                                                u4630 179E  
                                                u4550 16C6  
                                                u4470 1610  
                                                u4390 14E0  
                                                u5270 23EC  
                                                u5350 209A  
                                                u4710 2E74  
                                                u5510 0AA0  
                                                u5191 2492  
                                                u4631 179A  
                                                u4551 16C2  
                                                u4471 160C  
                                                u4391 14DC  
                                                u5271 23E8  
                                                u5255 23A0  
                                                u5351 2096  
                                                u4711 2E70  
                                                u5511 0A9C  
                                                u5431 2792  
                                                u4800 1C60  
                                                u4560 16DA  
                                                u4480 1620  
                                                u5280 2414  
                                                u5360 20B8  
                                                u5600 0EBC  
                                                u5520 0AD4  
                                                u4720 2BC4  
                                                u4801 1C5C  
                                                u4561 16D6  
                                                u4481 161C  
                                                u5281 2410  
                                                u5361 20B4  
                                                u5601 0EB8  
                                                u5521 0AD0  
                                                u5441 27B6  
                                                u4721 2BC0  
                                                u4810 1C72  
                                                u4570 16F4  
                                                u4490 164C  
                                                u5290 2434  
                                                u5370 20C8  
                                                u5610 0F38  
                                                u5530 0B72  
                                                u4650 2DB6  
                                                u4730 2BE4  
                                                u4811 1C6E  
                                                u4571 16F0  
                                                u4491 1648  
                                                u5291 2430  
                                                u5371 20C4  
                                                u5611 0F34  
                                                u5531 0B6E  
                                                u5451 2822  
                                                u4651 2DB2  
                                                _RCIE 007CED  
                                                u4900 1E1C  
                                                u4820 1C82  
                                                u4580 172E  
                                                u5380 20D6  
                                                u5620 105C  
                                                u5540 0BBE  
                                                u4740 2C0C  
                                                _RCIF 007CF5  
                                                u4901 1E18  
                                                u4821 1C7E  
                                                u4581 172A  
                                                u5381 20D2  
                                                u5621 1058  
                                                u5541 0BBA  
                                                u5461 06BA  
                                                u4661 2F04  
                                                u4670 2A46  
                                                u4910 1E3C  
                                                u4830 1CC2  
                                                u4590 1740  
                                                u5390 2110  
                                                u5630 10FE  
                                                u5550 0C3E  
                                                u4750 2C1C  
                                                u4671 2A42  
                                                u4911 1E38  
                                                u4831 1CBE  
                                                u4591 173C  
                                                u5391 210C  
                                                u5631 10FA  
                                                u5551 0C3A  
                                                u5471 06D4  
                                                u4751 2C18  
                                                u4920 1E4E  
                                                u4840 1D02  
                                                u5640 114E  
                                                u5560 0D62  
                                                u5480 07AE  
                                                u4648 2D86  
                                                u4921 1E4A  
                                                u4841 1CFE  
                                                u5641 114A  
                                                u5561 0D5E  
                                                u5481 07AA  
                                                u4649 2D9A  
                                                u4737 2BDA  
                                                u4930 1E7C  
                                                u4850 1D78  
                                                u4770 1BFA  
                                                u5650 11CE  
                                                u5570 0D9A  
                                                u5490 07F8  
                                                u4691 2B9E  
                                                u4931 1E78  
                                                u4851 1D74  
                                                u4771 1BF6  
                                                u5651 11CA  
                                                u5571 0D96  
                                                u5491 07F4  
                                                u4747 2C02  
                                                u4940 1E92  
                                                u4860 1D9A  
                                                u4780 1C0C  
                                                u5660 12EE  
                                                u5580 0DCE  
                                                u4941 1E8E  
                                                u4861 1D96  
                                                u4781 1C08  
                                                u5661 12EA  
                                                u5581 0DCA  
                                                u4765 2C30  
                                                u4950 1EA6  
                                                u4870 1DC4  
                                                u4790 1C1C  
                                                u5590 0E6C  
                                                u4951 1EA2  
                                                u4871 1DC0  
                                                u4791 1C18  
                                                u5591 0E68  
                                                u5671 2176  
                                                u4688 2FB4  
                                                u4960 1EC0  
                                                u4880 1DE8  
                                                u5680 29DE  
                                                u4689 2FCA  
                                                u4961 1EBC  
                                                u4881 1DE4  
                                                u5681 29DA  
                                                u4970 1F08  
                                                u4890 1DFE  
                                                u4971 1F04  
                                                u4891 1DFA  
                                                u4980 1F38  
                                                u4981 1F34  
                                                i2l78 262C  
                                                u4990 1F66  
                                                u4991 1F62  
                                                u5698 29F0  
                                                u5699 2A04  
                                                _SPEN 007D5F  
                                 _zEngineMotionOutput 0054  
                                                _TXIF 007CF4  
                                                _TXEN 007D65  
                                                _SYNC 007D64  
                                 ??_DigitalInput_init 0084  
                                   ?_xEngineMotionSet 0080  
                              __end_of_USARTWriteLine 312C  
                                                abs@a 00A2  
                                                _cp_h 0679  
                                                _cp_l 0675  
                                                _dp_h 0609  
                                                _dp_l 0601  
                                                _main 3152  
                                                _huge 0661  
                                                fsr0h 000FEA  
                                                _tiny 065D  
                                                fsr1h 000FE2  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                btemp 0060  
                      __size_of_DigitalInput_getValue 005C  
                       __end_of_DigitalInput_getValue 2DCC  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                  ??_xEngineMotionSet 0084  
                                                start 000E  
                                       __CFG_IESO$OFF 000000  
                                     ___fldiv@new_exp 0091  
                           DigitalOutput_close@output 0088  
                                        _yellowLedSet 331A  
                              __end_of_yEngineDirInit 338A  
                            __end_ofi2_USARTWriteLine 32A0  
                                        ___param_bank 000000  
                                    i2redLedSet@value 0003  
                  __end_of_Engine_getDestinationCoord 31F6  
                          _Engine_getDestinationCoord 31D6  
                                               ??_ISR 0010  
                             __size_ofi2_yellowLedSet 000C  
                                   fp_i2_yellowLedSet 0000  
                                               ??_abs 00A4  
                                 __end_of_Engine_init 2F0E  
                                        ?_button1Init 0001  
                                        ?_button1Read 0080  
                                 __end_of_Engine_step 2AB0  
                           __end_of_DigitalInput_init 2FDC  
                                i2yellowLedSet@button 0001  
                                       ___fltol@sign1 00A0  
                                     __end_of___aldiv 235E  
                                     __end_of___fladd 17B2  
                                               ?_main 0001  
                                       ??_Button_init 0084  
                                     __end_of___fldiv 1F7A  
                                     __end_of___flmul 1BDE  
                                               _CARRY 007EC0  
                                     __end_of___flsub 2E14  
                                     __end_of___fltol 2466  
                                               i2l141 3360  
                                               i2l180 30DE  
                                               i2l405 32B8  
                                               i2l414 29AC  
                                               i2l159 3354  
                                               i2l432 329E  
                                               i2l425 2D0A  
                                               i2l186 2FAC  
                                               i2l196 30B4  
                                               i2l429 2D6E  
                                               i2l631 333C  
                                               i2l393 3250  
                                               i2l625 3348  
                                               i2l628 336C  
                                               _RCREG 000FAE  
                                               _SPBRG 000FAF  
                            _USARTWriteLine$intlevel0 3110  
                                   _xEngineMotionInit 3392  
                               __size_ofi2_blueLedSet 000C  
                                               _TXREG 000FAD  
                                       __CFG_PWRT$OFF 000000  
                                       __CFG_WRT0$OFF 000000  
                                       __CFG_WRT1$OFF 000000  
                                       __CFG_WRT2$OFF 000000  
                                       __CFG_WRT3$OFF 000000  
                                      __CFG_EBTR0$OFF 000000  
                                      __CFG_FCMEN$OFF 000000  
                                      __CFG_EBTR1$OFF 000000  
                                      __CFG_EBTR2$OFF 000000  
                                         i2_redLedSet 333E  
                                      __CFG_EBTR3$OFF 000000  
                                    USARTWriteLine@ln 0082  
                                  ?_xEngineMotionInit 0001  
                                       __CFG_WRTB$OFF 000000  
                                       __CFG_WRTC$OFF 000000  
                                       __CFG_WRTD$OFF 000000  
                                               _lg2_h 0629  
                                               _lg2_l 0625  
                                      __CFG_EBTRB$OFF 000000  
                                               _errno 0036  
                                               _ivln2 0619  
                                     __end_of_ivln2_h 0675  
                                     __end_of_ivln2_l 0619  
                                               _two24 0665  
                                    ?_USARTReadString 0004  
                                   ??i2_xEngineDirSet 0005  
                                         ?i2_Led_open 000B  
                                               _usart 014F  
MotionController_getDestinationCoord@motionController 009C  
                                               pclath 000FFA  
                                               tablat 000FF5  
                                   _DigitalOutput_set 2F0E  
                                    _enableInterrupts 336E  
                                  __size_of_USARTInit 003E  
                                 ??_xEngineMotionInit 0080  
                                               plusw0 000FEB  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                                     ?_USARTWriteLine 0082  
                                               ttemp5 0061  
                                               ttemp6 0064  
                                               ttemp7 0068  
                                               status 000FD8  
                              _yellowLedSet$intlevel0 3324  
            __end_of_EngineConfigurator_configEngines 274E  
           __size_of_EngineConfigurator_configEngines 00E6  
                   ?_EngineConfigurator_configEngines 0001  
                  ??_EngineConfigurator_configEngines 0088  
                    _EngineConfigurator_configEngines 2668  
                                               wtemp8 0061  
                                  ?_DigitalOutput_set 0084  
                                     ??_xEngineDirSet 0084  
                                       _yellowLedInit 337A  
                                     ?_yEngineDirInit 0001  
                         ??_ButtonConfigurator_config 0086  
                                      __CFG_MCLRE$OFF 000000  
                                     __initialization 30E0  
                                    __end_of_Led_init 3286  
                               xEngineMotionSet@value 0082  
                                    __end_of_Led_open 3008  
                                        __end_of_cp_h 067D  
                                        __end_of_cp_l 0679  
                                        __end_of_dp_h 0611  
                                        __end_of_dp_l 0609  
                                   i2redLedSet@button 0001  
                                        __end_of_main 3174  
                                        __end_of_huge 0665  
                                 ??_DigitalOutput_set 0088  
                          i2DigitalOutput_open@output 0009  
                                        __end_of_tiny 0661  
                                      _zEngineDirInit 3382  
                              _Engine_getCurrentCoord 3252  
                             Engine_init@motionOutput 0080  
                                        i2_blueLedSet 3332  
                            _MotionController_control 06A8  
                                    ??_setupFunctions 0082  
                                     ??_USARTReadChar 0004  
                             _xEngineDirSet$intlevel0 32F4  
                           __end_of_xEngineMotionInit 3396  
                                              ??_main 00DC  
                         DigitalOutput_set@outputable 0084  
                                       __activetblptr 000002  
                                __size_of_blueLedInit 0004  
                       __size_ofi2_DigitalOutput_open 002A  
                                              ISR@tmp 001E  
                                  __size_of_Led_close 002C  
                            __end_of_Application_init 2250  
                                 __end_of_Button_init 3196  
                            __end_of_Application_loop 2A32  
                           __end_of_DigitalOutput_set 2F44  
               MotionController_init@motionController 0171  
                      __size_of_MotionController_init 00DE  
                       __end_of_MotionController_init 282C  
                                   _yEngineMotionInit 338E  
                               Button_isPressed@value 0089  
                               fp_i2_USARTWriteString 0000  
                                              i2l3214 3236  
                                              i2l3152 3356  
                                              i2l3160 3332  
                                              i2l3154 334A  
                                              i2l3156 333E  
                                              i2l5100 25FA  
                                              i2l3158 3362  
                                              i2l5102 2620  
                                              i2l5046 30B6  
                                              i2l5048 30CA  
                                              i2l5090 308C  
                                              i2l3900 2930  
                                              i2l5092 30A0  
                                              i2l3830 32B6  
                                              i2l3902 2946  
                                              i2l5094 25A6  
                                              i2l3904 2956  
                                              i2l5096 25BA  
                                              i2l3826 32A0  
                                              i2l3906 295A  
                                              i2l3850 2D3E  
                                              i2l5098 25CC  
                                              i2l3828 32A0  
                                              i2l3908 2990  
                                              i2l3844 2D06  
                                              i2l3846 2D18  
                                              i2l3848 2D3A  
                                              i2l3954 3286  
                                              i2l3892 28F4  
                                              i2l3894 2908  
                                              i2l3896 290E  
                                              i2l3898 291E  
                                              i2l4858 2F7A  
                                              _OSCCON 000FD3  
                                  ?_yEngineMotionInit 0001  
                                              _TRISB0 007C98  
                                              _TRISB1 007C99  
                                              _TRISC0 007CA0  
                                              _TRISB2 007C9A  
                                              _TRISC1 007CA1  
                                              _TRISC2 007CA2  
                                              _TRISD0 007CA8  
                                              _TRISD1 007CA9  
                                              _TRISC3 007CA3  
                                              _TRISD2 007CAA  
                                              _TRISC6 007CA6  
                                              _TRISD5 007CAD  
                                              _TRISC7 007CA7  
                                              _TRISD6 007CAE  
                                      ?_yellowLedInit 0001  
                                    __end_of___xxtofl 2132  
                                 fp__USARTWriteString 0000  
                                         _Engine_init 2ED8  
                                      __CFG_XINST$OFF 000000  
                                         _Engine_step 2A32  
                              __end_of_zEngineDirInit 3386  
                                 ??_yEngineMotionInit 0080  
                                  i2blueLedSet@button 0001  
                                              ___flge 2466  
                                           ??___aldiv 0088  
                                           ??___fladd 0088  
                                           ??___fldiv 0088  
                                      __CFG_STVREN$ON 000000  
                                           ??___flmul 008C  
                                           ??___flsub 0098  
                                           ??___fltol 009C  
            __end_of_MotionController_getCurrentCoord 2BA8  
           __size_of_MotionController_getCurrentCoord 007C  
                  ??_MotionController_getCurrentCoord 00A8  
                   ?_MotionController_getCurrentCoord 009C  
                    _MotionController_getCurrentCoord 2B2C  
                                              _redLed 003C  
                            __end_of_USARTWriteString 2C1E  
                                              _button 0038  
                                              clear_0 30E6  
                                              clear_1 30F2  
                                 __size_ofi2_Led_open 002A  
                          __size_of_DigitalInput_init 002E  
                                   __end_of_USARTInit 2ED8  
                          ??_Engine_getStepPerMetrice 0084  
                        __size_of_DigitalOutput_close 002C  
                          ??_Engine_setStepPerMetrice 0086  
                                  _DigitalOutput_init 2F44  
                         __end_ofi2_DigitalOutput_set 2FAE  
                           _ButtonConfigurator_config 3216  
                                  _DigitalOutput_open 3034  
                                        __mediumconst 0000  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
                                              tblptru 000FF8  
                                      redLedSet@value 0082  
                           __end_of_yEngineMotionInit 3392  
                                    _Button_isPressed 312C  
                                 ?_DigitalOutput_init 0080  
                                 ?_DigitalOutput_open 0088  
                                          ___flge@ff1 0080  
                                          ___flge@ff2 0084  
                                    ??_xEngineDirInit 0080  
                                        ___xxtofl@arg 00B0  
                                        ___xxtofl@exp 00AF  
                                        ___xxtofl@val 00A6  
                                          __accesstop 0080  
                             __end_of__initialization 30F8  
                             ?_LedConfigurator_config 0001  
                                     __CFG_PBADEN$OFF 000000  
        __end_of_MotionController_getDestinationCoord 2B2C  
       __size_of_MotionController_getDestinationCoord 007C  
              ??_MotionController_getDestinationCoord 00A8  
               ?_MotionController_getDestinationCoord 009C  
                _MotionController_getDestinationCoord 2AB0  
                                    ??_USARTDataReady 0003  
                MotionController_control@currentCoord 01B3  
                                       ___rparam_used 000001  
                                          ___fltol@f1 0098  
                                   _zEngineMotionInit 3396  
                              xEngineMotionSet@engine 0080  
                                     ?_zEngineDirInit 0001  
                                  ?_zEngineMotionInit 0001  
                                 Application_init@app 00DA  
                                      __pcstackCOMRAM 0001  
                                   __end_of_Led_close 3034  
                                       __end_of_lg2_h 062D  
                                       __end_of_lg2_l 0629  
                                      i2_yellowLedSet 3362  
                                ??_DigitalOutput_init 0084  
                                ??_DigitalOutput_open 008A  
                                       __end_of_ivln2 061D  
                                 Application_loop@app 008C  
                                       __end_of_two24 0669  
                         __size_ofi2_xEngineMotionSet 000C  
                                          __end_of_L1 065D  
                                          __end_of_L2 0659  
                                          __end_of_L3 0655  
                                          __end_of_L4 0651  
                                          __end_of_L5 064D  
                                          __end_of_L6 0649  
                                          __end_of_P1 0645  
                                          __end_of_P2 0641  
                                          __end_of_P3 063D  
                                          __end_of_P4 0639  
                                          __end_of_P5 0635  
                                 ??_zEngineMotionInit 0080  
                                          __end_of_bp 0671  
                                          __end_of_cp 0621  
                                Button_init@onPressed 0082  
                          __size_of_xEngineMotionInit 0004  
                                         _Button_init 3174  
                                __size_of_button1Init 0004  
                                __size_of_button1Read 0020  
                                    ??_calculateSpbrg 0092  
                                _blueLedSet$intlevel0 32C4  
                          __size_of_DigitalOutput_set 0036  
                                           ?_Led_init 0080  
                                           ?_Led_open 008A  
                                          __pbssBANK1 0100  
                      __end_of_LedConfigurator_config 2D06  
                                     ??_yellowLedInit 0080  
                                  __size_of_redLedSet 0018  
                           __end_of_zEngineMotionInit 339A  
                            DigitalOutput_init@output 0084  
                          DigitalInput_getValue@input 0083  
                                      fp_i2_redLedSet 0000  
                                  i2_USARTWriteString 2D06  
                             i2xEngineMotionSet@value 0003  
                              __end_ofi2_yellowLedSet 336E  
                                   ?i2_USARTWriteLine 0003  
                                             ?___flge 0080  
                         ?_Engine_getDestinationCoord 0080  
                                          _blueLedSet 32BA  
                                  ??i2_USARTWriteLine 0005  
                                  USARTReadString@buf 0004  
                                  USARTReadString@tmp 000F  
                                 ?i2_USARTWriteString 0001  
                                   yellowLedSet@value 0082  
                           __size_of_xEngineMotionSet 0018  
                              Button_isPressed@button 0087  
                            __end_of_enableInterrupts 3376  
                                     i2_xEngineDirSet 334A  
                                           ?___xxtofl 00A6  
                                       ?_Point_init3D 0084  
                                        ?i2_redLedSet 0001  
                          __size_of_yEngineMotionInit 0004  
                                    ??_USARTWriteLine 0084  
                   Engine_setStepPerMetrice@stepPerMm 0082  
                                  USARTWriteInt@F2579 0114  
                                          ??_Led_init 0084  
                                        ??i2_Led_open 000D  
                                          ??_Led_open 008C  
                                ??i2_USARTWriteString 0003  
                                 _xEngineMotionOutput 005C  
                                      USARTInit@usart 009A  
                                    ??_yEngineDirInit 0080  
                          ??_MotionController_control 00B6  
                             ?_Engine_getCurrentCoord 0080  
                                             __Hparam 0000  
                                          _redLedInit 337E  
                                             __Lparam 0000  
                                     ?i2_yellowLedSet 0001  
                               _DigitalInput_getValue 2D70  
                                             ___aldiv 2250  
                                     __size_of___flge 0106  
                                             ___fladd 12F0  
                                             ___fldiv 1BDE  
                            DigitalOutput_open@output 0088  
                                             ___flmul 17B2  
                                             ___flsub 2DCC  
                                             ___fltol 235E  
                                        __psmallconst 0600  
                                             __pcinit 30E0  
                                             __ramtop 0600  
                                             _blueLed 0040  
                                  __end_ofi2_Led_open 30B6  
                                             __ptext0 3152  
                                             __ptext1 29AE  
                                             __ptext2 3106  
                                             __ptext3 2BA8  
                                             __ptext4 2FDC  
                                             __ptext5 3008  
                                   __end_of_redLedSet 32EA  
                                             __ptext6 312C  
                                             __ptext7 2D70  
                                             __ptext8 3196  
                                             __ptext9 2132  
                                        __size_of_ISR 2660  
                                      ??_Point_init3D 0090  
                                        __size_of_abs 0042  
                                             _ivln2_h 0671  
                                             _ivln2_l 0615  
                                          ??___xxtofl 00AA  
                                    ___aldiv@dividend 0080  
                                   Engine_init@engine 0092  
                                             main@app 00DC  
                                   ?_Application_init 01D7  
                                   ?_Application_loop 008C  
                                      __pintcode_body 256C  
                                end_of_initialization 30F8  
                          _xEngineMotionSet$intlevel0 330C  
                                  ??_Application_init 00DA  
                                  ??_Application_loop 008E  
                  __size_of_ButtonConfigurator_config 0020  
                                  i2USARTWriteLine@ln 0003  
                          __size_of_zEngineMotionInit 0004  
                                       __Lmediumconst 0000  
                                             int_func 256C  
                                 _DigitalOutput_close 3060  
                                Engine_init@dirOutput 0082  
                      __end_of_Engine_getCurrentCoord 326C  
                        __end_ofi2_DigitalOutput_open 30E0  
                            __size_of_USARTReadString 00BA  
                                        ?_Engine_init 0080  
                                  fp__USARTReadString 0000  
                                     redLedSet@button 0080  
                                        ?_Engine_step 008A  
                               __end_of_xEngineDirSet 3302  
                            __end_of_Button_isPressed 3152  
                                    ___aldiv@quotient 008A  
                             __end_ofi2_xEngineDirSet 3356  
                                   Point_init3D@point 0090  
                                             postdec2 000FDD  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_blueLedSet 0080  
                                       ??_blueLedInit 0080  
                                  xEngineDirSet@value 0082  
                                   ?_USARTWriteString 0080  
                                    _xEngineDirOutput 0050  
                                           _PORTDbits 000F83  
                                ?_DigitalOutput_close 0088  
                               __end_of_USARTReadChar 32BA  
                                  ??_USARTWriteString 0082  
                                         ___fladd@grs 008F  
                                       ___xxtofl@sign 00AE  
                                           _USARTInit 2E9A  
                                         ___fldiv@grs 0093  
                                         ___fldiv@rem 008C  
                                     _yellowLedOutput 0167  
                    Engine_getDestinationCoord@engine 0080  
                                 setupFunctions@usart 0080  
                                     fp__yellowLedSet 0000  
                 __size_of_Engine_getDestinationCoord 0020  
                                         ___flmul@grs 0092  
                                    ??_zEngineDirInit 0080  
                                fp__xEngineMotionInit 0000  
                               _MotionController_init 274E  
                              ?_DigitalInput_getValue 0083  
                                         ?_redLedInit 0001  
                            DigitalInput_getValue@val 0085  
                                      __end_of___flge 256C  
                                    _xEngineMotionSet 3302  
                                           _Led_close 3008  
                               ??_DigitalOutput_close 008A  
                                        ?_Button_init 0080  
                                 start_initialization 30E0  
                                          ?_USARTInit 009A  
                                 __end_of_blueLedInit 337A  
                                         __end_of_ISR 2668  
                                         __end_of_lg2 0631  
                                         __end_of_abs 2E9A  
                                    _zEngineDirOutput 0048  
                                         __end_of_ovt 0625  
                             __size_of_setupFunctions 00C8  
                                __size_ofi2_redLedSet 000C  
    MotionController_getCurrentCoord@motionController 009C  
                           USARTReadString@max_length 0006  
                              DigitalOutput_init@init 0080  
                                 __size_of_blueLedSet 0018  
                        __size_ofi2_DigitalOutput_set 0034  
                                   __size_of_Led_init 001A  
                   __size_of_Engine_getStepPerMetrice 0020  
                                    USARTReadString@i 000D  
                   __size_of_Engine_setStepPerMetrice 0020  
                                   __size_of_Led_open 002C  
                           ?_Engine_getStepPerMetrice 0080  
                           ?_Engine_setStepPerMetrice 0080  
                                    __CFG_OSC$INTIO67 000000  
                                       Point_init3D@x 0084  
                                       Point_init3D@y 0088  
                                       Point_init3D@z 008C  
                                        _redLedOutput 016B  
                                       i2Led_open@led 000B  
                                       ?_yellowLedSet 0080  
                                     fp_i2_blueLedSet 0000  
                                __end_of_Point_init3D 2E58  
                              DigitalOutput_set@value 0086  
                                fp__yEngineMotionInit 0000  
                                   i2blueLedSet@value 0003  
                                            ??___flge 0088  
                          __end_ofi2_xEngineMotionSet 3362  
                                    ?i2_xEngineDirSet 0001  
                         __size_of_DigitalOutput_init 0036  
                                       ??_button1Init 0080  
                                       ??_button1Read 0082  
                                    __CFG_LPT1OSC$OFF 000000  
                         __size_of_DigitalOutput_open 002C  
                                   ??_USARTReadString 0008  
                                          ?_Led_close 008A  
                                   ?_enableInterrupts 0001  
                                           ___fladd@a 0084  
                                           ___fladd@b 0080  
                                           ___fldiv@a 0084  
                                           ___fldiv@b 0080  
                                  ??_enableInterrupts 0080  
                                   Engine_step@engine 008A  
                                i2_DigitalOutput_open 30B6  
                                           ___flmul@a 0088  
                                           ___flmul@b 0084  
                                         __pbssCOMRAM 0032  
                                        _button1Input 016F  
                                           ___flsub@a 0094  
                                           ___flsub@b 0090  
                           __size_ofi2_USARTWriteLine 001A  
                                       __pcstackBANK0 0080  
                                       __pcstackBANK1 0171  
                                 __size_of_redLedInit 0004  
                                   __end_ofsqrtf@tiny 0615  
                                   __size_of___xxtofl 01B8  
                                            ISR@F3535 0100  
                                    Button_init@buton 0084  
                                    Button_init@input 0080  
                              ?_MotionController_init 00A4  
                                    ??i2_yellowLedSet 0005  
                            i2xEngineMotionSet@engine 0001  
                               __end_of_yellowLedInit 337E  
                                      ??_yellowLedSet 0084  
                                   __CFG_CCP2MX$PORTC 000000  
                                           __pintcode 0008  
                                __size_of_Engine_init 0036  
                                            ?___aldiv 0080  
                             __size_of_xEngineDirInit 0004  
                                            ?___fladd 0080  
                                   fp__xEngineDirInit 0000  
                                __size_of_Engine_step 007E  
                                            ?___fldiv 0080  
                                            ?___flmul 0084  
                                            ?___flsub 0090  
                                            ?___fltol 0098  
                                       ?i2_blueLedSet 0001  
                             __size_of_USARTDataReady 001C  
                                   fp__USARTDataReady 0000  
                                         _blueLedInit 3376  
                                fp__zEngineMotionInit 0000  
                                  yellowLedSet@button 0080  
                                           fabsf@F463 0032  
                                         __smallconst 0600  
                               ?i2_DigitalOutput_open 0009  
                                 __end_of_button1Init 339E  
                                 __end_of_button1Read 31B6  
                                         ??_USARTInit 00A0  
                                           _redLedSet 32D2  
                                      Engine_step@dir 008C  
                         __size_ofi2_USARTWriteString 006A  
                                 _yEngineMotionOutput 0058  
                                     ___aldiv@divisor 0084  
                             __size_of_calculateSpbrg 0074  
                                     ___aldiv@counter 0088  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            i2u264_45 335E  
                                            i2u264_46 3360  
                                            _PIR1bits 000F9E  
                                            i2u265_45 3352  
                                            i2u265_46 3354  
                                            i2u266_45 3346  
                                            i2u266_46 3348  
                                            i2u267_45 336A  
                                            i2u267_46 336C  
                                            i2u268_45 333A  
                                            i2u268_46 333C  
                                            i2u277_40 3248  
                                            i2u373_40 32B6  
                                            i2u277_41 3240  
                                            i2u373_41 32B2  
                                            i2u277_48 324A  
                                            i2u382_40 291E  
                                            i2u541_48 2F98  
                                            i2u382_41 291A  
                                            i2u541_49 2FAC  
                                            i2u383_40 2930  
                                            i2u375_40 2D18  
                                            i2u383_41 292C  
                                            i2u375_41 2D14  
                                            i2u384_40 2942  
                                            i2u376_40 2D38  
                                            i2u384_41 293E  
                                            i2u376_47 2D2E  
                                            i2u385_40 2990  
                                            i2u377_40 2D5E  
                                            i2u385_41 298C  
                                            i2u377_47 2D54  
                                            i2u378_40 2D6E  
                                            i2u570_40 25BA  
                                            i2u378_41 2D6A  
                                            i2u570_41 25B6  
                                            i2u571_41 25C4  
                                            i2u572_48 25E6  
                                            i2u572_49 25FA  
                                            i2u573_48 260C  
                                            i2u573_49 2620  
                                       _blueLedOutput 0163  
                                    __CFG_WDTPS$16384 000000  
                           __size_of_Application_init 011E  
                           __size_of_Application_loop 0084  
                                      ??i2_blueLedSet 0005  
                                   ?_Button_isPressed 0087  
                      Engine_getStepPerMetrice@engine 0080  
                                        ??_blueLedSet 0084  
                               i2USARTWriteString@str 0001  
                                  ??_Button_isPressed 0089  
                               fp_i2_xEngineMotionSet 0000  
                                         ??_Led_close 008C  
                               i2xEngineDirSet@engine 0001  
                   __size_of_MotionController_control 0C48  
                                           _yellowLed 0044  
                           ?_MotionController_control 00B4  
                                 fp__xEngineMotionSet 0000  
                            ??_LedConfigurator_config 0088  
                                __size_of_Button_init 0022  
                                          ?_redLedSet 0080  
                                      _setupFunctions 282C  
                                            _Led_init 326C  
                                            _Led_open 2FDC  
                           __size_of_USARTWriteString 0076  
                            __end_of_xEngineMotionSet 331A  
                               __size_of_Point_init3D 0044  
                                  __end_of_blueLedSet 32D2  
                                       button1Read@in 0080  
                             ??_DigitalInput_getValue 0085  
                      Engine_setStepPerMetrice@engine 0080  
                               DigitalOutput_init@set 0082  
                                        ??_redLedInit 0080  
                             __size_of_USARTWriteLine 0026  
                                   fp__USARTWriteLine 0000  
                                            __Hrparam 0000  
                                            __Lrparam 0000  
                                  __CFG_BOREN$SBORDIS 000000  
                             __size_of_yEngineDirInit 0004  
                                   fp__yEngineDirInit 0000  
                                    __size_of___aldiv 010E  
                                    __size_of___fladd 04C2  
                                    __size_of___fldiv 039C  
                                    __size_of___flmul 042C  
                                    __size_of___flsub 0048  
                                    __size_of___fltol 0108  
                                 i2_DigitalOutput_set 2F7A  
                                         _button1Init 339A  
                                         _button1Read 3196  
                              ??i2_DigitalOutput_open 000B  
                    __end_of_Engine_getStepPerMetrice 3216  
                    __end_of_Engine_setStepPerMetrice 31D6  
                                __end_of_yellowLedSet 3332  
                              __end_of_setupFunctions 28F4  
                                            ___xxtofl 1F7A  
                                    i2_USARTWriteLine 3286  
                                        _Point_init3D 2E14  
                                 _redLedSet$intlevel0 32DC  
                                      Led_init@output 0080  
                              __size_of_xEngineDirSet 0018  
                                    fp__xEngineDirSet 0000  
                                            __ptext10 2E9A  
                                            __ptext11 282C  
                                            __ptext20 2E58  
                                            __ptext12 336E  
                                            __ptext21 1F7A  
                                            __ptext13 2C1E  
                                            __ptext30 2B2C  
                                            __ptext22 235E  
                                            __ptext14 2250  
                                            __ptext31 2E14  
                                            __ptext23 2DCC  
                                            __ptext15 274E  
                                            __ptext40 3302  
                                            __ptext32 3252  
                                            __ptext24 12F0  
                                            __ptext16 31B6  
                                            __ptext41 331A  
                                            __ptext33 2A32  
                                            __ptext25 17B2  
                                            __ptext17 2ED8  
                                            __ptext50 3386  
                                            __ptext42 31F6  
                                            __ptext34 3034  
                                            __ptext26 2466  
                                            __ptext18 2668  
                                            __ptext51 338A  
                                            __ptext43 326C  
                                            __ptext35 3060  
                                            __ptext27 1BDE  
                                            __ptext19 06A8  
                                            __ptext60 3286  
                                            __ptext52 338E  
                                            __ptext44 2C92  
                                            __ptext36 2F0E  
                                            __ptext28 2AB0  
                                            __ptext61 2D06  
                                            __ptext53 3392  
                                            __ptext45 2F44  
                                            __ptext37 32BA  
                                            __ptext29 31D6  
                                            __ptext70 28F4  
                                            __ptext62 308C  
                                            __ptext54 3396  
                                  __end_of_redLedInit 3382  
                                            __ptext46 3376  
                                            __ptext38 32D2  
                                            __ptext71 32A0  
                                            __ptext63 30B6  
                                            __ptext55 3174  
                                            __ptext47 337A  
                                            __ptext39 32EA  
                                            __ptext72 3236  
                                            __ptext64 2F7A  
                                            __ptext56 3216  
                                            __ptext48 337E  
                                            __ptext73 0000  
                                            __ptext65 3332  
                                            __ptext57 2FAE  
                                            __ptext49 3382  
                                            __ptext66 333E  
                                            __ptext58 339A  
                                            __ptext67 334A  
                                            __ptext68 3356  
                                            __ptext69 3362  
                                ?i2_DigitalOutput_set 0005  
                                    blueLedSet@button 0080  
                                       __size_of_main 0022  
                          MotionController_control@p1 0195  
                          MotionController_control@p2 0199  
                                     _USARTReadString 28F4  
                          MotionController_control@dx 0189  
                          MotionController_control@dy 018D  
                          MotionController_control@dz 0191  
                          MotionController_control@xs 01AD  
                          MotionController_control@ys 01AF  
                          MotionController_control@zs 01B1  
                              __size_of_USARTReadChar 001A  
                                    fp__USARTReadChar 0000  
                          ?_ButtonConfigurator_config 0001  
                         __end_of_DigitalOutput_close 308C  
                                      _xEngineDirInit 338A  
                                            int$flags 0060  
                                 calculateSpbrg@bolum 0096  
                                      _USARTDataReady 3236  
                        ??_Engine_getDestinationCoord 0084  
                                i2xEngineDirSet@value 0003  
                        Engine_getCurrentCoord@engine 0080  
                                     ?_setupFunctions 0080  
                                  i2_xEngineMotionSet 3356  
                                       ??i2_redLedSet 0005  
                                         ??_redLedSet 0084  
                     __size_of_LedConfigurator_config 0074  
                             ??_MotionController_init 00DA  
                            ??_Engine_getCurrentCoord 0084  
                                      fp__blueLedInit 0000  
                                __end_ofi2_blueLedSet 333E  
                               ??i2_DigitalOutput_set 0009  
                                            intlevel2 0000  
                                 ?i2_xEngineMotionSet 0001  
                                      _calculateSpbrg 2C1E  
                                           sqrtf@tiny 0611  
                           __size_of_enableInterrupts 0008  
                                     blueLedSet@value 0082  
                              __end_of_xEngineDirInit 338E  
                              DigitalInput_init@input 0084  
                   __end_of_ButtonConfigurator_config 3236  
                              __end_of_USARTDataReady 3252  
                                       _xEngineDirSet 32EA  
                          __end_of_DigitalOutput_init 2F7A  
                          __end_of_DigitalOutput_open 3060  
                                    _Application_init 2132  
                                        Led_close@led 008A  
                                    _Application_loop 29AE  
                                 USARTWriteString@str 0080  
                             __size_of_zEngineDirInit 0004  
            MotionController_control@motionController 00B4  
                                   fp__zEngineDirInit 0000  
                                ??i2_xEngineMotionSet 0005  
                                        ?_blueLedInit 0001  
                          _USARTWriteString$intlevel0 2BB2  
                                       fp__blueLedSet 0000  
                                 xEngineDirSet@engine 0080  
                            __size_ofi2_xEngineDirSet 000C  
                                  fp_i2_xEngineDirSet 0000  
                                       _USARTReadChar 32A0  
                      MotionController_control@p1_863 01A5  
                      MotionController_control@p1_859 019D  
                      MotionController_control@p2_860 01A1  
                                       _USARTReadByte 000000  
                      MotionController_control@p2_864 01A9  
                               DigitalInput_init@init 0080  
                               DigitalInput_init@read 0082  
                                        ___aldiv@sign 0089  
                             __end_of_USARTReadString 29AE  
                              __end_of_calculateSpbrg 2C92  
                                       ___fladd@signs 008C  
                            _Engine_getStepPerMetrice 31F6  
                                    _motionController 0119  
                            _Engine_setStepPerMetrice 31B6  
                                          i2_Led_open 308C  
                                         Led_init@led 0084  
                                    _USARTWriteString 2BA8  
                              calculateSpbrg@baudRate 008E  
                                 __end_ofi2_redLedSet 334A  
                                     _USARTWriteFloat 000000  
                                        ___fladd@aexp 008D  
                                        ___fladd@bexp 008E  
                            i2DigitalOutput_set@value 0007  
                                         Led_open@led 008A  
                       MotionController_control@intDx 01CF  
                       MotionController_control@intDy 01D3  
                       MotionController_control@intDz 01CB  
                       MotionController_control@rateX 0179  
                       MotionController_control@rateY 0171  
                       MotionController_control@rateZ 0175  
                   MotionController_control@rateX_862 0185  
                   MotionController_control@rateY_861 0181  
                   MotionController_control@rateZ_858 017D  
                                      _USARTWriteByte 000000  
                                      _USARTWriteLine 3106  
                                      _USARTWriteLong 000000  
                                       ??_Engine_init 0092  
                                       ??_Engine_step 008E  
                                     ?_xEngineDirInit 0001  
                                       _USARTWriteInt 000000  
                              _LedConfigurator_config 2C92  
                                      ?_xEngineDirSet 0080  
                    __end_of_MotionController_control 12F0  
