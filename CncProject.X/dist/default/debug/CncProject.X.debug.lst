

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 13 14:18:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94 ;; Function _redLedSet is unused but had its address taken
    95  0000                     
    96 ;; Function _yellowLedSet is unused but had its address taken
    97  0000                     
    98 ;; Function _blueLedSet is unused but had its address taken
    99  0000                     
   100 ;; Function _xEngineMotionSet is unused but had its address taken
   101  0000                     
   102 ;; Function _xEngineDirSet is unused but had its address taken
   103  0000                     
   104 ;; Function _USARTReadByte is unused but had its address taken
   105  0000                     
   106 ;; Function _USARTWriteByte is unused but had its address taken
   107  0000                     
   108 ;; Function _USARTWriteInt is unused but had its address taken
   109  0000                     
   110 ;; Function _USARTWriteLong is unused but had its address taken
   111  0000                     
   112 ;; Function _USARTWriteFloat is unused but had its address taken
   113  0000                     
   114 ;; Function i2_redLedSet is unused but had its address taken
   115  0000                     
   116 ;; Function i2_yellowLedSet is unused but had its address taken
   117  0000                     
   118 ;; Function i2_blueLedSet is unused but had its address taken
   119  0000                     
   120 ;; Function i2_xEngineMotionSet is unused but had its address taken
   121  0000                     
   122 ;; Function i2_xEngineDirSet is unused but had its address taken
   123  0000                     
   124                           	psect	smallconst
   125  000600                     __psmallconst:
   126                           	opt callstack 0
   127  000600  00                 	db	0
   128  000601  0000               	dw	0
   129  000603  0000               	dw	0
   130  000605  CFDC               	dw	53212
   131  000607  35D1               	dw	13777
   132  000609                     __end_of_dp_l:
   133                           	opt callstack 0
   134  000609  0000               	dw	0
   135  00060B  0000               	dw	0
   136  00060D  C000               	dw	49152
   137  00060F  3F15               	dw	16149
   138  000611                     __end_of_dp_h:
   139                           	opt callstack 0
   140  000611  4260               	dw	16992
   141  000613  0DA2               	dw	3490
   142  000615                     __end_ofsqrtf@tiny:
   143                           	opt callstack 0
   144  000615  A570               	dw	42352
   145  000617  36EC               	dw	14060
   146  000619                     __end_of_ivln2_l:
   147                           	opt callstack 0
   148  000619  AA3B               	dw	43579
   149  00061B  3FB8               	dw	16312
   150  00061D                     __end_of_ivln2:
   151                           	opt callstack 0
   152  00061D  384F               	dw	14415
   153  00061F  3F76               	dw	16246
   154  000621                     __end_of_cp:
   155                           	opt callstack 0
   156  000621  AA3C               	dw	43580
   157  000623  3338               	dw	13112
   158  000625                     __end_of_ovt:
   159                           	opt callstack 0
   160  000625  BE8C               	dw	48780
   161  000627  35BF               	dw	13759
   162  000629                     __end_of_lg2_l:
   163                           	opt callstack 0
   164  000629  7200               	dw	29184
   165  00062B  3F31               	dw	16177
   166  00062D                     __end_of_lg2_h:
   167                           	opt callstack 0
   168  00062D  7218               	dw	29208
   169  00062F  3F31               	dw	16177
   170  000631                     __end_of_lg2:
   171                           	opt callstack 0
   172  000631  BB4C               	dw	47948
   173  000633  3331               	dw	13105
   174  000635                     __end_of_P5:
   175                           	opt callstack 0
   176  000635  EA0E               	dw	59918
   177  000637  B5DD               	dw	46557
   178  000639                     __end_of_P4:
   179                           	opt callstack 0
   180  000639  B355               	dw	45909
   181  00063B  388A               	dw	14474
   182  00063D                     __end_of_P3:
   183                           	opt callstack 0
   184  00063D  0B61               	dw	2913
   185  00063F  BB36               	dw	47926
   186  000641                     __end_of_P2:
   187                           	opt callstack 0
   188  000641  AAAB               	dw	43691
   189  000643  3E2A               	dw	15914
   190  000645                     __end_of_P1:
   191                           	opt callstack 0
   192  000645  F142               	dw	61762
   193  000647  3E53               	dw	15955
   194  000649                     __end_of_L6:
   195                           	opt callstack 0
   196  000649  3255               	dw	12885
   197  00064B  3E6C               	dw	15980
   198  00064D                     __end_of_L5:
   199                           	opt callstack 0
   200  00064D  A305               	dw	41733
   201  00064F  3E8B               	dw	16011
   202  000651                     __end_of_L4:
   203                           	opt callstack 0
   204  000651  AAAB               	dw	43691
   205  000653  3EAA               	dw	16042
   206  000655                     __end_of_L3:
   207                           	opt callstack 0
   208  000655  6DB7               	dw	28087
   209  000657  3EDB               	dw	16091
   210  000659                     __end_of_L2:
   211                           	opt callstack 0
   212  000659  999A               	dw	39322
   213  00065B  3F19               	dw	16153
   214  00065D                     __end_of_L1:
   215                           	opt callstack 0
   216  00065D  4260               	dw	16992
   217  00065F  0DA2               	dw	3490
   218  000661                     __end_of_tiny:
   219                           	opt callstack 0
   220  000661  F2CA               	dw	62154
   221  000663  7149               	dw	29001
   222  000665                     __end_of_huge:
   223                           	opt callstack 0
   224  000665  0000               	dw	0
   225  000667  4B80               	dw	19328
   226  000669                     __end_of_two24:
   227                           	opt callstack 0
   228  000669  0000               	dw	0
   229  00066B  3F80               	dw	16256
   230  00066D  0000               	dw	0
   231  00066F  3FC0               	dw	16320
   232  000671                     __end_of_bp:
   233                           	opt callstack 0
   234  000671  AA00               	dw	43520
   235  000673  3FB8               	dw	16312
   236  000675                     __end_of_ivln2_h:
   237                           	opt callstack 0
   238  000675  23C6               	dw	9158
   239  000677  B8F6               	dw	47350
   240  000679                     __end_of_cp_l:
   241                           	opt callstack 0
   242  000679  4000               	dw	16384
   243  00067B  3F76               	dw	16246
   244  00067D                     __end_of_cp_h:
   245                           	opt callstack 0
   246  0000                     _SPBRG	set	4015
   247  0000                     _OSCCON	set	4051
   248  0000                     _TXREG	set	4013
   249  0000                     _RCREG	set	4014
   250  0000                     _PIR1bits	set	3998
   251  0000                     _PORTDbits	set	3971
   252  0000                     _LATBbits	set	3978
   253  0000                     _LATE	set	3981
   254  0000                     _LATD	set	3980
   255  0000                     _LATC	set	3979
   256  0000                     _LATB	set	3978
   257  0000                     _LATA	set	3977
   258  0000                     _LATCbits	set	3979
   259  0000                     _LATDbits	set	3980
   260  0000                     _TRISD2	set	31914
   261  0000                     _CREN	set	32092
   262  0000                     _TXEN	set	32101
   263  0000                     _TRISC7	set	31911
   264  0000                     _TRISC6	set	31910
   265  0000                     _SPEN	set	32095
   266  0000                     _SYNC	set	32100
   267  0000                     _BRGH	set	32098
   268  0000                     _RCIE	set	31981
   269  0000                     _PEIE	set	32662
   270  0000                     _GIE	set	32663
   271  0000                     _TXIF	set	31988
   272  0000                     _RCIF	set	31989
   273  0000                     _CARRY	set	32448
   274  0000                     _TRISD6	set	31918
   275  0000                     _TRISD5	set	31917
   276  0000                     _TRISB2	set	31898
   277  0000                     _TRISB1	set	31897
   278  0000                     _TRISB0	set	31896
   279  0000                     _TRISC2	set	31906
   280  0000                     _TRISC1	set	31905
   281  0000                     _TRISC0	set	31904
   282  0000                     _TRISC3	set	31907
   283  0000                     _TRISD0	set	31912
   284  0000                     _TRISD1	set	31913
   285  00067D  50                 	db	80	;'P'
   286  00067E  6F                 	db	111	;'o'
   287  00067F  69                 	db	105	;'i'
   288  000680  6E                 	db	110	;'n'
   289  000681  74                 	db	116	;'t'
   290  000682  3A                 	db	58	;':'
   291  000683  7B                 	db	123
   292  000684  78                 	db	120	;'x'
   293  000685  3A                 	db	58	;':'
   294  000686  25                 	db	37
   295  000687  2E                 	db	46
   296  000688  33                 	db	51	;'3'
   297  000689  66                 	db	102	;'f'
   298  00068A  2C                 	db	44
   299  00068B  79                 	db	121	;'y'
   300  00068C  3A                 	db	58	;':'
   301  00068D  25                 	db	37
   302  00068E  2E                 	db	46
   303  00068F  33                 	db	51	;'3'
   304  000690  66                 	db	102	;'f'
   305  000691  2C                 	db	44
   306  000692  7A                 	db	122	;'z'
   307  000693  3A                 	db	58	;':'
   308  000694  25                 	db	37
   309  000695  2E                 	db	46
   310  000696  33                 	db	51	;'3'
   311  000697  66                 	db	102	;'f'
   312  000698  7D                 	db	125
   313  000699  00                 	db	0
   314  00069A                     STR_2:
   315  00069A  62                 	db	98	;'b'
   316  00069B  61                 	db	97	;'a'
   317  00069C  73                 	db	115	;'s'
   318  00069D  C4                 	db	-60
   319  00069E  B1                 	db	-79
   320  00069F  6C                 	db	108	;'l'
   321  0006A0  6D                 	db	109	;'m'
   322  0006A1  61                 	db	97	;'a'
   323  0006A2  64                 	db	100	;'d'
   324  0006A3  C4                 	db	-60
   325  0006A4  B1                 	db	-79
   326  0006A5  00                 	db	0
   327  0006A6                     STR_1:
   328  0006A6  62                 	db	98	;'b'
   329  0006A7  61                 	db	97	;'a'
   330  0006A8  73                 	db	115	;'s'
   331  0006A9  C4                 	db	-60
   332  0006AA  B1                 	db	-79
   333  0006AB  6C                 	db	108	;'l'
   334  0006AC  64                 	db	100	;'d'
   335  0006AD  C4                 	db	-60
   336  0006AE  B1                 	db	-79
   337  0006AF  00                 	db	0
   338  0006B0                     STR_3:
   339  0006B0  0D                 	db	13
   340  0006B1  0A                 	db	10
   341  0006B2  00                 	db	0
   342  0000                     
   343                           ; #config settings
   344  0006B3  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           	psect	cinit
   347  000F3E                     __pcinit:
   348                           	opt callstack 0
   349  000F3E                     start_initialization:
   350                           	opt callstack 0
   351  000F3E                     __initialization:
   352                           	opt callstack 0
   353                           
   354                           ; Clear objects allocated to BANK0 (61 bytes)
   355  000F3E  EE00  F080         	lfsr	0,__pbssBANK0
   356  000F42  0E3D               	movlw	61
   357  000F44                     clear_0:
   358  000F44  6AEE               	clrf	postinc0,c
   359  000F46  06E8               	decf	wreg,f,c
   360  000F48  E1FD               	bnz	clear_0
   361                           
   362                           ; Clear objects allocated to COMRAM (44 bytes)
   363  000F4A  EE00  F030         	lfsr	0,__pbssCOMRAM
   364  000F4E  0E2C               	movlw	44
   365  000F50                     clear_1:
   366  000F50  6AEE               	clrf	postinc0,c
   367  000F52  06E8               	decf	wreg,f,c
   368  000F54  E1FD               	bnz	clear_1
   369  000F56                     end_of_initialization:
   370                           	opt callstack 0
   371  000F56                     __end_of__initialization:
   372                           	opt callstack 0
   373  000F56  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   374  000F58  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   375  000F5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   376  000F5C  6EF8               	movwf	tblptru,c
   377  000F5E  0100               	movlb	0
   378  000F60  EFC5  F007         	goto	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMRAM
   381  000030                     __pbssCOMRAM:
   382                           	opt callstack 0
   383  000030                     _errno:
   384                           	opt callstack 0
   385  000030                     	ds	2
   386  000032                     _blueLed:
   387                           	opt callstack 0
   388  000032                     	ds	4
   389  000036                     _yellowLed:
   390                           	opt callstack 0
   391  000036                     	ds	4
   392  00003A                     _yellowLedOutput:
   393                           	opt callstack 0
   394  00003A                     	ds	4
   395  00003E                     _redLedOutput:
   396                           	opt callstack 0
   397  00003E                     	ds	4
   398  000042                     _zEngineDirOutput:
   399                           	opt callstack 0
   400  000042                     	ds	4
   401  000046                     _yEngineDirOutput:
   402                           	opt callstack 0
   403  000046                     	ds	4
   404  00004A                     _xEngineDirOutput:
   405                           	opt callstack 0
   406  00004A                     	ds	4
   407  00004E                     _zEngineMotionOutput:
   408                           	opt callstack 0
   409  00004E                     	ds	4
   410  000052                     _yEngineMotionOutput:
   411                           	opt callstack 0
   412  000052                     	ds	4
   413  000056                     _xEngineMotionOutput:
   414                           	opt callstack 0
   415  000056                     	ds	4
   416  00005A                     _button1Input:
   417                           	opt callstack 0
   418  00005A                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  000080                     __pbssBANK0:
   422                           	opt callstack 0
   423  000080                     ISR@F3567:
   424                           	opt callstack 0
   425  000080                     	ds	20
   426  000094                     	ds	5
   427  000099                     fabsf@F463:
   428                           	opt callstack 0
   429  000099                     	ds	4
   430  00009D                     _button:
   431                           	opt callstack 0
   432  00009D                     	ds	4
   433  0000A1                     _usart:
   434                           	opt callstack 0
   435  0000A1                     	ds	20
   436  0000B5                     _redLed:
   437                           	opt callstack 0
   438  0000B5                     	ds	4
   439  0000B9                     _blueLedOutput:
   440                           	opt callstack 0
   441  0000B9                     	ds	4
   442                           
   443                           	psect	cstackBANK0
   444  0000BD                     __pcstackBANK0:
   445                           	opt callstack 0
   446  0000BD                     ?_DigitalInput_getValue:
   447                           	opt callstack 0
   448  0000BD                     ?_button1Read:
   449                           	opt callstack 0
   450  0000BD                     ?_DigitalOutput_init:
   451                           	opt callstack 0
   452  0000BD                     ?_Led_init:
   453                           	opt callstack 0
   454  0000BD                     ?_Button_init:
   455                           	opt callstack 0
   456  0000BD                     ?___aldiv:
   457                           	opt callstack 0
   458  0000BD                     Button_init@input:
   459                           	opt callstack 0
   460  0000BD                     Led_init@output:
   461                           	opt callstack 0
   462  0000BD                     USARTWriteString@str:
   463                           	opt callstack 0
   464  0000BD                     setupFunctions@usart:
   465                           	opt callstack 0
   466  0000BD                     DigitalInput_getValue@input:
   467                           	opt callstack 0
   468  0000BD                     DigitalOutput_init@init:
   469                           	opt callstack 0
   470  0000BD                     DigitalOutput_open@output:
   471                           	opt callstack 0
   472  0000BD                     DigitalOutput_close@output:
   473                           	opt callstack 0
   474  0000BD                     button1Read@button:
   475                           	opt callstack 0
   476  0000BD                     ___aldiv@dividend:
   477                           	opt callstack 0
   478                           
   479                           ; 4 bytes @ 0x0
   480  0000BD                     	ds	2
   481  0000BF                     ??_button1Read:
   482  0000BF                     Button_init@onPressed:
   483                           	opt callstack 0
   484  0000BF                     Led_open@led:
   485                           	opt callstack 0
   486  0000BF                     Led_close@led:
   487                           	opt callstack 0
   488  0000BF                     USARTWriteLine@ln:
   489                           	opt callstack 0
   490  0000BF                     DigitalOutput_init@set:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  0000BF                     	ds	1
   495  0000C0                     ?_DigitalInput_init:
   496                           	opt callstack 0
   497  0000C0                     DigitalInput_init@init:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x3
   501  0000C0                     	ds	1
   502  0000C1                     Application_loop@app:
   503                           	opt callstack 0
   504  0000C1                     Button_init@buton:
   505                           	opt callstack 0
   506  0000C1                     Led_init@led:
   507                           	opt callstack 0
   508  0000C1                     DigitalOutput_init@output:
   509                           	opt callstack 0
   510  0000C1                     ___aldiv@divisor:
   511                           	opt callstack 0
   512                           
   513                           ; 4 bytes @ 0x4
   514  0000C1                     	ds	1
   515  0000C2                     DigitalInput_init@read:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x5
   519  0000C2                     	ds	1
   520  0000C3                     
   521                           ; 1 bytes @ 0x6
   522  0000C3                     	ds	1
   523  0000C4                     
   524                           ; 1 bytes @ 0x7
   525  0000C4                     	ds	1
   526  0000C5                     ___aldiv@counter:
   527                           	opt callstack 0
   528                           
   529                           ; 1 bytes @ 0x8
   530  0000C5                     	ds	1
   531  0000C6                     ___aldiv@sign:
   532                           	opt callstack 0
   533  0000C6                     DigitalInput_init@input:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x9
   537  0000C6                     	ds	1
   538  0000C7                     ___aldiv@quotient:
   539                           	opt callstack 0
   540                           
   541                           ; 4 bytes @ 0xA
   542  0000C7                     	ds	1
   543  0000C8                     
   544                           ; 1 bytes @ 0xB
   545  0000C8                     	ds	3
   546  0000CB                     ?_calculateSpbrg:
   547                           	opt callstack 0
   548  0000CB                     calculateSpbrg@baudRate:
   549                           	opt callstack 0
   550                           
   551                           ; 4 bytes @ 0xE
   552  0000CB                     	ds	4
   553  0000CF                     ??_calculateSpbrg:
   554                           
   555                           ; 1 bytes @ 0x12
   556  0000CF                     	ds	4
   557  0000D3                     calculateSpbrg@bolum:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x16
   561  0000D3                     	ds	4
   562  0000D7                     USARTInit@usart:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x1A
   566  0000D7                     	ds	2
   567  0000D9                     USARTInit@baudRate:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x1C
   571  0000D9                     	ds	4
   572  0000DD                     ?_Application_init:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x20
   576  0000DD                     	ds	2
   577  0000DF                     Application_init@app:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x22
   581  0000DF                     	ds	2
   582  0000E1                     main@app:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x24
   586  0000E1                     	ds	2
   587                           
   588                           	psect	cstackCOMRAM
   589  000001                     __pcstackCOMRAM:
   590                           	opt callstack 0
   591  000001                     ?_USARTDataReady:
   592                           	opt callstack 0
   593  000001                     softusart_yaz@veri:
   594                           	opt callstack 0
   595  000001                     i2USARTWriteString@str:
   596                           	opt callstack 0
   597  000001                     i2DigitalOutput_open@output:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x0
   601  000001                     	ds	1
   602  000002                     softusart_yaz@i:
   603                           	opt callstack 0
   604                           
   605                           ; 1 bytes @ 0x1
   606  000002                     	ds	1
   607  000003                     ??_USARTDataReady:
   608  000003                     softUSARTWriteString@str:
   609                           	opt callstack 0
   610  000003                     i2Led_open@led:
   611                           	opt callstack 0
   612  000003                     i2USARTWriteLine@ln:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616  000003                     	ds	1
   617  000004                     USARTReadString@buf:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x3
   621  000004                     	ds	1
   622  000005                     
   623                           ; 1 bytes @ 0x4
   624  000005                     	ds	1
   625  000006                     USARTReadString@max_length:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x5
   629  000006                     	ds	2
   630  000008                     ??_USARTReadString:
   631                           
   632                           ; 1 bytes @ 0x7
   633  000008                     	ds	5
   634  00000D                     USARTReadString@i:
   635                           	opt callstack 0
   636                           
   637                           ; 2 bytes @ 0xC
   638  00000D                     	ds	2
   639  00000F                     USARTReadString@tmp:
   640                           	opt callstack 0
   641                           
   642                           ; 1 bytes @ 0xE
   643  00000F                     	ds	1
   644  000010                     ??_ISR:
   645                           
   646                           ; 1 bytes @ 0xF
   647  000010                     	ds	12
   648  00001C                     ISR@tmp:
   649                           	opt callstack 0
   650                           
   651                           ; 20 bytes @ 0x1B
   652  00001C                     	ds	20
   653                           
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   656 ;;
   657 ;; *************** function _main *****************
   658 ;; Defined at:
   659 ;;		line 17 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  app             2   36[BANK0 ] struct .
   664 ;; Return value:  Size  Location     Type
   665 ;;                  2  534[None  ] int 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   673 ;;      Params:         0       0       0       0       0       0       0
   674 ;;      Locals:         0       2       0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0
   676 ;;      Totals:         0       2       0       0       0       0       0
   677 ;;Total ram usage:        2 bytes
   678 ;; Hardware stack levels required when called:    8
   679 ;; This function calls:
   680 ;;		_Application_init
   681 ;;		_Application_loop
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text0
   688  000F8A                     __ptext0:
   689                           	opt callstack 0
   690  000F8A                     _main:
   691                           	opt callstack 23
   692  000F8A                     
   693                           ;main.c: 19:     Application app = Application_init();
   694  000F8A  EC5D  F004         	call	_Application_init	;wreg free
   695  000F8E  C0DD  F0E1         	movff	?_Application_init,main@app
   696  000F92  C0DE  F0E2         	movff	?_Application_init+1,main@app+1
   697  000F96                     l3105:
   698                           
   699                           ;main.c: 24:         Application_loop(&app);
   700  000F96  0EE1               	movlw	low main@app
   701  000F98  0100               	movlb	0	; () banked
   702  000F9A  6FC1               	movwf	Application_loop@app& (0+255),b
   703  000F9C  0E00               	movlw	high main@app
   704  000F9E  6FC2               	movwf	(Application_loop@app+1)& (0+255),b
   705  000FA0  EC84  F005         	call	_Application_loop	;wreg free
   706  000FA4  EFCB  F007         	goto	l3105
   707  000FA8  EF07  F000         	goto	start
   708  000FAC                     __end_of_main:
   709                           	opt callstack 0
   710                           
   711 ;; *************** function _Application_loop *****************
   712 ;; Defined at:
   713 ;;		line 102 in file "application/Application.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  app             2    4[BANK0 ] PTR struct .
   716 ;;		 -> main@app(2), 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   728 ;;      Params:         0       2       0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0
   731 ;;      Totals:         0       2       0       0       0       0       0
   732 ;;Total ram usage:        2 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    6
   735 ;; This function calls:
   736 ;;		_DigitalInput_getValue
   737 ;;		_Led_close
   738 ;;		_Led_open
   739 ;;		_USARTWriteLine
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746  000B08                     __ptext1:
   747                           	opt callstack 0
   748  000B08                     _Application_loop:
   749                           	opt callstack 24
   750  000B08                     
   751                           ;application/Application.c: 112:     Led_open(&redLed);
   752  000B08  0EB5               	movlw	low _redLed
   753  000B0A  0100               	movlb	0	; () banked
   754  000B0C  6FBF               	movwf	Led_open@led& (0+255),b
   755  000B0E  0E00               	movlw	high _redLed
   756  000B10  6FC0               	movwf	(Led_open@led+1)& (0+255),b
   757  000B12  EC5E  F007         	call	_Led_open	;wreg free
   758  000B16                     
   759                           ;application/Application.c: 115:     if (DigitalInput_getValue(&button1Input)) {
   760  000B16  0E5A               	movlw	low _button1Input
   761  000B18  0100               	movlb	0	; () banked
   762  000B1A  6FBD               	movwf	DigitalInput_getValue@input& (0+255),b
   763  000B1C  0E00               	movlw	high _button1Input
   764  000B1E  6FBE               	movwf	(DigitalInput_getValue@input+1)& (0+255),b
   765  000B20  EC5F  F008         	call	_DigitalInput_getValue	;wreg free
   766  000B24  0100               	movlb	0	; () banked
   767  000B26  51BD               	movf	?_DigitalInput_getValue& (0+255),w,b
   768  000B28  11BE               	iorwf	(?_DigitalInput_getValue+1)& (0+255),w,b
   769  000B2A  B4D8               	btfsc	status,2,c
   770  000B2C  EF9A  F005         	goto	u2001
   771  000B30  EF9C  F005         	goto	u2000
   772  000B34                     u2001:
   773  000B34  EFBF  F005         	goto	l2961
   774  000B38                     u2000:
   775  000B38                     
   776                           ; BSR set to: 0
   777                           ;application/Application.c: 117:         usart.writeLine("basÄ±ldÄ±");
   778  000B38  0EA6               	movlw	low STR_1
   779  000B3A  6FBF               	movwf	USARTWriteLine@ln& (0+255),b
   780  000B3C  0E06               	movlw	high STR_1
   781  000B3E  6FC0               	movwf	(USARTWriteLine@ln+1)& (0+255),b
   782  000B40  EE20  F0AB         	lfsr	2,_usart+10
   783  000B44  D802               	call	u2018
   784  000B46  EFAF  F005         	goto	u2019
   785  000B4A                     u2018:
   786  000B4A  0005               	push	
   787  000B4C  6EFA               	movwf	pclath,c
   788  000B4E  50DE               	movf	postinc2,w,c
   789  000B50  6EFD               	movwf	tosl,c
   790  000B52  50DE               	movf	postinc2,w,c
   791  000B54  6EFE               	movwf	tosh,c
   792  000B56  50F8               	movf	tblptru,w,c
   793  000B58  6EFF               	movwf	tosu,c
   794  000B5A  50FA               	movf	pclath,w,c
   795  000B5C  0012               	return		;indir
   796  000B5E                     u2019:
   797  000B5E                     
   798                           ;application/Application.c: 118:         Led_open(&blueLed);
   799  000B5E  0E32               	movlw	low _blueLed
   800  000B60  0100               	movlb	0	; () banked
   801  000B62  6FBF               	movwf	Led_open@led& (0+255),b
   802  000B64  0E00               	movlw	high _blueLed
   803  000B66  6FC0               	movwf	(Led_open@led+1)& (0+255),b
   804  000B68  EC5E  F007         	call	_Led_open	;wreg free
   805  000B6C                     
   806                           ;application/Application.c: 119:         Led_close(&yellowLed);
   807  000B6C  0E36               	movlw	low _yellowLed
   808  000B6E  0100               	movlb	0	; () banked
   809  000B70  6FBF               	movwf	Led_close@led& (0+255),b
   810  000B72  0E00               	movlw	high _yellowLed
   811  000B74  6FC0               	movwf	(Led_close@led+1)& (0+255),b
   812  000B76  EC74  F007         	call	_Led_close	;wreg free
   813                           
   814                           ;application/Application.c: 121:     } else {
   815  000B7A  EFD9  F005         	goto	l114
   816  000B7E                     l2961:
   817                           
   818                           ; BSR set to: 0
   819                           ;application/Application.c: 122:         usart.writeLine("basÄ±lmadÄ±");
   820  000B7E  0E9A               	movlw	low STR_2
   821  000B80  6FBF               	movwf	USARTWriteLine@ln& (0+255),b
   822  000B82  0E06               	movlw	high STR_2
   823  000B84  6FC0               	movwf	(USARTWriteLine@ln+1)& (0+255),b
   824  000B86  EE20  F0AB         	lfsr	2,_usart+10
   825  000B8A  D802               	call	u2028
   826  000B8C  EFD2  F005         	goto	u2029
   827  000B90                     u2028:
   828  000B90  0005               	push	
   829  000B92  6EFA               	movwf	pclath,c
   830  000B94  50DE               	movf	postinc2,w,c
   831  000B96  6EFD               	movwf	tosl,c
   832  000B98  50DE               	movf	postinc2,w,c
   833  000B9A  6EFE               	movwf	tosh,c
   834  000B9C  50F8               	movf	tblptru,w,c
   835  000B9E  6EFF               	movwf	tosu,c
   836  000BA0  50FA               	movf	pclath,w,c
   837  000BA2  0012               	return		;indir
   838  000BA4                     u2029:
   839  000BA4                     
   840                           ;application/Application.c: 124:         Led_close(&blueLed);
   841  000BA4  0E32               	movlw	low _blueLed
   842  000BA6  0100               	movlb	0	; () banked
   843  000BA8  6FBF               	movwf	Led_close@led& (0+255),b
   844  000BAA  0E00               	movlw	high _blueLed
   845  000BAC  6FC0               	movwf	(Led_close@led+1)& (0+255),b
   846  000BAE  EC74  F007         	call	_Led_close	;wreg free
   847  000BB2                     l114:
   848  000BB2  0012               	return		;funcret
   849  000BB4                     __end_of_Application_loop:
   850                           	opt callstack 0
   851                           
   852 ;; *************** function _USARTWriteLine *****************
   853 ;; Defined at:
   854 ;;		line 93 in file "usart/UsartFunctions.h"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  ln              2    2[BANK0 ] PTR const unsigned char 
   857 ;;		 -> ISR@tmp(20), STR_2(12), STR_1(10), 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   869 ;;      Params:         0       2       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0
   872 ;;      Totals:         0       2       0       0       0       0       0
   873 ;;Total ram usage:        2 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    5
   876 ;; This function calls:
   877 ;;		_USARTWriteString
   878 ;; This function is called by:
   879 ;;		_setupFunctions
   880 ;;		_Application_loop
   881 ;;		_ISR
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text2
   886  000F64                     __ptext2:
   887                           	opt callstack 0
   888  000F64                     _USARTWriteLine:
   889                           	opt callstack 0
   890                           
   891                           ;Skip over the trampoline to the duplicate function for level 2
   892  000F64  A25C               	btfss	int$flags,1,c
   893  000F66  EFB7  F007         	goto	_USARTWriteLine$intlevel0
   894  000F6A  EF22  F008         	goto	i2_USARTWriteLine
   895  000F6E                     _USARTWriteLine$intlevel0:
   896                           	opt callstack 24
   897  000F6E                     
   898                           ;usart/UsartFunctions.h: 94:     USARTWriteString(ln);
   899  000F6E  C0BF  F0BD         	movff	USARTWriteLine@ln,USARTWriteString@str
   900  000F72  C0C0  F0BE         	movff	USARTWriteLine@ln+1,USARTWriteString@str+1
   901  000F76  ECDA  F005         	call	_USARTWriteString	;wreg free
   902                           
   903                           ;usart/UsartFunctions.h: 95:     USARTWriteString("\r\n");
   904  000F7A  0EB0               	movlw	low STR_3
   905  000F7C  0100               	movlb	0	; () banked
   906  000F7E  6FBD               	movwf	USARTWriteString@str& (0+255),b
   907  000F80  0E06               	movlw	high STR_3
   908  000F82  6FBE               	movwf	(USARTWriteString@str+1)& (0+255),b
   909  000F84  ECDA  F005         	call	_USARTWriteString	;wreg free
   910  000F88  0012               	return		;funcret
   911  000F8A                     __end_of_USARTWriteLine:
   912                           	opt callstack 0
   913                           
   914 ;; *************** function _USARTWriteString *****************
   915 ;; Defined at:
   916 ;;		line 71 in file "usart/UsartFunctions.h"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  str             2    0[BANK0 ] PTR const unsigned char 
   919 ;;		 -> STR_3(3), ISR@tmp(20), STR_2(12), STR_1(10), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   931 ;;      Params:         0       2       0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0
   934 ;;      Totals:         0       2       0       0       0       0       0
   935 ;;Total ram usage:        2 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    4
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_USARTWriteLine
   942 ;;		_setupFunctions
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text3
   947  000BB4                     __ptext3:
   948                           	opt callstack 0
   949  000BB4                     _USARTWriteString:
   950                           	opt callstack 0
   951                           
   952                           ;Skip over the trampoline to the duplicate function for level 2
   953  000BB4  A25C               	btfss	int$flags,1,c
   954  000BB6  EFDF  F005         	goto	_USARTWriteString$intlevel0
   955  000BBA  EF89  F006         	goto	i2_USARTWriteString
   956  000BBE                     _USARTWriteString$intlevel0:
   957                           	opt callstack 24
   958  000BBE                     
   959                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
   960  000BBE  EFFC  F005         	goto	l2835
   961  000BC2                     l442:
   962  000BC2  A89E               	btfss	3998,4,c	;volatile
   963  000BC4  EFE6  F005         	goto	u1931
   964  000BC8  EFE8  F005         	goto	u1930
   965  000BCC                     u1931:
   966  000BCC  EFE1  F005         	goto	l442
   967  000BD0                     u1930:
   968  000BD0                     
   969                           ;usart/UsartFunctions.h: 77:         TXREG = (*str);
   970  000BD0  C0BD  FFF6         	movff	USARTWriteString@str,tblptrl
   971  000BD4  C0BE  FFF7         	movff	USARTWriteString@str+1,tblptrh
   972  000BD8  6AF8               	clrf	tblptru,c
   973  000BDA  0E05               	movlw	(high __ramtop+-1)
   974  000BDC  64F7               	cpfsgt	tblptrh,c
   975  000BDE  D003               	bra	u1947
   976  000BE0  0008               	tblrd		*
   977  000BE2  50F5               	movf	tablat,w,c
   978  000BE4  D005               	bra	u1940
   979  000BE6                     u1947:
   980  000BE6  CFF6 FFE9          	movff	tblptrl,fsr0l
   981  000BEA  CFF7 FFEA          	movff	tblptrh,fsr0h
   982  000BEE  50EF               	movf	indf0,w,c
   983  000BF0                     u1940:
   984  000BF0  6EAD               	movwf	173,c	;volatile
   985  000BF2                     
   986                           ;usart/UsartFunctions.h: 80:         str++;
   987  000BF2  0100               	movlb	0	; () banked
   988  000BF4  4BBD               	infsnz	USARTWriteString@str& (0+255),f,b
   989  000BF6  2BBE               	incf	(USARTWriteString@str+1)& (0+255),f,b
   990  000BF8                     l2835:
   991                           
   992                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
   993  000BF8  C0BD  FFF6         	movff	USARTWriteString@str,tblptrl
   994  000BFC  C0BE  FFF7         	movff	USARTWriteString@str+1,tblptrh
   995  000C00  6AF8               	clrf	tblptru,c
   996  000C02  0E05               	movlw	(high __ramtop+-1)
   997  000C04  64F7               	cpfsgt	tblptrh,c
   998  000C06  D003               	bra	u1957
   999  000C08  0008               	tblrd		*
  1000  000C0A  50F5               	movf	tablat,w,c
  1001  000C0C  D005               	bra	u1950
  1002  000C0E                     u1957:
  1003  000C0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1004  000C12  CFF7 FFEA          	movff	tblptrh,fsr0h
  1005  000C16  50EF               	movf	indf0,w,c
  1006  000C18                     u1950:
  1007  000C18  0900               	iorlw	0
  1008  000C1A  A4D8               	btfss	status,2,c
  1009  000C1C  EF12  F006         	goto	u1961
  1010  000C20  EF14  F006         	goto	u1960
  1011  000C24                     u1961:
  1012  000C24  EFE1  F005         	goto	l442
  1013  000C28                     u1960:
  1014  000C28  0012               	return		;funcret
  1015  000C2A                     __end_of_USARTWriteString:
  1016                           	opt callstack 0
  1017                           
  1018 ;; *************** function _Led_open *****************
  1019 ;; Defined at:
  1020 ;;		line 11 in file "led/Led.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  led             2    2[BANK0 ] PTR struct Led
  1023 ;;		 -> blueLed(4), redLed(4), yellowLed(4), 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1035 ;;      Params:         0       2       0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0
  1038 ;;      Totals:         0       2       0       0       0       0       0
  1039 ;;Total ram usage:        2 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    5
  1042 ;; This function calls:
  1043 ;;		_DigitalOutput_open
  1044 ;; This function is called by:
  1045 ;;		_Application_loop
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text4
  1050  000EBC                     __ptext4:
  1051                           	opt callstack 0
  1052  000EBC                     _Led_open:
  1053                           	opt callstack 24
  1054  000EBC                     
  1055                           ;led/Led.c: 12:     led->isOpen = 1;
  1056  000EBC  0100               	movlb	0	; () banked
  1057  000EBE  EE20 F002          	lfsr	2,2
  1058  000EC2  51BF               	movf	Led_open@led& (0+255),w,b
  1059  000EC4  26D9               	addwf	fsr2l,f,c
  1060  000EC6  51C0               	movf	(Led_open@led+1)& (0+255),w,b
  1061  000EC8  22DA               	addwfc	fsr2h,f,c
  1062  000ECA  0E01               	movlw	1
  1063  000ECC  6EDE               	movwf	postinc2,c
  1064  000ECE  0E00               	movlw	0
  1065  000ED0  6EDD               	movwf	postdec2,c
  1066  000ED2                     
  1067                           ; BSR set to: 0
  1068                           ;led/Led.c: 13:     DigitalOutput_open(led->output);
  1069  000ED2  C0BF  FFD9         	movff	Led_open@led,fsr2l
  1070  000ED6  C0C0  FFDA         	movff	Led_open@led+1,fsr2h
  1071  000EDA  CFDE F0BD          	movff	postinc2,DigitalOutput_open@output
  1072  000EDE  CFDD F0BE          	movff	postdec2,DigitalOutput_open@output+1
  1073  000EE2  EC3C  F008         	call	_DigitalOutput_open	;wreg free
  1074  000EE6  0012               	return		;funcret
  1075  000EE8                     __end_of_Led_open:
  1076                           	opt callstack 0
  1077                           
  1078 ;; *************** function _DigitalOutput_open *****************
  1079 ;; Defined at:
  1080 ;;		line 11 in file "io/digitalOutput/DigitalOutput.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  1083 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  1084 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), yellowLedOutput(4), 
  1085 ;;		 -> redLedOutput(4), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1097 ;;      Params:         0       2       0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0
  1100 ;;      Totals:         0       2       0       0       0       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    4
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_Led_open
  1108 ;;		_Engine_step
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text5
  1113  001078                     __ptext5:
  1114                           	opt callstack 0
  1115  001078                     _DigitalOutput_open:
  1116                           	opt callstack 24
  1117  001078                     
  1118                           ;io/digitalOutput/DigitalOutput.c: 13:     (*output->set)(output,1);
  1119  001078  0100               	movlb	0	; () banked
  1120  00107A  EE20 F002          	lfsr	2,2
  1121  00107E  51BD               	movf	DigitalOutput_open@output& (0+255),w,b
  1122  001080  26D9               	addwf	fsr2l,f,c
  1123  001082  51BE               	movf	(DigitalOutput_open@output+1)& (0+255),w,b
  1124  001084  22DA               	addwfc	fsr2h,f,c
  1125  001086  0E01               	movlw	1
  1126  001088  6EDE               	movwf	postinc2,c
  1127  00108A  0E00               	movlw	0
  1128  00108C  6EDD               	movwf	postdec2,c
  1129  00108E                     
  1130                           ; BSR set to: 0
  1131  00108E  0012               	return		;funcret
  1132  001090                     __end_of_DigitalOutput_open:
  1133                           	opt callstack 0
  1134                           
  1135 ;; *************** function _Led_close *****************
  1136 ;; Defined at:
  1137 ;;		line 16 in file "led/Led.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  led             2    2[BANK0 ] PTR struct Led
  1140 ;;		 -> blueLed(4), yellowLed(4), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1152 ;;      Params:         0       2       0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0
  1155 ;;      Totals:         0       2       0       0       0       0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    5
  1159 ;; This function calls:
  1160 ;;		_DigitalOutput_close
  1161 ;; This function is called by:
  1162 ;;		_Application_loop
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text6
  1167  000EE8                     __ptext6:
  1168                           	opt callstack 0
  1169  000EE8                     _Led_close:
  1170                           	opt callstack 24
  1171  000EE8                     
  1172                           ;led/Led.c: 17:     led->isOpen = 0;
  1173  000EE8  0100               	movlb	0	; () banked
  1174  000EEA  EE20 F002          	lfsr	2,2
  1175  000EEE  51BF               	movf	Led_close@led& (0+255),w,b
  1176  000EF0  26D9               	addwf	fsr2l,f,c
  1177  000EF2  51C0               	movf	(Led_close@led+1)& (0+255),w,b
  1178  000EF4  22DA               	addwfc	fsr2h,f,c
  1179  000EF6  0E00               	movlw	0
  1180  000EF8  6EDE               	movwf	postinc2,c
  1181  000EFA  0E00               	movlw	0
  1182  000EFC  6EDD               	movwf	postdec2,c
  1183  000EFE                     
  1184                           ; BSR set to: 0
  1185                           ;led/Led.c: 18:     DigitalOutput_close(led->output);
  1186  000EFE  C0BF  FFD9         	movff	Led_close@led,fsr2l
  1187  000F02  C0C0  FFDA         	movff	Led_close@led+1,fsr2h
  1188  000F06  CFDE F0BD          	movff	postinc2,DigitalOutput_close@output
  1189  000F0A  CFDD F0BE          	movff	postdec2,DigitalOutput_close@output+1
  1190  000F0E  EC48  F008         	call	_DigitalOutput_close	;wreg free
  1191  000F12  0012               	return		;funcret
  1192  000F14                     __end_of_Led_close:
  1193                           	opt callstack 0
  1194                           
  1195 ;; *************** function _DigitalOutput_close *****************
  1196 ;; Defined at:
  1197 ;;		line 16 in file "io/digitalOutput/DigitalOutput.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  1200 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  1201 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), yellowLedOutput(4), 
  1202 ;;		 -> redLedOutput(4), 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1214 ;;      Params:         0       2       0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0
  1217 ;;      Totals:         0       2       0       0       0       0       0
  1218 ;;Total ram usage:        2 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    4
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_Led_close
  1225 ;;		_Engine_step
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text7
  1230  001090                     __ptext7:
  1231                           	opt callstack 0
  1232  001090                     _DigitalOutput_close:
  1233                           	opt callstack 24
  1234  001090                     
  1235                           ;io/digitalOutput/DigitalOutput.c: 18:     output->set(output,0);
  1236  001090  0100               	movlb	0	; () banked
  1237  001092  EE20 F002          	lfsr	2,2
  1238  001096  51BD               	movf	DigitalOutput_close@output& (0+255),w,b
  1239  001098  26D9               	addwf	fsr2l,f,c
  1240  00109A  51BE               	movf	(DigitalOutput_close@output+1)& (0+255),w,b
  1241  00109C  22DA               	addwfc	fsr2h,f,c
  1242  00109E  0E00               	movlw	0
  1243  0010A0  6EDE               	movwf	postinc2,c
  1244  0010A2  0E00               	movlw	0
  1245  0010A4  6EDD               	movwf	postdec2,c
  1246  0010A6                     
  1247                           ; BSR set to: 0
  1248  0010A6  0012               	return		;funcret
  1249  0010A8                     __end_of_DigitalOutput_close:
  1250                           	opt callstack 0
  1251                           
  1252 ;; *************** function _DigitalInput_getValue *****************
  1253 ;; Defined at:
  1254 ;;		line 13 in file "io/digitalinput/DigitalInput.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  input           2    0[BANK0 ] PTR struct DigitalInput
  1257 ;;		 -> button1Input(2), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  value           2    0        int 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2    0[BANK0 ] int 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1269 ;;      Params:         0       2       0       0       0       0       0
  1270 ;;      Locals:         0       2       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0
  1272 ;;      Totals:         0       4       0       0       0       0       0
  1273 ;;Total ram usage:        4 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    4
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_Application_loop
  1280 ;;		_Button_isPressed
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text8
  1285  0010BE                     __ptext8:
  1286                           	opt callstack 0
  1287  0010BE                     _DigitalInput_getValue:
  1288                           	opt callstack 25
  1289  0010BE                     
  1290                           ;io/digitalinput/DigitalInput.c: 15:     return value;
  1291  0010BE  0E00               	movlw	0
  1292  0010C0  0100               	movlb	0	; () banked
  1293  0010C2  6FBE               	movwf	(?_DigitalInput_getValue+1)& (0+255),b
  1294  0010C4  0E00               	movlw	0
  1295  0010C6  6FBD               	movwf	?_DigitalInput_getValue& (0+255),b
  1296  0010C8                     
  1297                           ; BSR set to: 0
  1298  0010C8  0012               	return		;funcret
  1299  0010CA                     __end_of_DigitalInput_getValue:
  1300                           	opt callstack 0
  1301                           
  1302 ;; *************** function _Application_init *****************
  1303 ;; Defined at:
  1304 ;;		line 44 in file "application/Application.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  app             2   34[BANK0 ] struct .
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2   32[BANK0 ] struct .
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         0       2       0       0       0       0       0
  1319 ;;      Locals:         0       2       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0
  1321 ;;      Totals:         0       4       0       0       0       0       0
  1322 ;;Total ram usage:        4 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    7
  1325 ;; This function calls:
  1326 ;;		_ButtonConfigurator_config
  1327 ;;		_Button_init
  1328 ;;		_LedConfigurator_config
  1329 ;;		_Led_init
  1330 ;;		_USARTInit
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text9
  1337  0008BA                     __ptext9:
  1338                           	opt callstack 0
  1339  0008BA                     _Application_init:
  1340                           	opt callstack 23
  1341  0008BA                     
  1342                           ;application/Application.c: 45:     Application app;;application/Application.c: 46:     
      +                          app.id = 0;
  1343  0008BA  0E00               	movlw	0
  1344  0008BC  0100               	movlb	0	; () banked
  1345  0008BE  6FE0               	movwf	(Application_init@app+1)& (0+255),b
  1346  0008C0  0E00               	movlw	0
  1347  0008C2  6FDF               	movwf	Application_init@app& (0+255),b
  1348                           
  1349                           ;application/Application.c: 48:     LATA = 0;
  1350  0008C4  0E00               	movlw	0
  1351  0008C6  6E89               	movwf	137,c	;volatile
  1352                           
  1353                           ;application/Application.c: 49:     LATB = 0;
  1354  0008C8  0E00               	movlw	0
  1355  0008CA  6E8A               	movwf	138,c	;volatile
  1356                           
  1357                           ;application/Application.c: 50:     LATC = 0;
  1358  0008CC  0E00               	movlw	0
  1359  0008CE  6E8B               	movwf	139,c	;volatile
  1360                           
  1361                           ;application/Application.c: 51:     LATD = 0;
  1362  0008D0  0E00               	movlw	0
  1363  0008D2  6E8C               	movwf	140,c	;volatile
  1364                           
  1365                           ;application/Application.c: 52:     LATE = 0;
  1366  0008D4  0E00               	movlw	0
  1367  0008D6  6E8D               	movwf	141,c	;volatile
  1368  0008D8                     
  1369                           ; BSR set to: 0
  1370                           ;application/Application.c: 53:     USARTInit(&usart, 9600);
  1371  0008D8  0EA1               	movlw	low _usart
  1372  0008DA  6FD7               	movwf	USARTInit@usart& (0+255),b
  1373  0008DC  0E00               	movlw	high _usart
  1374  0008DE  6FD8               	movwf	(USARTInit@usart+1)& (0+255),b
  1375  0008E0  0E80               	movlw	128
  1376  0008E2  6FD9               	movwf	USARTInit@baudRate& (0+255),b
  1377  0008E4  0E25               	movlw	37
  1378  0008E6  6FDA               	movwf	(USARTInit@baudRate+1)& (0+255),b
  1379  0008E8  0E00               	movlw	0
  1380  0008EA  6FDB               	movwf	(USARTInit@baudRate+2)& (0+255),b
  1381  0008EC  0E00               	movlw	0
  1382  0008EE  6FDC               	movwf	(USARTInit@baudRate+3)& (0+255),b
  1383  0008F0  EC09  F007         	call	_USARTInit	;wreg free
  1384  0008F4                     
  1385                           ;application/Application.c: 74:     LedConfigurator_config();
  1386  0008F4  EC4F  F006         	call	_LedConfigurator_config	;wreg free
  1387  0008F8                     
  1388                           ;application/Application.c: 76:     yellowLed = Led_init(&yellowLedOutput);
  1389  0008F8  0E3A               	movlw	low _yellowLedOutput
  1390  0008FA  0100               	movlb	0	; () banked
  1391  0008FC  6FBD               	movwf	Led_init@output& (0+255),b
  1392  0008FE  0E00               	movlw	high _yellowLedOutput
  1393  000900  6FBE               	movwf	(Led_init@output+1)& (0+255),b
  1394  000902  EC15  F008         	call	_Led_init	;wreg free
  1395  000906  C0BD  F036         	movff	?_Led_init,_yellowLed
  1396  00090A  C0BE  F037         	movff	?_Led_init+1,_yellowLed+1
  1397  00090E  C0BF  F038         	movff	?_Led_init+2,_yellowLed+2
  1398  000912  C0C0  F039         	movff	?_Led_init+3,_yellowLed+3
  1399  000916                     
  1400                           ;application/Application.c: 78:     redLed = Led_init(&redLedOutput);
  1401  000916  0E3E               	movlw	low _redLedOutput
  1402  000918  0100               	movlb	0	; () banked
  1403  00091A  6FBD               	movwf	Led_init@output& (0+255),b
  1404  00091C  0E00               	movlw	high _redLedOutput
  1405  00091E  6FBE               	movwf	(Led_init@output+1)& (0+255),b
  1406  000920  EC15  F008         	call	_Led_init	;wreg free
  1407  000924  C0BD  F0B5         	movff	?_Led_init,_redLed
  1408  000928  C0BE  F0B6         	movff	?_Led_init+1,_redLed+1
  1409  00092C  C0BF  F0B7         	movff	?_Led_init+2,_redLed+2
  1410  000930  C0C0  F0B8         	movff	?_Led_init+3,_redLed+3
  1411  000934                     
  1412                           ;application/Application.c: 80:     blueLed = Led_init(&blueLedOutput);
  1413  000934  0EB9               	movlw	low _blueLedOutput
  1414  000936  0100               	movlb	0	; () banked
  1415  000938  6FBD               	movwf	Led_init@output& (0+255),b
  1416  00093A  0E00               	movlw	high _blueLedOutput
  1417  00093C  6FBE               	movwf	(Led_init@output+1)& (0+255),b
  1418  00093E  EC15  F008         	call	_Led_init	;wreg free
  1419  000942  C0BD  F032         	movff	?_Led_init,_blueLed
  1420  000946  C0BE  F033         	movff	?_Led_init+1,_blueLed+1
  1421  00094A  C0BF  F034         	movff	?_Led_init+2,_blueLed+2
  1422  00094E  C0C0  F035         	movff	?_Led_init+3,_blueLed+3
  1423  000952                     
  1424                           ;application/Application.c: 82:     ButtonConfigurator_config();
  1425  000952  ECE7  F007         	call	_ButtonConfigurator_config	;wreg free
  1426  000956                     
  1427                           ;application/Application.c: 84:     button = Button_init(&button1Input, 0);
  1428  000956  0E5A               	movlw	low _button1Input
  1429  000958  0100               	movlb	0	; () banked
  1430  00095A  6FBD               	movwf	Button_init@input& (0+255),b
  1431  00095C  0E00               	movlw	high _button1Input
  1432  00095E  6FBE               	movwf	(Button_init@input+1)& (0+255),b
  1433  000960  0E00               	movlw	0
  1434  000962  6FBF               	movwf	Button_init@onPressed& (0+255),b
  1435  000964  0E00               	movlw	0
  1436  000966  6FC0               	movwf	(Button_init@onPressed+1)& (0+255),b
  1437  000968  ECD6  F007         	call	_Button_init	;wreg free
  1438  00096C  C0BD  F09D         	movff	?_Button_init,_button
  1439  000970  C0BE  F09E         	movff	?_Button_init+1,_button+1
  1440  000974  C0BF  F09F         	movff	?_Button_init+2,_button+2
  1441  000978  C0C0  F0A0         	movff	?_Button_init+3,_button+3
  1442  00097C                     
  1443                           ;application/Application.c: 98:     return app;
  1444  00097C  C0DF  F0DD         	movff	Application_init@app,?_Application_init
  1445  000980  C0E0  F0DE         	movff	Application_init@app+1,?_Application_init+1
  1446  000984  0012               	return		;funcret
  1447  000986                     __end_of_Application_init:
  1448                           	opt callstack 0
  1449                           
  1450 ;; *************** function _USARTInit *****************
  1451 ;; Defined at:
  1452 ;;		line 42 in file "usart/Usart.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  usart           2   26[BANK0 ] PTR struct .
  1455 ;;		 -> usart(20), 
  1456 ;;  baudRate        4   28[BANK0 ] long 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         0       6       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0
  1471 ;;      Totals:         0       6       0       0       0       0       0
  1472 ;;Total ram usage:        6 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    6
  1475 ;; This function calls:
  1476 ;;		_calculateSpbrg
  1477 ;;		_enableInterrupts
  1478 ;;		_setupFunctions
  1479 ;; This function is called by:
  1480 ;;		_Application_init
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text10
  1485  000E12                     __ptext10:
  1486                           	opt callstack 0
  1487  000E12                     _USARTInit:
  1488                           	opt callstack 23
  1489  000E12                     
  1490                           ;usart/Usart.c: 45:     enableInterrupts();
  1491  000E12  EC65  F008         	call	_enableInterrupts	;wreg free
  1492  000E16                     
  1493                           ;usart/Usart.c: 47:      OSCCON = 0x72;
  1494  000E16  0E72               	movlw	114
  1495  000E18  6ED3               	movwf	211,c	;volatile
  1496  000E1A                     
  1497                           ;usart/Usart.c: 49:     BRGH = 1;
  1498  000E1A  84AC               	bsf	4012,2,c	;volatile
  1499  000E1C                     
  1500                           ;usart/Usart.c: 50:     SPBRG = calculateSpbrg(baudRate);
  1501  000E1C  C0D9  F0CB         	movff	USARTInit@baudRate,calculateSpbrg@baudRate
  1502  000E20  C0DA  F0CC         	movff	USARTInit@baudRate+1,calculateSpbrg@baudRate+1
  1503  000E24  C0DB  F0CD         	movff	USARTInit@baudRate+2,calculateSpbrg@baudRate+2
  1504  000E28  C0DC  F0CE         	movff	USARTInit@baudRate+3,calculateSpbrg@baudRate+3
  1505  000E2C  EC15  F006         	call	_calculateSpbrg	;wreg free
  1506  000E30  0100               	movlb	0	; () banked
  1507  000E32  51CB               	movf	?_calculateSpbrg& (0+255),w,b
  1508  000E34  6EAF               	movwf	175,c	;volatile
  1509  000E36                     
  1510                           ; BSR set to: 0
  1511                           ;usart/Usart.c: 53:     SYNC = 0;
  1512  000E36  98AC               	bcf	4012,4,c	;volatile
  1513  000E38                     
  1514                           ; BSR set to: 0
  1515                           ;usart/Usart.c: 54:     SPEN = 1;
  1516  000E38  8EAB               	bsf	4011,7,c	;volatile
  1517  000E3A                     
  1518                           ; BSR set to: 0
  1519                           ;usart/Usart.c: 56:     TRISC6 = 1;
  1520  000E3A  8C94               	bsf	3988,6,c	;volatile
  1521  000E3C                     
  1522                           ; BSR set to: 0
  1523                           ;usart/Usart.c: 57:     TRISC7 = 1;
  1524  000E3C  8E94               	bsf	3988,7,c	;volatile
  1525  000E3E                     
  1526                           ; BSR set to: 0
  1527                           ;usart/Usart.c: 58:     TXEN = 1;
  1528  000E3E  8AAC               	bsf	4012,5,c	;volatile
  1529  000E40                     
  1530                           ; BSR set to: 0
  1531                           ;usart/Usart.c: 60:     CREN = 1;
  1532  000E40  88AB               	bsf	4011,4,c	;volatile
  1533  000E42                     
  1534                           ; BSR set to: 0
  1535                           ;usart/Usart.c: 61:     setupFunctions(usart);
  1536  000E42  C0D7  F0BD         	movff	USARTInit@usart,setupFunctions@usart
  1537  000E46  C0D8  F0BE         	movff	USARTInit@usart+1,setupFunctions@usart+1
  1538  000E4A  ECC3  F004         	call	_setupFunctions	;wreg free
  1539  000E4E  0012               	return		;funcret
  1540  000E50                     __end_of_USARTInit:
  1541                           	opt callstack 0
  1542                           
  1543 ;; *************** function _setupFunctions *****************
  1544 ;; Defined at:
  1545 ;;		line 12 in file "usart/Usart.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  usart           2    0[BANK0 ] PTR struct .
  1548 ;;		 -> usart(20), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1560 ;;      Params:         0       2       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0
  1563 ;;      Totals:         0       2       0       0       0       0       0
  1564 ;;Total ram usage:        2 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    4
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_USARTInit
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text11
  1575  000986                     __ptext11:
  1576                           	opt callstack 0
  1577  000986                     _setupFunctions:
  1578                           	opt callstack 24
  1579  000986                     
  1580                           ;usart/Usart.c: 14:     usart->isDataReady = USARTDataReady;
  1581  000986  C0BD  FFD9         	movff	setupFunctions@usart,fsr2l
  1582  00098A  C0BE  FFDA         	movff	setupFunctions@usart+1,fsr2h
  1583  00098E  0E0E               	movlw	low _USARTDataReady
  1584  000990  6EDE               	movwf	postinc2,c
  1585  000992  0E10               	movlw	high _USARTDataReady
  1586  000994  6EDD               	movwf	postdec2,c
  1587  000996                     
  1588                           ;usart/Usart.c: 17:     usart->readByte = USARTReadByte;
  1589  000996  0100               	movlb	0	; () banked
  1590  000998  EE20 F012          	lfsr	2,18
  1591  00099C  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1592  00099E  26D9               	addwf	fsr2l,f,c
  1593  0009A0  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1594  0009A2  22DA               	addwfc	fsr2h,f,c
  1595  0009A4  0E00               	movlw	0
  1596  0009A6  6EDE               	movwf	postinc2,c
  1597  0009A8  0E00               	movlw	0
  1598  0009AA  6EDD               	movwf	postdec2,c
  1599  0009AC                     
  1600                           ; BSR set to: 0
  1601                           ;usart/Usart.c: 18:     usart->readChar = USARTReadChar;
  1602  0009AC  EE20 F002          	lfsr	2,2
  1603  0009B0  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1604  0009B2  26D9               	addwf	fsr2l,f,c
  1605  0009B4  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1606  0009B6  22DA               	addwfc	fsr2h,f,c
  1607  0009B8  0E5E               	movlw	low _USARTReadChar
  1608  0009BA  6EDE               	movwf	postinc2,c
  1609  0009BC  0E10               	movlw	high _USARTReadChar
  1610  0009BE  6EDD               	movwf	postdec2,c
  1611  0009C0                     
  1612                           ; BSR set to: 0
  1613                           ;usart/Usart.c: 19:     usart->readString = USARTReadString;
  1614  0009C0  EE20 F004          	lfsr	2,4
  1615  0009C4  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1616  0009C6  26D9               	addwf	fsr2l,f,c
  1617  0009C8  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1618  0009CA  22DA               	addwfc	fsr2h,f,c
  1619  0009CC  0E4E               	movlw	low _USARTReadString
  1620  0009CE  6EDE               	movwf	postinc2,c
  1621  0009D0  0E0A               	movlw	high _USARTReadString
  1622  0009D2  6EDD               	movwf	postdec2,c
  1623  0009D4                     
  1624                           ; BSR set to: 0
  1625                           ;usart/Usart.c: 22:     usart->writeByte = USARTWriteByte;
  1626  0009D4  EE20 F006          	lfsr	2,6
  1627  0009D8  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1628  0009DA  26D9               	addwf	fsr2l,f,c
  1629  0009DC  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1630  0009DE  22DA               	addwfc	fsr2h,f,c
  1631  0009E0  0E00               	movlw	0
  1632  0009E2  6EDE               	movwf	postinc2,c
  1633  0009E4  0E00               	movlw	0
  1634  0009E6  6EDD               	movwf	postdec2,c
  1635  0009E8                     
  1636                           ; BSR set to: 0
  1637                           ;usart/Usart.c: 23:     usart->writeInt = USARTWriteInt;
  1638  0009E8  EE20 F00C          	lfsr	2,12
  1639  0009EC  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1640  0009EE  26D9               	addwf	fsr2l,f,c
  1641  0009F0  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1642  0009F2  22DA               	addwfc	fsr2h,f,c
  1643  0009F4  0E00               	movlw	0
  1644  0009F6  6EDE               	movwf	postinc2,c
  1645  0009F8  0E00               	movlw	0
  1646  0009FA  6EDD               	movwf	postdec2,c
  1647  0009FC                     
  1648                           ; BSR set to: 0
  1649                           ;usart/Usart.c: 24:     usart->writeLong = USARTWriteLong;
  1650  0009FC  EE20 F00E          	lfsr	2,14
  1651  000A00  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1652  000A02  26D9               	addwf	fsr2l,f,c
  1653  000A04  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1654  000A06  22DA               	addwfc	fsr2h,f,c
  1655  000A08  0E00               	movlw	0
  1656  000A0A  6EDE               	movwf	postinc2,c
  1657  000A0C  0E00               	movlw	0
  1658  000A0E  6EDD               	movwf	postdec2,c
  1659  000A10                     
  1660                           ; BSR set to: 0
  1661                           ;usart/Usart.c: 25:     usart->writeFloat = USARTWriteFloat;
  1662  000A10  EE20 F010          	lfsr	2,16
  1663  000A14  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1664  000A16  26D9               	addwf	fsr2l,f,c
  1665  000A18  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1666  000A1A  22DA               	addwfc	fsr2h,f,c
  1667  000A1C  0E00               	movlw	0
  1668  000A1E  6EDE               	movwf	postinc2,c
  1669  000A20  0E00               	movlw	0
  1670  000A22  6EDD               	movwf	postdec2,c
  1671  000A24                     
  1672                           ; BSR set to: 0
  1673                           ;usart/Usart.c: 26:     usart->writeLine = USARTWriteLine;
  1674  000A24  EE20 F00A          	lfsr	2,10
  1675  000A28  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1676  000A2A  26D9               	addwf	fsr2l,f,c
  1677  000A2C  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1678  000A2E  22DA               	addwfc	fsr2h,f,c
  1679  000A30  0E64               	movlw	low _USARTWriteLine
  1680  000A32  6EDE               	movwf	postinc2,c
  1681  000A34  0E0F               	movlw	high _USARTWriteLine
  1682  000A36  6EDD               	movwf	postdec2,c
  1683  000A38                     
  1684                           ; BSR set to: 0
  1685                           ;usart/Usart.c: 27:     usart->writeString = USARTWriteString;
  1686  000A38  EE20 F008          	lfsr	2,8
  1687  000A3C  51BD               	movf	setupFunctions@usart& (0+255),w,b
  1688  000A3E  26D9               	addwf	fsr2l,f,c
  1689  000A40  51BE               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1690  000A42  22DA               	addwfc	fsr2h,f,c
  1691  000A44  0EB4               	movlw	low _USARTWriteString
  1692  000A46  6EDE               	movwf	postinc2,c
  1693  000A48  0E0B               	movlw	high _USARTWriteString
  1694  000A4A  6EDD               	movwf	postdec2,c
  1695  000A4C                     
  1696                           ; BSR set to: 0
  1697  000A4C  0012               	return		;funcret
  1698  000A4E                     __end_of_setupFunctions:
  1699                           	opt callstack 0
  1700                           
  1701 ;; *************** function _enableInterrupts *****************
  1702 ;; Defined at:
  1703 ;;		line 32 in file "usart/Usart.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		None
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1717 ;;      Params:         0       0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    4
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_USARTInit
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text12
  1732  0010CA                     __ptext12:
  1733                           	opt callstack 0
  1734  0010CA                     _enableInterrupts:
  1735                           	opt callstack 24
  1736  0010CA                     
  1737                           ;usart/Usart.c: 33:     GIE = 1;
  1738  0010CA  8EF2               	bsf	4082,7,c	;volatile
  1739                           
  1740                           ;usart/Usart.c: 34:     PEIE = 1;
  1741  0010CC  8CF2               	bsf	4082,6,c	;volatile
  1742                           
  1743                           ;usart/Usart.c: 35:     RCIE = 1;
  1744  0010CE  8A9D               	bsf	3997,5,c	;volatile
  1745  0010D0  0012               	return		;funcret
  1746  0010D2                     __end_of_enableInterrupts:
  1747                           	opt callstack 0
  1748                           
  1749 ;; *************** function _calculateSpbrg *****************
  1750 ;; Defined at:
  1751 ;;		line 37 in file "usart/Usart.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  baudRate        4   14[BANK0 ] long 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  bolum           4   22[BANK0 ] long 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  4   14[BANK0 ] long 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1765 ;;      Params:         0       4       0       0       0       0       0
  1766 ;;      Locals:         0       4       0       0       0       0       0
  1767 ;;      Temps:          0       4       0       0       0       0       0
  1768 ;;      Totals:         0      12       0       0       0       0       0
  1769 ;;Total ram usage:       12 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    5
  1772 ;; This function calls:
  1773 ;;		___aldiv
  1774 ;; This function is called by:
  1775 ;;		_USARTInit
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text13
  1780  000C2A                     __ptext13:
  1781                           	opt callstack 0
  1782  000C2A                     _calculateSpbrg:
  1783                           	opt callstack 23
  1784  000C2A                     
  1785                           ;usart/Usart.c: 38:     long bolum = 16 * baudRate;
  1786  000C2A  C0CB  F0CF         	movff	calculateSpbrg@baudRate,??_calculateSpbrg
  1787  000C2E  C0CC  F0D0         	movff	calculateSpbrg@baudRate+1,??_calculateSpbrg+1
  1788  000C32  C0CD  F0D1         	movff	calculateSpbrg@baudRate+2,??_calculateSpbrg+2
  1789  000C36  C0CE  F0D2         	movff	calculateSpbrg@baudRate+3,??_calculateSpbrg+3
  1790  000C3A  0E04               	movlw	4
  1791  000C3C                     u1975:
  1792  000C3C  90D8               	bcf	status,0,c
  1793  000C3E  0100               	movlb	0	; () banked
  1794  000C40  37CF               	rlcf	??_calculateSpbrg& (0+255),f,b
  1795  000C42  37D0               	rlcf	(??_calculateSpbrg+1)& (0+255),f,b
  1796  000C44  37D1               	rlcf	(??_calculateSpbrg+2)& (0+255),f,b
  1797  000C46  37D2               	rlcf	(??_calculateSpbrg+3)& (0+255),f,b
  1798  000C48  2EE8               	decfsz	wreg,f,c
  1799  000C4A  EF1E  F006         	goto	u1975
  1800  000C4E  C0CF  F0D3         	movff	??_calculateSpbrg,calculateSpbrg@bolum
  1801  000C52  C0D0  F0D4         	movff	??_calculateSpbrg+1,calculateSpbrg@bolum+1
  1802  000C56  C0D1  F0D5         	movff	??_calculateSpbrg+2,calculateSpbrg@bolum+2
  1803  000C5A  C0D2  F0D6         	movff	??_calculateSpbrg+3,calculateSpbrg@bolum+3
  1804  000C5E                     
  1805                           ; BSR set to: 0
  1806                           ;usart/Usart.c: 39:     return ((8000000 / bolum) - 1);
  1807  000C5E  0E00               	movlw	0
  1808  000C60  6FBD               	movwf	___aldiv@dividend& (0+255),b
  1809  000C62  0E12               	movlw	18
  1810  000C64  6FBE               	movwf	(___aldiv@dividend+1)& (0+255),b
  1811  000C66  0E7A               	movlw	122
  1812  000C68  6FBF               	movwf	(___aldiv@dividend+2)& (0+255),b
  1813  000C6A  0E00               	movlw	0
  1814  000C6C  6FC0               	movwf	(___aldiv@dividend+3)& (0+255),b
  1815  000C6E  C0D3  F0C1         	movff	calculateSpbrg@bolum,___aldiv@divisor
  1816  000C72  C0D4  F0C2         	movff	calculateSpbrg@bolum+1,___aldiv@divisor+1
  1817  000C76  C0D5  F0C3         	movff	calculateSpbrg@bolum+2,___aldiv@divisor+2
  1818  000C7A  C0D6  F0C4         	movff	calculateSpbrg@bolum+3,___aldiv@divisor+3
  1819  000C7E  EC5A  F003         	call	___aldiv	;wreg free
  1820  000C82  0EFF               	movlw	255
  1821  000C84  0100               	movlb	0	; () banked
  1822  000C86  25BD               	addwf	?___aldiv& (0+255),w,b
  1823  000C88  6FCB               	movwf	?_calculateSpbrg& (0+255),b
  1824  000C8A  0EFF               	movlw	255
  1825  000C8C  21BE               	addwfc	(?___aldiv+1)& (0+255),w,b
  1826  000C8E  6FCC               	movwf	(?_calculateSpbrg+1)& (0+255),b
  1827  000C90  0EFF               	movlw	255
  1828  000C92  21BF               	addwfc	(?___aldiv+2)& (0+255),w,b
  1829  000C94  6FCD               	movwf	(?_calculateSpbrg+2)& (0+255),b
  1830  000C96  0EFF               	movlw	255
  1831  000C98  21C0               	addwfc	(?___aldiv+3)& (0+255),w,b
  1832  000C9A  6FCE               	movwf	(?_calculateSpbrg+3)& (0+255),b
  1833  000C9C                     
  1834                           ; BSR set to: 0
  1835  000C9C  0012               	return		;funcret
  1836  000C9E                     __end_of_calculateSpbrg:
  1837                           	opt callstack 0
  1838                           
  1839 ;; *************** function ___aldiv *****************
  1840 ;; Defined at:
  1841 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  dividend        4    0[BANK0 ] long 
  1844 ;;  divisor         4    4[BANK0 ] long 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  quotient        4   10[BANK0 ] long 
  1847 ;;  sign            1    9[BANK0 ] unsigned char 
  1848 ;;  counter         1    8[BANK0 ] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  4    0[BANK0 ] long 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         0       8       0       0       0       0       0
  1859 ;;      Locals:         0       6       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0
  1861 ;;      Totals:         0      14       0       0       0       0       0
  1862 ;;Total ram usage:       14 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    4
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_calculateSpbrg
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text14
  1873  0006B4                     __ptext14:
  1874                           	opt callstack 0
  1875  0006B4                     ___aldiv:
  1876                           	opt callstack 23
  1877  0006B4  0E00               	movlw	0
  1878  0006B6  0100               	movlb	0	; () banked
  1879  0006B8  6FC6               	movwf	___aldiv@sign& (0+255),b
  1880  0006BA                     
  1881                           ; BSR set to: 0
  1882  0006BA  BFC4               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  1883  0006BC  EF64  F003         	goto	u1860
  1884  0006C0  EF62  F003         	goto	u1861
  1885  0006C4                     u1861:
  1886  0006C4  EF6E  F003         	goto	l2781
  1887  0006C8                     u1860:
  1888  0006C8                     
  1889                           ; BSR set to: 0
  1890  0006C8  1FC4               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1891  0006CA  1FC3               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1892  0006CC  1FC2               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1893  0006CE  6DC1               	negf	___aldiv@divisor& (0+255),b
  1894  0006D0  0E00               	movlw	0
  1895  0006D2  23C2               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1896  0006D4  23C3               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1897  0006D6  23C4               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1898  0006D8                     
  1899                           ; BSR set to: 0
  1900  0006D8  0E01               	movlw	1
  1901  0006DA  6FC6               	movwf	___aldiv@sign& (0+255),b
  1902  0006DC                     l2781:
  1903                           
  1904                           ; BSR set to: 0
  1905  0006DC  BFC0               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  1906  0006DE  EF75  F003         	goto	u1870
  1907  0006E2  EF73  F003         	goto	u1871
  1908  0006E6                     u1871:
  1909  0006E6  EF7F  F003         	goto	l2787
  1910  0006EA                     u1870:
  1911  0006EA                     
  1912                           ; BSR set to: 0
  1913  0006EA  1FC0               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1914  0006EC  1FBF               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1915  0006EE  1FBE               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1916  0006F0  6DBD               	negf	___aldiv@dividend& (0+255),b
  1917  0006F2  0E00               	movlw	0
  1918  0006F4  23BE               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1919  0006F6  23BF               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1920  0006F8  23C0               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1921  0006FA                     
  1922                           ; BSR set to: 0
  1923  0006FA  0E01               	movlw	1
  1924  0006FC  1BC6               	xorwf	___aldiv@sign& (0+255),f,b
  1925  0006FE                     l2787:
  1926                           
  1927                           ; BSR set to: 0
  1928  0006FE  0E00               	movlw	0
  1929  000700  6FC7               	movwf	___aldiv@quotient& (0+255),b
  1930  000702  0E00               	movlw	0
  1931  000704  6FC8               	movwf	(___aldiv@quotient+1)& (0+255),b
  1932  000706  0E00               	movlw	0
  1933  000708  6FC9               	movwf	(___aldiv@quotient+2)& (0+255),b
  1934  00070A  0E00               	movlw	0
  1935  00070C  6FCA               	movwf	(___aldiv@quotient+3)& (0+255),b
  1936  00070E                     
  1937                           ; BSR set to: 0
  1938  00070E  51C1               	movf	___aldiv@divisor& (0+255),w,b
  1939  000710  11C2               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1940  000712  11C3               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1941  000714  11C4               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1942  000716  B4D8               	btfsc	status,2,c
  1943  000718  EF90  F003         	goto	u1881
  1944  00071C  EF92  F003         	goto	u1880
  1945  000720                     u1881:
  1946  000720  EFC8  F003         	goto	l2809
  1947  000724                     u1880:
  1948  000724                     
  1949                           ; BSR set to: 0
  1950  000724  0E01               	movlw	1
  1951  000726  6FC5               	movwf	___aldiv@counter& (0+255),b
  1952  000728  EF9C  F003         	goto	l2795
  1953  00072C                     l2793:
  1954                           
  1955                           ; BSR set to: 0
  1956  00072C  90D8               	bcf	status,0,c
  1957  00072E  37C1               	rlcf	___aldiv@divisor& (0+255),f,b
  1958  000730  37C2               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1959  000732  37C3               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1960  000734  37C4               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1961  000736  2BC5               	incf	___aldiv@counter& (0+255),f,b
  1962  000738                     l2795:
  1963                           
  1964                           ; BSR set to: 0
  1965  000738  AFC4               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1966  00073A  EFA1  F003         	goto	u1891
  1967  00073E  EFA3  F003         	goto	u1890
  1968  000742                     u1891:
  1969  000742  EF96  F003         	goto	l2793
  1970  000746                     u1890:
  1971  000746                     l2797:
  1972                           
  1973                           ; BSR set to: 0
  1974  000746  90D8               	bcf	status,0,c
  1975  000748  37C7               	rlcf	___aldiv@quotient& (0+255),f,b
  1976  00074A  37C8               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1977  00074C  37C9               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1978  00074E  37CA               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1979  000750                     
  1980                           ; BSR set to: 0
  1981  000750  51C1               	movf	___aldiv@divisor& (0+255),w,b
  1982  000752  5DBD               	subwf	___aldiv@dividend& (0+255),w,b
  1983  000754  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1984  000756  59BE               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1985  000758  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1986  00075A  59BF               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1987  00075C  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1988  00075E  59C0               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1989  000760  A0D8               	btfss	status,0,c
  1990  000762  EFB5  F003         	goto	u1901
  1991  000766  EFB7  F003         	goto	u1900
  1992  00076A                     u1901:
  1993  00076A  EFC0  F003         	goto	l2805
  1994  00076E                     u1900:
  1995  00076E                     
  1996                           ; BSR set to: 0
  1997  00076E  51C1               	movf	___aldiv@divisor& (0+255),w,b
  1998  000770  5FBD               	subwf	___aldiv@dividend& (0+255),f,b
  1999  000772  51C2               	movf	(___aldiv@divisor+1)& (0+255),w,b
  2000  000774  5BBE               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  2001  000776  51C3               	movf	(___aldiv@divisor+2)& (0+255),w,b
  2002  000778  5BBF               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  2003  00077A  51C4               	movf	(___aldiv@divisor+3)& (0+255),w,b
  2004  00077C  5BC0               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  2005  00077E                     
  2006                           ; BSR set to: 0
  2007  00077E  81C7               	bsf	___aldiv@quotient& (0+255),0,b
  2008  000780                     l2805:
  2009                           
  2010                           ; BSR set to: 0
  2011  000780  90D8               	bcf	status,0,c
  2012  000782  33C4               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  2013  000784  33C3               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  2014  000786  33C2               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  2015  000788  33C1               	rrcf	___aldiv@divisor& (0+255),f,b
  2016  00078A                     
  2017                           ; BSR set to: 0
  2018  00078A  2FC5               	decfsz	___aldiv@counter& (0+255),f,b
  2019  00078C  EFA3  F003         	goto	l2797
  2020  000790                     l2809:
  2021                           
  2022                           ; BSR set to: 0
  2023  000790  51C6               	movf	___aldiv@sign& (0+255),w,b
  2024  000792  B4D8               	btfsc	status,2,c
  2025  000794  EFCE  F003         	goto	u1911
  2026  000798  EFD0  F003         	goto	u1910
  2027  00079C                     u1911:
  2028  00079C  EFD8  F003         	goto	l2813
  2029  0007A0                     u1910:
  2030  0007A0                     
  2031                           ; BSR set to: 0
  2032  0007A0  1FCA               	comf	(___aldiv@quotient+3)& (0+255),f,b
  2033  0007A2  1FC9               	comf	(___aldiv@quotient+2)& (0+255),f,b
  2034  0007A4  1FC8               	comf	(___aldiv@quotient+1)& (0+255),f,b
  2035  0007A6  6DC7               	negf	___aldiv@quotient& (0+255),b
  2036  0007A8  0E00               	movlw	0
  2037  0007AA  23C8               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  2038  0007AC  23C9               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  2039  0007AE  23CA               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  2040  0007B0                     l2813:
  2041                           
  2042                           ; BSR set to: 0
  2043  0007B0  C0C7  F0BD         	movff	___aldiv@quotient,?___aldiv
  2044  0007B4  C0C8  F0BE         	movff	___aldiv@quotient+1,?___aldiv+1
  2045  0007B8  C0C9  F0BF         	movff	___aldiv@quotient+2,?___aldiv+2
  2046  0007BC  C0CA  F0C0         	movff	___aldiv@quotient+3,?___aldiv+3
  2047  0007C0                     
  2048                           ; BSR set to: 0
  2049  0007C0  0012               	return		;funcret
  2050  0007C2                     __end_of___aldiv:
  2051                           	opt callstack 0
  2052                           
  2053 ;; *************** function _Led_init *****************
  2054 ;; Defined at:
  2055 ;;		line 4 in file "led/Led.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  output          2    0[BANK0 ] PTR struct DigitalOutput
  2058 ;;		 -> blueLedOutput(4), yellowLedOutput(4), redLedOutput(4), 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  led             4    4[BANK0 ] struct Led
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  4    0[BANK0 ] struct Led
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2070 ;;      Params:         0       4       0       0       0       0       0
  2071 ;;      Locals:         0       4       0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0
  2073 ;;      Totals:         0       8       0       0       0       0       0
  2074 ;;Total ram usage:        8 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    4
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_Application_init
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text15
  2085  00102A                     __ptext15:
  2086                           	opt callstack 0
  2087  00102A                     _Led_init:
  2088                           	opt callstack 25
  2089  00102A                     
  2090                           ;led/Led.c: 5:     Led led;;led/Led.c: 6:     led.output = output;
  2091  00102A  C0BD  F0C1         	movff	Led_init@output,Led_init@led
  2092  00102E  C0BE  F0C2         	movff	Led_init@output+1,Led_init@led+1
  2093  001032                     
  2094                           ;led/Led.c: 7:     return led;
  2095  001032  C0C1  F0BD         	movff	Led_init@led,?_Led_init
  2096  001036  C0C2  F0BE         	movff	Led_init@led+1,?_Led_init+1
  2097  00103A  C0C3  F0BF         	movff	Led_init@led+2,?_Led_init+2
  2098  00103E  C0C4  F0C0         	movff	Led_init@led+3,?_Led_init+3
  2099  001042  0012               	return		;funcret
  2100  001044                     __end_of_Led_init:
  2101                           	opt callstack 0
  2102                           
  2103 ;; *************** function _LedConfigurator_config *****************
  2104 ;; Defined at:
  2105 ;;		line 52 in file "application/../led/LedConfigurator.h"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2119 ;;      Params:         0       0       0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0
  2122 ;;      Totals:         0       0       0       0       0       0       0
  2123 ;;Total ram usage:        0 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    6
  2126 ;; This function calls:
  2127 ;;		_DigitalOutput_init
  2128 ;; This function is called by:
  2129 ;;		_Application_init
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text16
  2134  000C9E                     __ptext16:
  2135                           	opt callstack 0
  2136  000C9E                     _LedConfigurator_config:
  2137                           	opt callstack 23
  2138  000C9E                     
  2139                           ;application/../led/LedConfigurator.h: 53:     redLedOutput = DigitalOutput_init(redLedI
      +                          nit,redLedSet);
  2140  000C9E  0EEE               	movlw	low _redLedInit
  2141  000CA0  0100               	movlb	0	; () banked
  2142  000CA2  6FBD               	movwf	DigitalOutput_init@init& (0+255),b
  2143  000CA4  0E10               	movlw	high _redLedInit
  2144  000CA6  6FBE               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2145  000CA8  0E00               	movlw	0
  2146  000CAA  6FBF               	movwf	DigitalOutput_init@set& (0+255),b
  2147  000CAC  0E00               	movlw	0
  2148  000CAE  6FC0               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2149  000CB0  EC28  F007         	call	_DigitalOutput_init	;wreg free
  2150  000CB4  C0BD  F03E         	movff	?_DigitalOutput_init,_redLedOutput
  2151  000CB8  C0BE  F03F         	movff	?_DigitalOutput_init+1,_redLedOutput+1
  2152  000CBC  C0BF  F040         	movff	?_DigitalOutput_init+2,_redLedOutput+2
  2153  000CC0  C0C0  F041         	movff	?_DigitalOutput_init+3,_redLedOutput+3
  2154                           
  2155                           ;application/../led/LedConfigurator.h: 54:     yellowLedOutput = DigitalOutput_init(yell
      +                          owLedInit,yellowLedSet);
  2156  000CC4  0EEA               	movlw	low _yellowLedInit
  2157  000CC6  0100               	movlb	0	; () banked
  2158  000CC8  6FBD               	movwf	DigitalOutput_init@init& (0+255),b
  2159  000CCA  0E10               	movlw	high _yellowLedInit
  2160  000CCC  6FBE               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2161  000CCE  0E00               	movlw	0
  2162  000CD0  6FBF               	movwf	DigitalOutput_init@set& (0+255),b
  2163  000CD2  0E00               	movlw	0
  2164  000CD4  6FC0               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2165  000CD6  EC28  F007         	call	_DigitalOutput_init	;wreg free
  2166  000CDA  C0BD  F03A         	movff	?_DigitalOutput_init,_yellowLedOutput
  2167  000CDE  C0BE  F03B         	movff	?_DigitalOutput_init+1,_yellowLedOutput+1
  2168  000CE2  C0BF  F03C         	movff	?_DigitalOutput_init+2,_yellowLedOutput+2
  2169  000CE6  C0C0  F03D         	movff	?_DigitalOutput_init+3,_yellowLedOutput+3
  2170                           
  2171                           ;application/../led/LedConfigurator.h: 55:     blueLedOutput = DigitalOutput_init(blueLe
      +                          dInit,blueLedSet);
  2172  000CEA  0EE6               	movlw	low _blueLedInit
  2173  000CEC  0100               	movlb	0	; () banked
  2174  000CEE  6FBD               	movwf	DigitalOutput_init@init& (0+255),b
  2175  000CF0  0E10               	movlw	high _blueLedInit
  2176  000CF2  6FBE               	movwf	(DigitalOutput_init@init+1)& (0+255),b
  2177  000CF4  0E00               	movlw	0
  2178  000CF6  6FBF               	movwf	DigitalOutput_init@set& (0+255),b
  2179  000CF8  0E00               	movlw	0
  2180  000CFA  6FC0               	movwf	(DigitalOutput_init@set+1)& (0+255),b
  2181  000CFC  EC28  F007         	call	_DigitalOutput_init	;wreg free
  2182  000D00  C0BD  F0B9         	movff	?_DigitalOutput_init,_blueLedOutput
  2183  000D04  C0BE  F0BA         	movff	?_DigitalOutput_init+1,_blueLedOutput+1
  2184  000D08  C0BF  F0BB         	movff	?_DigitalOutput_init+2,_blueLedOutput+2
  2185  000D0C  C0C0  F0BC         	movff	?_DigitalOutput_init+3,_blueLedOutput+3
  2186  000D10  0012               	return		;funcret
  2187  000D12                     __end_of_LedConfigurator_config:
  2188                           	opt callstack 0
  2189                           
  2190 ;; *************** function _DigitalOutput_init *****************
  2191 ;; Defined at:
  2192 ;;		line 3 in file "io/digitalOutput/DigitalOutput.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  init            2    0[BANK0 ] PTR FTN()void 
  2195 ;;		 -> zEngineDirInit(1), yEngineDirInit(1), xEngineDirInit(1), zEngineMotionInit(1), 
  2196 ;;		 -> yEngineMotionInit(1), xEngineMotionInit(1), blueLedInit(1), yellowLedInit(1), 
  2197 ;;		 -> redLedInit(1), 
  2198 ;;  set             2    2[BANK0 ] PTR FTN()void 
  2199 ;;		 -> xEngineDirSet(1), xEngineMotionSet(1), blueLedSet(1), yellowLedSet(1), 
  2200 ;;		 -> redLedSet(1), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  output          4    4[BANK0 ] struct DigitalOutput
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  4    0[BANK0 ] struct DigitalOutput
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2212 ;;      Params:         0       4       0       0       0       0       0
  2213 ;;      Locals:         0       4       0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0
  2215 ;;      Totals:         0       8       0       0       0       0       0
  2216 ;;Total ram usage:        8 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    5
  2219 ;; This function calls:
  2220 ;;		_blueLedInit
  2221 ;;		_redLedInit
  2222 ;;		_xEngineDirInit
  2223 ;;		_xEngineMotionInit
  2224 ;;		_yEngineDirInit
  2225 ;;		_yEngineMotionInit
  2226 ;;		_yellowLedInit
  2227 ;;		_zEngineDirInit
  2228 ;;		_zEngineMotionInit
  2229 ;; This function is called by:
  2230 ;;		_LedConfigurator_config
  2231 ;;		_EngineConfigurator_configEngines
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text17
  2236  000E50                     __ptext17:
  2237                           	opt callstack 0
  2238  000E50                     _DigitalOutput_init:
  2239                           	opt callstack 23
  2240  000E50                     
  2241                           ;io/digitalOutput/DigitalOutput.c: 4:     DigitalOutput output;;io/digitalOutput/Digital
      +                          Output.c: 5:     output.set = set;
  2242  000E50  C0BF  F0C1         	movff	DigitalOutput_init@set,DigitalOutput_init@output
  2243  000E54  C0C0  F0C2         	movff	DigitalOutput_init@set+1,DigitalOutput_init@output+1
  2244  000E58                     
  2245                           ;io/digitalOutput/DigitalOutput.c: 6:     (*init)();
  2246  000E58  D802               	call	u1928
  2247  000E5A  EF3A  F007         	goto	u1929
  2248  000E5E                     u1928:
  2249  000E5E  0005               	push	
  2250  000E60  0100               	movlb	0	; () banked
  2251  000E62  6EFA               	movwf	pclath,c
  2252  000E64  51BD               	movf	DigitalOutput_init@init& (0+255),w,b
  2253  000E66  6EFD               	movwf	tosl,c
  2254  000E68  51BE               	movf	(DigitalOutput_init@init+1)& (0+255),w,b
  2255  000E6A  6EFE               	movwf	tosh,c
  2256  000E6C  50F8               	movf	tblptru,w,c
  2257  000E6E  6EFF               	movwf	tosu,c
  2258  000E70  50FA               	movf	pclath,w,c
  2259  000E72  0012               	return		;indir
  2260  000E74                     u1929:
  2261  000E74                     
  2262                           ;io/digitalOutput/DigitalOutput.c: 7:     return output;
  2263  000E74  C0C1  F0BD         	movff	DigitalOutput_init@output,?_DigitalOutput_init
  2264  000E78  C0C2  F0BE         	movff	DigitalOutput_init@output+1,?_DigitalOutput_init+1
  2265  000E7C  C0C3  F0BF         	movff	DigitalOutput_init@output+2,?_DigitalOutput_init+2
  2266  000E80  C0C4  F0C0         	movff	DigitalOutput_init@output+3,?_DigitalOutput_init+3
  2267  000E84  0012               	return		;funcret
  2268  000E86                     __end_of_DigitalOutput_init:
  2269                           	opt callstack 0
  2270                           
  2271 ;; *************** function _zEngineDirInit *****************
  2272 ;; Defined at:
  2273 ;;		line 38 in file "engine/EngineConfigurator.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		None
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2287 ;;      Params:         0       0       0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    4
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_EngineConfigurator_configEngines
  2298 ;;		_DigitalOutput_init
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text18
  2303  0010D2                     __ptext18:
  2304                           	opt callstack 0
  2305  0010D2                     _zEngineDirInit:
  2306                           	opt callstack 23
  2307  0010D2                     
  2308                           ;engine/EngineConfigurator.c: 39:     TRISB2 = 0;
  2309  0010D2  9493               	bcf	3987,2,c	;volatile
  2310  0010D4  0012               	return		;funcret
  2311  0010D6                     __end_of_zEngineDirInit:
  2312                           	opt callstack 0
  2313                           
  2314 ;; *************** function _yEngineDirInit *****************
  2315 ;; Defined at:
  2316 ;;		line 34 in file "engine/EngineConfigurator.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		None
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    4
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_EngineConfigurator_configEngines
  2341 ;;		_DigitalOutput_init
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text19
  2346  0010D6                     __ptext19:
  2347                           	opt callstack 0
  2348  0010D6                     _yEngineDirInit:
  2349                           	opt callstack 23
  2350  0010D6                     
  2351                           ;engine/EngineConfigurator.c: 35:     TRISB1 = 0;
  2352  0010D6  9293               	bcf	3987,1,c	;volatile
  2353  0010D8  0012               	return		;funcret
  2354  0010DA                     __end_of_yEngineDirInit:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _xEngineDirInit *****************
  2358 ;; Defined at:
  2359 ;;		line 30 in file "engine/EngineConfigurator.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		None
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2373 ;;      Params:         0       0       0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    4
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_EngineConfigurator_configEngines
  2384 ;;		_DigitalOutput_init
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text20
  2389  0010DA                     __ptext20:
  2390                           	opt callstack 0
  2391  0010DA                     _xEngineDirInit:
  2392                           	opt callstack 23
  2393  0010DA                     
  2394                           ;engine/EngineConfigurator.c: 31:     TRISB0 = 0;
  2395  0010DA  9093               	bcf	3987,0,c	;volatile
  2396  0010DC  0012               	return		;funcret
  2397  0010DE                     __end_of_xEngineDirInit:
  2398                           	opt callstack 0
  2399                           
  2400 ;; *************** function _yEngineMotionInit *****************
  2401 ;; Defined at:
  2402 ;;		line 8 in file "engine/EngineConfigurator.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		None
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2416 ;;      Params:         0       0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    4
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_EngineConfigurator_configEngines
  2427 ;;		_DigitalOutput_init
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text21
  2432  0010DE                     __ptext21:
  2433                           	opt callstack 0
  2434  0010DE                     _yEngineMotionInit:
  2435                           	opt callstack 23
  2436  0010DE                     
  2437                           ;engine/EngineConfigurator.c: 9:     TRISC1 = 0;
  2438  0010DE  9294               	bcf	3988,1,c	;volatile
  2439  0010E0  0012               	return		;funcret
  2440  0010E2                     __end_of_yEngineMotionInit:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function _xEngineMotionInit *****************
  2444 ;; Defined at:
  2445 ;;		line 3 in file "engine/EngineConfigurator.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		None
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2459 ;;      Params:         0       0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    4
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_EngineConfigurator_configEngines
  2470 ;;		_DigitalOutput_init
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text22
  2475  0010E2                     __ptext22:
  2476                           	opt callstack 0
  2477  0010E2                     _xEngineMotionInit:
  2478                           	opt callstack 23
  2479  0010E2                     
  2480                           ;engine/EngineConfigurator.c: 4:     TRISC0 = 0;
  2481  0010E2  9094               	bcf	3988,0,c	;volatile
  2482  0010E4  0012               	return		;funcret
  2483  0010E6                     __end_of_xEngineMotionInit:
  2484                           	opt callstack 0
  2485                           
  2486 ;; *************** function _blueLedInit *****************
  2487 ;; Defined at:
  2488 ;;		line 29 in file "application/../led/LedConfigurator.h"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		None
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         0       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    4
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_LedConfigurator_config
  2513 ;;		_DigitalOutput_init
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text23
  2518  0010E6                     __ptext23:
  2519                           	opt callstack 0
  2520  0010E6                     _blueLedInit:
  2521                           	opt callstack 23
  2522  0010E6                     
  2523                           ;application/../led/LedConfigurator.h: 30:         TRISC3 = 0;
  2524  0010E6  9694               	bcf	3988,3,c	;volatile
  2525  0010E8  0012               	return		;funcret
  2526  0010EA                     __end_of_blueLedInit:
  2527                           	opt callstack 0
  2528                           
  2529 ;; *************** function _yellowLedInit *****************
  2530 ;; Defined at:
  2531 ;;		line 25 in file "application/../led/LedConfigurator.h"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		None
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2545 ;;      Params:         0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    4
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_LedConfigurator_config
  2556 ;;		_DigitalOutput_init
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text24
  2561  0010EA                     __ptext24:
  2562                           	opt callstack 0
  2563  0010EA                     _yellowLedInit:
  2564                           	opt callstack 23
  2565  0010EA                     
  2566                           ;application/../led/LedConfigurator.h: 26:         TRISD0 = 0;
  2567  0010EA  9095               	bcf	3989,0,c	;volatile
  2568  0010EC  0012               	return		;funcret
  2569  0010EE                     __end_of_yellowLedInit:
  2570                           	opt callstack 0
  2571                           
  2572 ;; *************** function _redLedInit *****************
  2573 ;; Defined at:
  2574 ;;		line 20 in file "application/../led/LedConfigurator.h"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		None
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2588 ;;      Params:         0       0       0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    4
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_LedConfigurator_config
  2599 ;;		_DigitalOutput_init
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text25
  2604  0010EE                     __ptext25:
  2605                           	opt callstack 0
  2606  0010EE                     _redLedInit:
  2607                           	opt callstack 23
  2608  0010EE                     
  2609                           ;application/../led/LedConfigurator.h: 21:         TRISD1 = 0;
  2610  0010EE  9295               	bcf	3989,1,c	;volatile
  2611  0010F0  0012               	return		;funcret
  2612  0010F2                     __end_of_redLedInit:
  2613                           	opt callstack 0
  2614                           
  2615 ;; *************** function _zEngineMotionInit *****************
  2616 ;; Defined at:
  2617 ;;		line 13 in file "engine/EngineConfigurator.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		None
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2631 ;;      Params:         0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    4
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_EngineConfigurator_configEngines
  2642 ;;		_DigitalOutput_init
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text26
  2647  0010F2                     __ptext26:
  2648                           	opt callstack 0
  2649  0010F2                     _zEngineMotionInit:
  2650                           	opt callstack 23
  2651  0010F2                     
  2652                           ;engine/EngineConfigurator.c: 14:     TRISC2 = 0;
  2653  0010F2  9494               	bcf	3988,2,c	;volatile
  2654  0010F4  0012               	return		;funcret
  2655  0010F6                     __end_of_zEngineMotionInit:
  2656                           	opt callstack 0
  2657                           
  2658 ;; *************** function _Button_init *****************
  2659 ;; Defined at:
  2660 ;;		line 9 in file "button/Button.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  input           2    0[BANK0 ] PTR struct DigitalInput
  2663 ;;		 -> button1Input(2), 
  2664 ;;  onPressed       2    2[BANK0 ] PTR FTN()void 
  2665 ;;		 -> Absolute function(2), 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  buton           4    4[BANK0 ] struct Button
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  4    0[BANK0 ] struct Button
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2677 ;;      Params:         0       4       0       0       0       0       0
  2678 ;;      Locals:         0       4       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0
  2680 ;;      Totals:         0       8       0       0       0       0       0
  2681 ;;Total ram usage:        8 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    4
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_Application_init
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text27
  2692  000FAC                     __ptext27:
  2693                           	opt callstack 0
  2694  000FAC                     _Button_init:
  2695                           	opt callstack 25
  2696  000FAC                     
  2697                           ;button/Button.c: 10:     Button buton;;button/Button.c: 11:     buton.input = input;
  2698  000FAC  C0BD  F0C1         	movff	Button_init@input,Button_init@buton
  2699  000FB0  C0BE  F0C2         	movff	Button_init@input+1,Button_init@buton+1
  2700                           
  2701                           ;button/Button.c: 12:     buton.onPressed = onPressed;
  2702  000FB4  C0BF  F0C3         	movff	Button_init@onPressed,Button_init@buton+2
  2703  000FB8  C0C0  F0C4         	movff	Button_init@onPressed+1,Button_init@buton+3
  2704  000FBC                     
  2705                           ;button/Button.c: 13:     return buton;
  2706  000FBC  C0C1  F0BD         	movff	Button_init@buton,?_Button_init
  2707  000FC0  C0C2  F0BE         	movff	Button_init@buton+1,?_Button_init+1
  2708  000FC4  C0C3  F0BF         	movff	Button_init@buton+2,?_Button_init+2
  2709  000FC8  C0C4  F0C0         	movff	Button_init@buton+3,?_Button_init+3
  2710  000FCC  0012               	return		;funcret
  2711  000FCE                     __end_of_Button_init:
  2712                           	opt callstack 0
  2713                           
  2714 ;; *************** function _ButtonConfigurator_config *****************
  2715 ;; Defined at:
  2716 ;;		line 11 in file "button/ButtonConfigurator.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2730 ;;      Params:         0       0       0       0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0
  2733 ;;      Totals:         0       0       0       0       0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    6
  2737 ;; This function calls:
  2738 ;;		_DigitalInput_init
  2739 ;; This function is called by:
  2740 ;;		_Application_init
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text28
  2745  000FCE                     __ptext28:
  2746                           	opt callstack 0
  2747  000FCE                     _ButtonConfigurator_config:
  2748                           	opt callstack 23
  2749  000FCE                     
  2750                           ;button/ButtonConfigurator.c: 12:         button1Input = DigitalInput_init(button1Init,b
      +                          utton1Read);
  2751  000FCE  0EF6               	movlw	low _button1Init
  2752  000FD0  0100               	movlb	0	; () banked
  2753  000FD2  6FC0               	movwf	DigitalInput_init@init& (0+255),b
  2754  000FD4  0E10               	movlw	high _button1Init
  2755  000FD6  6FC1               	movwf	(DigitalInput_init@init+1)& (0+255),b
  2756  000FD8  0EEE               	movlw	low _button1Read
  2757  000FDA  6FC2               	movwf	DigitalInput_init@read& (0+255),b
  2758  000FDC  0E0F               	movlw	high _button1Read
  2759  000FDE  6FC3               	movwf	(DigitalInput_init@read+1)& (0+255),b
  2760  000FE0  ECBE  F006         	call	_DigitalInput_init	;wreg free
  2761  000FE4  C0C0  F05A         	movff	?_DigitalInput_init,_button1Input
  2762  000FE8  C0C1  F05B         	movff	?_DigitalInput_init+1,_button1Input+1
  2763  000FEC  0012               	return		;funcret
  2764  000FEE                     __end_of_ButtonConfigurator_config:
  2765                           	opt callstack 0
  2766                           
  2767 ;; *************** function _DigitalInput_init *****************
  2768 ;; Defined at:
  2769 ;;		line 3 in file "io/digitalinput/DigitalInput.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  init            2    3[BANK0 ] PTR FTN()void 
  2772 ;;		 -> button1Init(1), 
  2773 ;;  read            2    5[BANK0 ] PTR FTN()int 
  2774 ;;		 -> button1Read(2), 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  input           2    9[BANK0 ] struct DigitalInput
  2777 ;;  val             2    0        int 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    3[BANK0 ] struct DigitalInput
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2787 ;;      Params:         0       4       0       0       0       0       0
  2788 ;;      Locals:         0       4       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0
  2790 ;;      Totals:         0       8       0       0       0       0       0
  2791 ;;Total ram usage:        8 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    5
  2794 ;; This function calls:
  2795 ;;		_button1Init
  2796 ;;		_button1Read
  2797 ;; This function is called by:
  2798 ;;		_ButtonConfigurator_config
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text29
  2803  000D7C                     __ptext29:
  2804                           	opt callstack 0
  2805  000D7C                     _DigitalInput_init:
  2806                           	opt callstack 23
  2807  000D7C                     
  2808                           ;io/digitalinput/DigitalInput.c: 4:     DigitalInput input;;io/digitalinput/DigitalInput
      +                          .c: 5:     input.read = read;
  2809  000D7C  C0C2  F0C6         	movff	DigitalInput_init@read,DigitalInput_init@input
  2810  000D80  C0C3  F0C7         	movff	DigitalInput_init@read+1,DigitalInput_init@input+1
  2811  000D84                     
  2812                           ;io/digitalinput/DigitalInput.c: 6:     (*init)();
  2813  000D84  D802               	call	u1988
  2814  000D86  EFD0  F006         	goto	u1989
  2815  000D8A                     u1988:
  2816  000D8A  0005               	push	
  2817  000D8C  0100               	movlb	0	; () banked
  2818  000D8E  6EFA               	movwf	pclath,c
  2819  000D90  51C0               	movf	DigitalInput_init@init& (0+255),w,b
  2820  000D92  6EFD               	movwf	tosl,c
  2821  000D94  51C1               	movf	(DigitalInput_init@init+1)& (0+255),w,b
  2822  000D96  6EFE               	movwf	tosh,c
  2823  000D98  50F8               	movf	tblptru,w,c
  2824  000D9A  6EFF               	movwf	tosu,c
  2825  000D9C  50FA               	movf	pclath,w,c
  2826  000D9E  0012               	return		;indir
  2827  000DA0                     u1989:
  2828  000DA0  0EC6               	movlw	low DigitalInput_init@input
  2829  000DA2  0100               	movlb	0	; () banked
  2830  000DA4  6FBD               	movwf	button1Read@button& (0+255),b
  2831  000DA6  0E00               	movlw	high DigitalInput_init@input
  2832  000DA8  6FBE               	movwf	(button1Read@button+1)& (0+255),b
  2833  000DAA  D802               	call	u1998
  2834  000DAC  EFE2  F006         	goto	u1999
  2835  000DB0                     u1998:
  2836  000DB0  0005               	push	
  2837  000DB2  6EFA               	movwf	pclath,c
  2838  000DB4  51C2               	movf	DigitalInput_init@read& (0+255),w,b
  2839  000DB6  6EFD               	movwf	tosl,c
  2840  000DB8  51C3               	movf	(DigitalInput_init@read+1)& (0+255),w,b
  2841  000DBA  6EFE               	movwf	tosh,c
  2842  000DBC  50F8               	movf	tblptru,w,c
  2843  000DBE  6EFF               	movwf	tosu,c
  2844  000DC0  50FA               	movf	pclath,w,c
  2845  000DC2  0012               	return		;indir
  2846  000DC4                     u1999:
  2847  000DC4                     
  2848                           ;io/digitalinput/DigitalInput.c: 9:     return input;
  2849  000DC4  C0C6  F0C0         	movff	DigitalInput_init@input,?_DigitalInput_init
  2850  000DC8  C0C7  F0C1         	movff	DigitalInput_init@input+1,?_DigitalInput_init+1
  2851  000DCC  0012               	return		;funcret
  2852  000DCE                     __end_of_DigitalInput_init:
  2853                           	opt callstack 0
  2854                           
  2855 ;; *************** function _button1Read *****************
  2856 ;; Defined at:
  2857 ;;		line 7 in file "button/ButtonConfigurator.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  button          2    0[BANK0 ] PTR struct Button
  2860 ;;		 -> DigitalInput_init@input(2), button1Input(2), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2    0[BANK0 ] int 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2872 ;;      Params:         0       2       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0
  2874 ;;      Temps:          0       1       0       0       0       0       0
  2875 ;;      Totals:         0       3       0       0       0       0       0
  2876 ;;Total ram usage:        3 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    4
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_ButtonConfigurator_config
  2883 ;;		_DigitalInput_init
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text30
  2888  000FEE                     __ptext30:
  2889                           	opt callstack 0
  2890  000FEE                     _button1Read:
  2891                           	opt callstack 23
  2892  000FEE                     
  2893                           ;button/ButtonConfigurator.c: 8:     return PORTDbits.RD2;
  2894  000FEE  B483               	btfsc	131,2,c	;volatile
  2895  000FF0  EFFC  F007         	goto	u1851
  2896  000FF4  EF01  F008         	goto	u1850
  2897  000FF8                     u1851:
  2898  000FF8  0100               	movlb	0	; () banked
  2899  000FFA  6BBF               	clrf	??_button1Read& (0+255),b
  2900  000FFC  2BBF               	incf	??_button1Read& (0+255),f,b
  2901  000FFE  EF03  F008         	goto	u1858
  2902  001002                     u1850:
  2903  001002  0100               	movlb	0	; () banked
  2904  001004  6BBF               	clrf	??_button1Read& (0+255),b
  2905  001006                     u1858:
  2906  001006  51BF               	movf	??_button1Read& (0+255),w,b
  2907  001008  6FBD               	movwf	?_button1Read& (0+255),b
  2908  00100A  6BBE               	clrf	(?_button1Read+1)& (0+255),b
  2909  00100C                     
  2910                           ; BSR set to: 0
  2911  00100C  0012               	return		;funcret
  2912  00100E                     __end_of_button1Read:
  2913                           	opt callstack 0
  2914                           
  2915 ;; *************** function _button1Init *****************
  2916 ;; Defined at:
  2917 ;;		line 3 in file "button/ButtonConfigurator.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		None
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2931 ;;      Params:         0       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    4
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_ButtonConfigurator_config
  2942 ;;		_DigitalInput_init
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text31
  2947  0010F6                     __ptext31:
  2948                           	opt callstack 0
  2949  0010F6                     _button1Init:
  2950                           	opt callstack 23
  2951  0010F6                     
  2952                           ;button/ButtonConfigurator.c: 4:     TRISD2 = 1;
  2953  0010F6  8495               	bsf	3989,2,c	;volatile
  2954  0010F8  0012               	return		;funcret
  2955  0010FA                     __end_of_button1Init:
  2956                           	opt callstack 0
  2957                           
  2958 ;; *************** function _ISR *****************
  2959 ;; Defined at:
  2960 ;;		line 137 in file "application/Application.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  tmp            20   27[COMRAM] unsigned char [20]
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2974 ;;      Params:         0       0       0       0       0       0       0
  2975 ;;      Locals:        20       0       0       0       0       0       0
  2976 ;;      Temps:         12       0       0       0       0       0       0
  2977 ;;      Totals:        32       0       0       0       0       0       0
  2978 ;;Total ram usage:       32 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    3
  2981 ;; This function calls:
  2982 ;;		_USARTReadString
  2983 ;;		_softUSARTWriteString
  2984 ;;		i2_Led_open
  2985 ;;		i2_USARTWriteLine
  2986 ;; This function is called by:
  2987 ;;		Interrupt level 2
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	intcode
  2992  000008                     __pintcode:
  2993                           	opt callstack 0
  2994  000008                     _ISR:
  2995                           	opt callstack 23
  2996                           
  2997                           ;incstack = 0
  2998  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2999  00000A  EDE1  F003         	call	int_func,f	;refresh shadow registers
  3000                           
  3001                           	psect	intcode_body
  3002  0007C2                     __pintcode_body:
  3003                           	opt callstack 23
  3004  0007C2                     int_func:
  3005                           	opt callstack 23
  3006  0007C2  0006               	pop		; remove dummy address from shadow register refresh
  3007  0007C4  CFFA F010          	movff	pclath,??_ISR
  3008  0007C8  CFFB F011          	movff	pclatu,??_ISR+1
  3009  0007CC  CFE9 F012          	movff	fsr0l,??_ISR+2
  3010  0007D0  CFEA F013          	movff	fsr0h,??_ISR+3
  3011  0007D4  CFE1 F014          	movff	fsr1l,??_ISR+4
  3012  0007D8  CFE2 F015          	movff	fsr1h,??_ISR+5
  3013  0007DC  CFD9 F016          	movff	fsr2l,??_ISR+6
  3014  0007E0  CFDA F017          	movff	fsr2h,??_ISR+7
  3015  0007E4  CFF6 F018          	movff	tblptrl,??_ISR+8
  3016  0007E8  CFF7 F019          	movff	tblptrh,??_ISR+9
  3017  0007EC  CFF8 F01A          	movff	tblptru,??_ISR+10
  3018  0007F0  CFF5 F01B          	movff	tablat,??_ISR+11
  3019  0007F4                     
  3020                           ;application/Application.c: 139:     if (usart.isDataReady)
  3021  0007F4  0100               	movlb	0	; () banked
  3022  0007F6  51A1               	movf	_usart& (0+255),w,b
  3023  0007F8  11A2               	iorwf	(_usart+1)& (0+255),w,b
  3024  0007FA  B4D8               	btfsc	status,2,c
  3025  0007FC  EF02  F004         	goto	i2u204_41
  3026  000800  EF04  F004         	goto	i2u204_40
  3027  000804                     i2u204_41:
  3028  000804  EF43  F004         	goto	i2l122
  3029  000808                     i2u204_40:
  3030  000808                     
  3031                           ; BSR set to: 0
  3032                           ;application/Application.c: 140:     {;application/Application.c: 142:         char tmp[
      +                          20] = "";
  3033  000808  EE20  F080         	lfsr	2,ISR@F3567
  3034  00080C  EE10  F01C         	lfsr	1,ISR@tmp
  3035  000810  0E13               	movlw	19
  3036  000812                     i2u205_41:
  3037  000812  CFDB FFE3          	movff	plusw2,plusw1
  3038  000816  06E8               	decf	wreg,f,c
  3039  000818  E2FC               	bc	i2u205_41
  3040  00081A                     
  3041                           ; BSR set to: 0
  3042                           ;application/Application.c: 143:         usart.readString(tmp, 20);
  3043  00081A  0E1C               	movlw	low ISR@tmp
  3044  00081C  6E04               	movwf	USARTReadString@buf^0,c
  3045  00081E  0E00               	movlw	high ISR@tmp
  3046  000820  6E05               	movwf	(USARTReadString@buf+1)^0,c
  3047  000822  0E00               	movlw	0
  3048  000824  6E07               	movwf	(USARTReadString@max_length+1)^0,c
  3049  000826  0E14               	movlw	20
  3050  000828  6E06               	movwf	USARTReadString@max_length^0,c
  3051  00082A  EE20  F0A5         	lfsr	2,_usart+4
  3052  00082E  D802               	call	i2u206_48
  3053  000830  EF24  F004         	goto	i2u206_49
  3054  000834                     i2u206_48:
  3055  000834  0005               	push	
  3056  000836  6EFA               	movwf	pclath,c
  3057  000838  50DE               	movf	postinc2,w,c
  3058  00083A  6EFD               	movwf	tosl,c
  3059  00083C  50DE               	movf	postinc2,w,c
  3060  00083E  6EFE               	movwf	tosh,c
  3061  000840  50F8               	movf	tblptru,w,c
  3062  000842  6EFF               	movwf	tosu,c
  3063  000844  50FA               	movf	pclath,w,c
  3064  000846  0012               	return		;indir
  3065  000848                     i2u206_49:
  3066  000848                     
  3067                           ;application/Application.c: 144:         usart.writeLine(tmp);
  3068  000848  0E1C               	movlw	low ISR@tmp
  3069  00084A  6E03               	movwf	i2USARTWriteLine@ln^0,c
  3070  00084C  0E00               	movlw	high ISR@tmp
  3071  00084E  6E04               	movwf	(i2USARTWriteLine@ln+1)^0,c
  3072  000850  EE20  F0AB         	lfsr	2,_usart+10
  3073  000854  D802               	call	i2u207_48
  3074  000856  EF37  F004         	goto	i2u207_49
  3075  00085A                     i2u207_48:
  3076  00085A  0005               	push	
  3077  00085C  6EFA               	movwf	pclath,c
  3078  00085E  50DE               	movf	postinc2,w,c
  3079  000860  6EFD               	movwf	tosl,c
  3080  000862  50DE               	movf	postinc2,w,c
  3081  000864  6EFE               	movwf	tosh,c
  3082  000866  50F8               	movf	tblptru,w,c
  3083  000868  6EFF               	movwf	tosu,c
  3084  00086A  50FA               	movf	pclath,w,c
  3085  00086C  0012               	return		;indir
  3086  00086E                     i2u207_49:
  3087  00086E                     
  3088                           ;application/Application.c: 145:         softUSARTWriteString(tmp);
  3089  00086E  0E1C               	movlw	low ISR@tmp
  3090  000870  6E03               	movwf	softUSARTWriteString@str^0,c
  3091  000872  0E00               	movlw	high ISR@tmp
  3092  000874  6E04               	movwf	(softUSARTWriteString@str+1)^0,c
  3093  000876  EC43  F007         	call	_softUSARTWriteString	;wreg free
  3094  00087A                     
  3095                           ;application/Application.c: 147:         Led_open(&yellowLed);
  3096  00087A  0E36               	movlw	low _yellowLed
  3097  00087C  6E03               	movwf	i2Led_open@led^0,c
  3098  00087E  0E00               	movlw	high _yellowLed
  3099  000880  6E04               	movwf	(i2Led_open@led+1)^0,c
  3100  000882  EC8A  F007         	call	i2_Led_open	;wreg free
  3101  000886                     i2l122:
  3102  000886  C01B  FFF5         	movff	??_ISR+11,tablat
  3103  00088A  C01A  FFF8         	movff	??_ISR+10,tblptru
  3104  00088E  C019  FFF7         	movff	??_ISR+9,tblptrh
  3105  000892  C018  FFF6         	movff	??_ISR+8,tblptrl
  3106  000896  C017  FFDA         	movff	??_ISR+7,fsr2h
  3107  00089A  C016  FFD9         	movff	??_ISR+6,fsr2l
  3108  00089E  C015  FFE2         	movff	??_ISR+5,fsr1h
  3109  0008A2  C014  FFE1         	movff	??_ISR+4,fsr1l
  3110  0008A6  C013  FFEA         	movff	??_ISR+3,fsr0h
  3111  0008AA  C012  FFE9         	movff	??_ISR+2,fsr0l
  3112  0008AE  C011  FFFB         	movff	??_ISR+1,pclatu
  3113  0008B2  C010  FFFA         	movff	??_ISR,pclath
  3114  0008B6  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3115  0008B8  0011               	retfie		f
  3116  0008BA                     __end_of_ISR:
  3117                           	opt callstack 0
  3118                           
  3119 ;; *************** function i2_USARTWriteLine *****************
  3120 ;; Defined at:
  3121 ;;		line 93 in file "usart/UsartFunctions.h"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  ln              2    2[COMRAM] PTR const unsigned char 
  3124 ;;		 -> ISR@tmp(20), STR_2(12), STR_1(10), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3136 ;;      Params:         2       0       0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0
  3139 ;;      Totals:         2       0       0       0       0       0       0
  3140 ;;Total ram usage:        2 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    1
  3143 ;; This function calls:
  3144 ;;		i2_USARTWriteString
  3145 ;; This function is called by:
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text33
  3150  001044                     __ptext33:
  3151                           	opt callstack 0
  3152  001044                     i2_USARTWriteLine:
  3153                           	opt callstack 24
  3154  001044                     
  3155                           ;usart/UsartFunctions.h: 94:     USARTWriteString(ln);
  3156  001044  C003  F001         	movff	i2USARTWriteLine@ln,i2USARTWriteString@str
  3157  001048  C004  F002         	movff	i2USARTWriteLine@ln+1,i2USARTWriteString@str+1
  3158  00104C  EC89  F006         	call	i2_USARTWriteString	;wreg free
  3159                           
  3160                           ;usart/UsartFunctions.h: 95:     USARTWriteString("\r\n");
  3161  001050  0EB0               	movlw	low STR_3
  3162  001052  6E01               	movwf	i2USARTWriteString@str^0,c
  3163  001054  0E06               	movlw	high STR_3
  3164  001056  6E02               	movwf	(i2USARTWriteString@str+1)^0,c
  3165  001058  EC89  F006         	call	i2_USARTWriteString	;wreg free
  3166  00105C  0012               	return		;funcret
  3167  00105E                     __end_ofi2_USARTWriteLine:
  3168                           	opt callstack 0
  3169                           
  3170 ;; *************** function i2_USARTWriteString *****************
  3171 ;; Defined at:
  3172 ;;		line 71 in file "usart/UsartFunctions.h"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  str             2    0[COMRAM] PTR const unsigned char 
  3175 ;;		 -> STR_3(3), ISR@tmp(20), STR_2(12), STR_1(10), 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3187 ;;      Params:         2       0       0       0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0       0
  3190 ;;      Totals:         2       0       0       0       0       0       0
  3191 ;;Total ram usage:        2 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		i2_USARTWriteLine
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text34
  3201  000D12                     __ptext34:
  3202                           	opt callstack 0
  3203  000D12                     i2_USARTWriteString:
  3204                           	opt callstack 24
  3205  000D12                     
  3206                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  3207  000D12  EFA5  F006         	goto	i2l2403
  3208  000D16                     i2l442:
  3209  000D16  A89E               	btfss	3998,4,c	;volatile
  3210  000D18  EF90  F006         	goto	i2u124_41
  3211  000D1C  EF92  F006         	goto	i2u124_40
  3212  000D20                     i2u124_41:
  3213  000D20  EF8B  F006         	goto	i2l442
  3214  000D24                     i2u124_40:
  3215  000D24                     
  3216                           ;usart/UsartFunctions.h: 77:         TXREG = (*str);
  3217  000D24  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  3218  000D28  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  3219  000D2C  6AF8               	clrf	tblptru,c
  3220  000D2E  0E05               	movlw	(high __ramtop+-1)
  3221  000D30  64F7               	cpfsgt	tblptrh,c
  3222  000D32  D003               	bra	i2u125_47
  3223  000D34  0008               	tblrd		*
  3224  000D36  50F5               	movf	tablat,w,c
  3225  000D38  D005               	bra	i2u125_40
  3226  000D3A                     i2u125_47:
  3227  000D3A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3228  000D3E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3229  000D42  50EF               	movf	indf0,w,c
  3230  000D44                     i2u125_40:
  3231  000D44  6EAD               	movwf	173,c	;volatile
  3232  000D46                     
  3233                           ;usart/UsartFunctions.h: 80:         str++;
  3234  000D46  4A01               	infsnz	i2USARTWriteString@str^0,f,c
  3235  000D48  2A02               	incf	(i2USARTWriteString@str+1)^0,f,c
  3236  000D4A                     i2l2403:
  3237                           
  3238                           ;usart/UsartFunctions.h: 72:     while ((*str) != '\0') {
  3239  000D4A  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  3240  000D4E  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  3241  000D52  6AF8               	clrf	tblptru,c
  3242  000D54  0E05               	movlw	(high __ramtop+-1)
  3243  000D56  64F7               	cpfsgt	tblptrh,c
  3244  000D58  D003               	bra	i2u126_47
  3245  000D5A  0008               	tblrd		*
  3246  000D5C  50F5               	movf	tablat,w,c
  3247  000D5E  D005               	bra	i2u126_40
  3248  000D60                     i2u126_47:
  3249  000D60  CFF6 FFE9          	movff	tblptrl,fsr0l
  3250  000D64  CFF7 FFEA          	movff	tblptrh,fsr0h
  3251  000D68  50EF               	movf	indf0,w,c
  3252  000D6A                     i2u126_40:
  3253  000D6A  0900               	iorlw	0
  3254  000D6C  A4D8               	btfss	status,2,c
  3255  000D6E  EFBB  F006         	goto	i2u127_41
  3256  000D72  EFBD  F006         	goto	i2u127_40
  3257  000D76                     i2u127_41:
  3258  000D76  EF8B  F006         	goto	i2l442
  3259  000D7A                     i2u127_40:
  3260  000D7A  0012               	return		;funcret
  3261  000D7C                     __end_ofi2_USARTWriteString:
  3262                           	opt callstack 0
  3263                           
  3264 ;; *************** function i2_Led_open *****************
  3265 ;; Defined at:
  3266 ;;		line 11 in file "led/Led.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  led             2    2[COMRAM] PTR struct Led
  3269 ;;		 -> blueLed(4), redLed(4), yellowLed(4), 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3281 ;;      Params:         2       0       0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0
  3284 ;;      Totals:         2       0       0       0       0       0       0
  3285 ;;Total ram usage:        2 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    1
  3288 ;; This function calls:
  3289 ;;		i2_DigitalOutput_open
  3290 ;; This function is called by:
  3291 ;;		_ISR
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text35
  3296  000F14                     __ptext35:
  3297                           	opt callstack 0
  3298  000F14                     i2_Led_open:
  3299                           	opt callstack 24
  3300  000F14                     
  3301                           ;led/Led.c: 12:     led->isOpen = 1;
  3302  000F14  EE20 F002          	lfsr	2,2
  3303  000F18  5003               	movf	i2Led_open@led^0,w,c
  3304  000F1A  26D9               	addwf	fsr2l,f,c
  3305  000F1C  5004               	movf	(i2Led_open@led+1)^0,w,c
  3306  000F1E  22DA               	addwfc	fsr2h,f,c
  3307  000F20  0E01               	movlw	1
  3308  000F22  6EDE               	movwf	postinc2,c
  3309  000F24  0E00               	movlw	0
  3310  000F26  6EDD               	movwf	postdec2,c
  3311  000F28                     
  3312                           ;led/Led.c: 13:     DigitalOutput_open(led->output);
  3313  000F28  C003  FFD9         	movff	i2Led_open@led,fsr2l
  3314  000F2C  C004  FFDA         	movff	i2Led_open@led+1,fsr2h
  3315  000F30  CFDE F001          	movff	postinc2,i2DigitalOutput_open@output
  3316  000F34  CFDD F002          	movff	postdec2,i2DigitalOutput_open@output+1
  3317  000F38  EC54  F008         	call	i2_DigitalOutput_open	;wreg free
  3318  000F3C  0012               	return		;funcret
  3319  000F3E                     __end_ofi2_Led_open:
  3320                           	opt callstack 0
  3321                           
  3322 ;; *************** function i2_DigitalOutput_open *****************
  3323 ;; Defined at:
  3324 ;;		line 11 in file "io/digitalOutput/DigitalOutput.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  output          2    0[COMRAM] PTR struct DigitalOutput
  3327 ;;		 -> zEngineDirOutput(4), yEngineDirOutput(4), xEngineDirOutput(4), zEngineMotionOutput(4), 
  3328 ;;		 -> yEngineMotionOutput(4), xEngineMotionOutput(4), blueLedOutput(4), yellowLedOutput(4), 
  3329 ;;		 -> redLedOutput(4), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3341 ;;      Params:         2       0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0
  3344 ;;      Totals:         2       0       0       0       0       0       0
  3345 ;;Total ram usage:        2 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		i2_Led_open
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text36
  3355  0010A8                     __ptext36:
  3356                           	opt callstack 0
  3357  0010A8                     i2_DigitalOutput_open:
  3358                           	opt callstack 24
  3359  0010A8                     
  3360                           ;io/digitalOutput/DigitalOutput.c: 13:     (*output->set)(output,1);
  3361  0010A8  EE20 F002          	lfsr	2,2
  3362  0010AC  5001               	movf	i2DigitalOutput_open@output^0,w,c
  3363  0010AE  26D9               	addwf	fsr2l,f,c
  3364  0010B0  5002               	movf	(i2DigitalOutput_open@output+1)^0,w,c
  3365  0010B2  22DA               	addwfc	fsr2h,f,c
  3366  0010B4  0E01               	movlw	1
  3367  0010B6  6EDE               	movwf	postinc2,c
  3368  0010B8  0E00               	movlw	0
  3369  0010BA  6EDD               	movwf	postdec2,c
  3370  0010BC  0012               	return		;funcret
  3371  0010BE                     __end_ofi2_DigitalOutput_open:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _softUSARTWriteString *****************
  3375 ;; Defined at:
  3376 ;;		line 39 in file "softuart/softusart.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  str             2    2[COMRAM] PTR const unsigned char 
  3379 ;;		 -> ISR@tmp(20), 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3391 ;;      Params:         2       0       0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0
  3394 ;;      Totals:         2       0       0       0       0       0       0
  3395 ;;Total ram usage:        2 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    1
  3398 ;; This function calls:
  3399 ;;		_softusart_yaz
  3400 ;; This function is called by:
  3401 ;;		_ISR
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text37
  3406  000E86                     __ptext37:
  3407                           	opt callstack 0
  3408  000E86                     _softUSARTWriteString:
  3409                           	opt callstack 24
  3410  000E86                     
  3411                           ;softuart/softusart.c: 40:     while ((*str) != '\0') {
  3412  000E86  EF51  F007         	goto	i2l2447
  3413  000E8A                     i2l348:
  3414  000E8A  AA83               	btfss	131,5,c	;volatile
  3415  000E8C  EF4A  F007         	goto	i2u131_41
  3416  000E90  EF4C  F007         	goto	i2u131_40
  3417  000E94                     i2u131_41:
  3418  000E94  EF45  F007         	goto	i2l348
  3419  000E98                     i2u131_40:
  3420  000E98                     
  3421                           ;softuart/softusart.c: 45:         softusart_yaz(str);
  3422  000E98  5003               	movf	softUSARTWriteString@str^0,w,c
  3423  000E9A  ECE7  F006         	call	_softusart_yaz
  3424  000E9E                     
  3425                           ;softuart/softusart.c: 48:         str++;
  3426  000E9E  4A03               	infsnz	softUSARTWriteString@str^0,f,c
  3427  000EA0  2A04               	incf	(softUSARTWriteString@str+1)^0,f,c
  3428  000EA2                     i2l2447:
  3429                           
  3430                           ;softuart/softusart.c: 40:     while ((*str) != '\0') {
  3431  000EA2  C003  FFD9         	movff	softUSARTWriteString@str,fsr2l
  3432  000EA6  C004  FFDA         	movff	softUSARTWriteString@str+1,fsr2h
  3433  000EAA  50DF               	movf	indf2,w,c
  3434  000EAC  A4D8               	btfss	status,2,c
  3435  000EAE  EF5B  F007         	goto	i2u132_41
  3436  000EB2  EF5D  F007         	goto	i2u132_40
  3437  000EB6                     i2u132_41:
  3438  000EB6  EF45  F007         	goto	i2l348
  3439  000EBA                     i2u132_40:
  3440  000EBA  0012               	return		;funcret
  3441  000EBC                     __end_of_softUSARTWriteString:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _softusart_yaz *****************
  3445 ;; Defined at:
  3446 ;;		line 53 in file "softuart/softusart.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  veri            1    wreg     unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  veri            1    0[COMRAM] unsigned char 
  3451 ;;  i               1    1[COMRAM] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3461 ;;      Params:         0       0       0       0       0       0       0
  3462 ;;      Locals:         2       0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0
  3464 ;;      Totals:         2       0       0       0       0       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_softUSARTWriteString
  3471 ;;		_putch
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text38
  3476  000DCE                     __ptext38:
  3477                           	opt callstack 0
  3478  000DCE                     _softusart_yaz:
  3479                           	opt callstack 24
  3480                           
  3481                           ;incstack = 0
  3482                           ;softusart_yaz@veri stored from wreg
  3483  000DCE  6E01               	movwf	softusart_yaz@veri^0,c
  3484  000DD0                     
  3485                           ;softuart/softusart.c: 53: void softusart_yaz(char veri);softuart/softusart.c: 54: {;sof
      +                          tuart/softusart.c: 55:  char i;;softuart/softusart.c: 56:  LATDbits.LD6=0;
  3486  000DD0  9C8C               	bcf	140,6,c	;volatile
  3487  000DD2                     
  3488                           ;softuart/softusart.c: 57:  _delay((8000000/4) / 9600 -11);
  3489  000DD2  0E41               	movlw	65
  3490  000DD4                     i2u232_47:
  3491  000DD4  2EE8               	decfsz	wreg,f,c
  3492  000DD6  D7FE               	bra	i2u232_47
  3493  000DD8  D000               	nop2	
  3494  000DDA                     
  3495                           ;softuart/softusart.c: 58:  for(i=8;i>0;i--)
  3496  000DDA  0E08               	movlw	8
  3497  000DDC  6E02               	movwf	softusart_yaz@i^0,c
  3498  000DDE                     i2l2373:
  3499                           
  3500                           ;softuart/softusart.c: 59:  {;softuart/softusart.c: 60:   veri=veri>>1;
  3501  000DDE  90D8               	bcf	status,0,c
  3502  000DE0  3001               	rrcf	softusart_yaz@veri^0,w,c
  3503  000DE2  6E01               	movwf	softusart_yaz@veri^0,c
  3504  000DE4                     
  3505                           ;softuart/softusart.c: 61:   LATDbits.LD6=CARRY;
  3506  000DE4  A0D8               	btfss	status,0,c	;volatile
  3507  000DE6  D002               	bra	i2u120_45
  3508  000DE8  8C8C               	bsf	140,6,c	;volatile
  3509  000DEA  D001               	bra	i2u120_47
  3510  000DEC                     i2u120_45:
  3511  000DEC  9C8C               	bcf	140,6,c	;volatile
  3512  000DEE                     i2u120_47:
  3513  000DEE                     
  3514                           ;softuart/softusart.c: 62:   _delay((8000000/4) / 9600 -16);
  3515  000DEE  0E40               	movlw	64
  3516  000DF0                     i2u233_47:
  3517  000DF0  2EE8               	decfsz	wreg,f,c
  3518  000DF2  D7FE               	bra	i2u233_47
  3519                           
  3520                           ;softuart/softusart.c: 63:  }
  3521  000DF4  0602               	decf	softusart_yaz@i^0,f,c
  3522  000DF6  5002               	movf	softusart_yaz@i^0,w,c
  3523  000DF8  A4D8               	btfss	status,2,c
  3524  000DFA  EF01  F007         	goto	i2u121_41
  3525  000DFE  EF03  F007         	goto	i2u121_40
  3526  000E02                     i2u121_41:
  3527  000E02  EFEF  F006         	goto	i2l2373
  3528  000E06                     i2u121_40:
  3529  000E06                     
  3530                           ;softuart/softusart.c: 64:  LATDbits.LD6=1;
  3531  000E06  8C8C               	bsf	140,6,c	;volatile
  3532  000E08                     
  3533                           ;softuart/softusart.c: 65:  _delay((8000000/4) / 9600);
  3534  000E08  0E45               	movlw	69
  3535  000E0A                     i2u234_47:
  3536  000E0A  2EE8               	decfsz	wreg,f,c
  3537  000E0C  D7FE               	bra	i2u234_47
  3538  000E0E  F000               	nop	
  3539  000E10  0012               	return		;funcret
  3540  000E12                     __end_of_softusart_yaz:
  3541                           	opt callstack 0
  3542                           
  3543 ;; *************** function _USARTReadString *****************
  3544 ;; Defined at:
  3545 ;;		line 40 in file "usart/UsartFunctions.h"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  buf             2    3[COMRAM] PTR unsigned char 
  3548 ;;		 -> ISR@tmp(20), 
  3549 ;;  max_length      2    5[COMRAM] int 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  i               2   12[COMRAM] int 
  3552 ;;  tmp             1   14[COMRAM] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2    3[COMRAM] int 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3562 ;;      Params:         4       0       0       0       0       0       0
  3563 ;;      Locals:         3       0       0       0       0       0       0
  3564 ;;      Temps:          5       0       0       0       0       0       0
  3565 ;;      Totals:        12       0       0       0       0       0       0
  3566 ;;Total ram usage:       12 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    2
  3569 ;; This function calls:
  3570 ;;		_USARTReadChar
  3571 ;; This function is called by:
  3572 ;;		_setupFunctions
  3573 ;;		_ISR
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text39
  3578  000A4E                     __ptext39:
  3579                           	opt callstack 0
  3580  000A4E                     _USARTReadString:
  3581                           	opt callstack 23
  3582  000A4E                     
  3583                           ;usart/UsartFunctions.h: 41:     int i = 0;
  3584  000A4E  0E00               	movlw	0
  3585  000A50  6E0E               	movwf	(USARTReadString@i+1)^0,c
  3586  000A52  0E00               	movlw	0
  3587  000A54  6E0D               	movwf	USARTReadString@i^0,c
  3588                           
  3589                           ;usart/UsartFunctions.h: 43:     for (i = 0; i < max_length - 1; i++) {
  3590  000A56  0E00               	movlw	0
  3591  000A58  6E0E               	movwf	(USARTReadString@i+1)^0,c
  3592  000A5A  0E00               	movlw	0
  3593  000A5C  6E0D               	movwf	USARTReadString@i^0,c
  3594  000A5E  EF5A  F005         	goto	i2l2471
  3595  000A62                     i2l2459:
  3596                           
  3597                           ;usart/UsartFunctions.h: 44:         tmp = USARTReadChar();
  3598  000A62  EC2F  F008         	call	_USARTReadChar	;wreg free
  3599  000A66  6E0F               	movwf	USARTReadString@tmp^0,c
  3600  000A68                     
  3601                           ;usart/UsartFunctions.h: 46:         if (tmp == '\0' || tmp == '\n' || tmp == '\r') {
  3602  000A68  500F               	movf	USARTReadString@tmp^0,w,c
  3603  000A6A  B4D8               	btfsc	status,2,c
  3604  000A6C  EF3A  F005         	goto	i2u134_41
  3605  000A70  EF3C  F005         	goto	i2u134_40
  3606  000A74                     i2u134_41:
  3607  000A74  EF75  F005         	goto	i2l2473
  3608  000A78                     i2u134_40:
  3609  000A78  0E0A               	movlw	10
  3610  000A7A  180F               	xorwf	USARTReadString@tmp^0,w,c
  3611  000A7C  B4D8               	btfsc	status,2,c
  3612  000A7E  EF43  F005         	goto	i2u135_41
  3613  000A82  EF45  F005         	goto	i2u135_40
  3614  000A86                     i2u135_41:
  3615  000A86  EF75  F005         	goto	i2l2473
  3616  000A8A                     i2u135_40:
  3617  000A8A  0E0D               	movlw	13
  3618  000A8C  180F               	xorwf	USARTReadString@tmp^0,w,c
  3619  000A8E  A4D8               	btfss	status,2,c
  3620  000A90  EF4C  F005         	goto	i2u136_41
  3621  000A94  EF4E  F005         	goto	i2u136_40
  3622  000A98                     i2u136_41:
  3623  000A98  EF50  F005         	goto	i2l2467
  3624  000A9C                     i2u136_40:
  3625  000A9C  EF75  F005         	goto	i2l2473
  3626  000AA0                     i2l2467:
  3627                           
  3628                           ;usart/UsartFunctions.h: 49:         buf[i] = tmp;
  3629  000AA0  500D               	movf	USARTReadString@i^0,w,c
  3630  000AA2  2404               	addwf	USARTReadString@buf^0,w,c
  3631  000AA4  6ED9               	movwf	fsr2l,c
  3632  000AA6  500E               	movf	(USARTReadString@i+1)^0,w,c
  3633  000AA8  2005               	addwfc	(USARTReadString@buf+1)^0,w,c
  3634  000AAA  6EDA               	movwf	fsr2h,c
  3635  000AAC  C00F  FFDF         	movff	USARTReadString@tmp,indf2
  3636  000AB0                     
  3637                           ;usart/UsartFunctions.h: 50:     }
  3638  000AB0  4A0D               	infsnz	USARTReadString@i^0,f,c
  3639  000AB2  2A0E               	incf	(USARTReadString@i+1)^0,f,c
  3640  000AB4                     i2l2471:
  3641  000AB4  0EFF               	movlw	255
  3642  000AB6  6E08               	movwf	??_USARTReadString^0,c
  3643  000AB8  0EFF               	movlw	255
  3644  000ABA  6E09               	movwf	(??_USARTReadString+1)^0,c
  3645  000ABC  C006  F00A         	movff	USARTReadString@max_length,??_USARTReadString+2
  3646  000AC0  C007  F00B         	movff	USARTReadString@max_length+1,??_USARTReadString+3
  3647  000AC4  5008               	movf	??_USARTReadString^0,w,c
  3648  000AC6  260A               	addwf	(??_USARTReadString+2)^0,f,c
  3649  000AC8  5009               	movf	(??_USARTReadString+1)^0,w,c
  3650  000ACA  220B               	addwfc	(??_USARTReadString+3)^0,f,c
  3651  000ACC  500A               	movf	(??_USARTReadString+2)^0,w,c
  3652  000ACE  5C0D               	subwf	USARTReadString@i^0,w,c
  3653  000AD0  500E               	movf	(USARTReadString@i+1)^0,w,c
  3654  000AD2  0A80               	xorlw	128
  3655  000AD4  6E0C               	movwf	(??_USARTReadString+4)^0,c
  3656  000AD6  500B               	movf	(??_USARTReadString+3)^0,w,c
  3657  000AD8  0A80               	xorlw	128
  3658  000ADA  580C               	subwfb	(??_USARTReadString+4)^0,w,c
  3659  000ADC  A0D8               	btfss	status,0,c
  3660  000ADE  EF73  F005         	goto	i2u137_41
  3661  000AE2  EF75  F005         	goto	i2u137_40
  3662  000AE6                     i2u137_41:
  3663  000AE6  EF31  F005         	goto	i2l2459
  3664  000AEA                     i2u137_40:
  3665  000AEA                     i2l2473:
  3666                           
  3667                           ;usart/UsartFunctions.h: 52:     buf[i + 1] = '\0';
  3668  000AEA  500D               	movf	USARTReadString@i^0,w,c
  3669  000AEC  2404               	addwf	USARTReadString@buf^0,w,c
  3670  000AEE  6E08               	movwf	??_USARTReadString^0,c
  3671  000AF0  500E               	movf	(USARTReadString@i+1)^0,w,c
  3672  000AF2  2005               	addwfc	(USARTReadString@buf+1)^0,w,c
  3673  000AF4  6E09               	movwf	(??_USARTReadString+1)^0,c
  3674  000AF6  0E01               	movlw	1
  3675  000AF8  2408               	addwf	??_USARTReadString^0,w,c
  3676  000AFA  6ED9               	movwf	fsr2l,c
  3677  000AFC  0E00               	movlw	0
  3678  000AFE  2009               	addwfc	(??_USARTReadString+1)^0,w,c
  3679  000B00  6EDA               	movwf	fsr2h,c
  3680  000B02  0E00               	movlw	0
  3681  000B04  6EDF               	movwf	indf2,c
  3682  000B06  0012               	return		;funcret
  3683  000B08                     __end_of_USARTReadString:
  3684                           	opt callstack 0
  3685                           
  3686 ;; *************** function _USARTReadChar *****************
  3687 ;; Defined at:
  3688 ;;		line 35 in file "usart/UsartFunctions.h"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      unsigned char 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3702 ;;      Params:         0       0       0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    1
  3709 ;; This function calls:
  3710 ;;		_USARTDataReady
  3711 ;; This function is called by:
  3712 ;;		_USARTReadString
  3713 ;;		_setupFunctions
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text40
  3718  00105E                     __ptext40:
  3719                           	opt callstack 0
  3720  00105E                     _USARTReadChar:
  3721                           	opt callstack 23
  3722  00105E                     i2l2385:
  3723  00105E  EC07  F008         	call	_USARTDataReady	;wreg free
  3724  001062  5001               	movf	?_USARTDataReady^0,w,c
  3725  001064  1002               	iorwf	(?_USARTDataReady+1)^0,w,c
  3726  001066  B4D8               	btfsc	status,2,c
  3727  001068  EF38  F008         	goto	i2u122_41
  3728  00106C  EF3A  F008         	goto	i2u122_40
  3729  001070                     i2u122_41:
  3730  001070  EF2F  F008         	goto	i2l2385
  3731  001074                     i2u122_40:
  3732  001074                     
  3733                           ;usart/UsartFunctions.h: 37:     return RCREG;
  3734  001074  50AE               	movf	174,w,c	;volatile
  3735  001076  0012               	return		;funcret
  3736  001078                     __end_of_USARTReadChar:
  3737                           	opt callstack 0
  3738                           
  3739 ;; *************** function _USARTDataReady *****************
  3740 ;; Defined at:
  3741 ;;		line 25 in file "usart/UsartFunctions.h"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  2    0[COMRAM] int 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3755 ;;      Params:         2       0       0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0
  3757 ;;      Temps:          1       0       0       0       0       0       0
  3758 ;;      Totals:         3       0       0       0       0       0       0
  3759 ;;Total ram usage:        3 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_USARTReadChar
  3765 ;;		_setupFunctions
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text41
  3770  00100E                     __ptext41:
  3771                           	opt callstack 0
  3772  00100E                     _USARTDataReady:
  3773                           	opt callstack 23
  3774  00100E                     
  3775                           ;usart/UsartFunctions.h: 26:     return PIR1bits.RCIF;
  3776  00100E  BA9E               	btfsc	158,5,c	;volatile
  3777  001010  EF0C  F008         	goto	i2u112_41
  3778  001014  EF10  F008         	goto	i2u112_40
  3779  001018                     i2u112_41:
  3780  001018  6A03               	clrf	??_USARTDataReady^0,c
  3781  00101A  2A03               	incf	??_USARTDataReady^0,f,c
  3782  00101C  EF11  F008         	goto	i2u112_48
  3783  001020                     i2u112_40:
  3784  001020  6A03               	clrf	??_USARTDataReady^0,c
  3785  001022                     i2u112_48:
  3786  001022  5003               	movf	??_USARTDataReady^0,w,c
  3787  001024  6E01               	movwf	?_USARTDataReady^0,c
  3788  001026  6A02               	clrf	(?_USARTDataReady+1)^0,c
  3789  001028  0012               	return		;funcret
  3790  00102A                     __end_of_USARTDataReady:
  3791                           	opt callstack 0
  3792                           
  3793                           	psect	text42
  3794  000000                     __ptext42:
  3795                           	opt callstack 0
  3796  000000                     
  3797                           	psect	rparam
  3798  0000                     
  3799                           	psect	temp
  3800  00005C                     btemp:
  3801                           	opt callstack 0
  3802  00005C                     	ds	1
  3803  0000                     int$flags	set	btemp
  3804  0000                     wtemp8	set	btemp+1
  3805  0000                     ttemp5	set	btemp+1
  3806  0000                     ttemp6	set	btemp+4
  3807  0000                     ttemp7	set	btemp+8
  3808                           tosu	equ	0xFFF
  3809                           tosh	equ	0xFFE
  3810                           tosl	equ	0xFFD
  3811                           stkptr	equ	0xFFC
  3812                           pclatu	equ	0xFFB
  3813                           pclath	equ	0xFFA
  3814                           pcl	equ	0xFF9
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           prodh	equ	0xFF4
  3820                           prodl	equ	0xFF3
  3821                           indf0	equ	0xFEF
  3822                           postinc0	equ	0xFEE
  3823                           postdec0	equ	0xFED
  3824                           preinc0	equ	0xFEC
  3825                           plusw0	equ	0xFEB
  3826                           fsr0h	equ	0xFEA
  3827                           fsr0l	equ	0xFE9
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           postinc1	equ	0xFE6
  3831                           postdec1	equ	0xFE5
  3832                           preinc1	equ	0xFE4
  3833                           plusw1	equ	0xFE3
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           bsr	equ	0xFE0
  3837                           indf2	equ	0xFDF
  3838                           postinc2	equ	0xFDE
  3839                           postdec2	equ	0xFDD
  3840                           preinc2	equ	0xFDC
  3841                           plusw2	equ	0xFDB
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8


Data Sizes:
    Strings     54
    Constant    124
    Data        0
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     47      91
    BANK0           128     38      99
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    MotionController_init@motionController.dirOutput	PTR struct DigitalOutput size(2) Largest target is 0
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_init@motionController.motionOutput	PTR struct DigitalOutput size(2) Largest target is 0
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    S50$4$0	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    button1Read@button	PTR struct Button size(2) Largest target is 2
		 -> DigitalInput_init@input(BANK0[2]), button1Input(COMRAM[2]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_4(CODE[29]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S32$0$0	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), 

    ?_DigitalOutput_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_DigitalInput_init.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    S25$0$0	PTR struct DigitalInput size(2) Largest target is 2
		 -> DigitalInput_init@input(BANK0[2]), button1Input(COMRAM[2]), 

    Application_loop@app	PTR struct . size(2) Largest target is 2
		 -> main@app(BANK0[2]), 

    ?_MotionController_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_MotionController_init.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_MotionController_init.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_MotionController_init.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_Led_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_Led_init.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    ?_Engine_init.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    ?_Engine_init.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    ?_Engine_init.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    ?_Button_init.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    ?_Button_init.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ?_Button_init.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    S50$2$0	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    S50$5$0	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    S2068_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    DigitalOutput_set@outputable.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    DigitalOutput_close@output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    DigitalOutput_close@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), 

    DigitalOutput_open@output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    DigitalOutput_open@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), zEngineMotionOutput(COMRAM[4]), 
		 -> yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), 

    DigitalOutput_init@init	PTR FTN()void  size(2) Largest target is 1
		 -> zEngineDirInit(), yEngineDirInit(), xEngineDirInit(), zEngineMotionInit(), 
		 -> yEngineMotionInit(), xEngineMotionInit(), blueLedInit(), yellowLedInit(), 
		 -> redLedInit(), 

    DigitalOutput_init@set	PTR FTN()void  size(2) Largest target is 1
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedSet(), yellowLedSet(), 
		 -> redLedSet(), 

    output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> i2_redLedSet(), i2_yellowLedSet(), i2_blueLedSet(), i2_xEngineMotionSet(), 
		 -> i2_xEngineDirSet(), xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), 
		 -> yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), 
		 -> redLedSet(), 

    DigitalInput_getValue@input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    DigitalInput_getValue@input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    DigitalInput_init@init	PTR FTN()void  size(2) Largest target is 1
		 -> button1Init(), 

    DigitalInput_init@read	PTR FTN()int  size(2) Largest target is 2
		 -> button1Read(), 

    input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    sp__Point_toString	PTR unsigned char  size(2) Largest target is 40
		 -> Point_toString@ret(COMRAM[40]), 

    USARTInit@usart	PTR struct . size(2) Largest target is 20
		 -> usart(BANK0[20]), 

    setupFunctions@usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    setupFunctions@usart.writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    setupFunctions@usart.writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    setupFunctions@usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    setupFunctions@usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    setupFunctions@usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    setupFunctions@usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    setupFunctions@usart.readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    setupFunctions@usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    setupFunctions@usart.isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    setupFunctions@usart	PTR struct . size(2) Largest target is 20
		 -> usart(BANK0[20]), 

    USARTWriteLine@ln	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[3]), ISR@tmp(COMRAM[20]), STR_2(CODE[12]), STR_1(CODE[10]), 

    USARTReadString@buf	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    softUSARTWriteString@str	PTR const unsigned char  size(2) Largest target is 20
		 -> ISR@tmp(COMRAM[20]), 

    MotionController_getDestinationCoord@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getDestinationCoord@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_getCurrentCoord@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    MotionController_control@motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    MotionController_control@motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.z.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    motionController.y.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    motionController.x.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    motionController.z.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.z.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.y.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.y.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    motionController.x.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    motionController.x.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Led_close@led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    Led_close@led	PTR struct Led size(2) Largest target is 5
		 -> blueLed(COMRAM[4]), yellowLed(COMRAM[4]), 

    Led_open@led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    Led_open@led	PTR struct Led size(2) Largest target is 5
		 -> blueLed(COMRAM[4]), redLed(BANK0[4]), yellowLed(COMRAM[4]), 

    led.output.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    Led_init@output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    led.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    Engine_setDestinationToAddCurrentCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_setDestinationToAddCurrentCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_step@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_step@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getDestinationCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getDestinationCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getCurrentCoord@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getCurrentCoord@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_getStepPerMetrice@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_getStepPerMetrice@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Engine_setStepPerMetrice@engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    Engine_setStepPerMetrice@engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    engine.dirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    engine.motionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S402Engine$dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    engine.dirOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineDirOutput(COMRAM[4]), yEngineDirOutput(COMRAM[4]), xEngineDirOutput(COMRAM[4]), 

    S402Engine$motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    engine.motionOutput	PTR struct DigitalOutput size(2) Largest target is 4
		 -> zEngineMotionOutput(COMRAM[4]), yEngineMotionOutput(COMRAM[4]), xEngineMotionOutput(COMRAM[4]), 

    Button_isPressed@button.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Button_isPressed@button.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    Button_init@onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    buton.input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    Button_init@input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    buton.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    buton.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    button.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    blueLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    redLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yellowLed.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S200Button$onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    button.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S200Button$input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    button.input	PTR struct DigitalInput size(2) Largest target is 2
		 -> button1Input(COMRAM[2]), 

    redLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    blueLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    S96Led$output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    yellowLed.output	PTR struct DigitalOutput size(2) Largest target is 4
		 -> blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), redLedOutput(COMRAM[4]), 

    blueLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yellowLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    redLedOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S50$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    S50$writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    usart.writeFloat	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteFloat(), 

    S50$writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    usart.writeLong	PTR FTN(long ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLong(), 

    S50$writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    S50$writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    S50$writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    S50$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    S50$readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    usart.readString	PTR FTN(PTR unsigned char ,int ,)int  size(2) Largest target is 2
		 -> USARTReadString(), 

    S50$readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    S50$isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    usart.isDataReady	PTR FTN()int  size(2) Largest target is 2
		 -> USARTDataReady(), 

    zEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    xEngineDirOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    zEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    yEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S32DigitalOutput$set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    xEngineMotionOutput.set	PTR FTN(PTR struct DigitalOutput,int ,)void  size(2) Largest target is 4
		 -> xEngineDirSet(), xEngineMotionSet(), blueLedOutput(BANK0[4]), yellowLedOutput(COMRAM[4]), 
		 -> redLedOutput(COMRAM[4]), blueLedSet(), yellowLedSet(), redLedSet(), 

    S25DigitalInput$read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 

    button1Input.read	PTR FTN(PTR struct DigitalInput,)int  size(2) Largest target is 2
		 -> button1Read(), button1Input(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_USARTReadString
    i2_USARTWriteLine->i2_USARTWriteString
    i2_Led_open->i2_DigitalOutput_open
    _softUSARTWriteString->_softusart_yaz
    _USARTReadChar->_USARTDataReady

Critical Paths under _main in BANK0

    _main->_Application_init
    _Application_loop->_DigitalInput_getValue
    _Application_loop->_Led_close
    _Application_loop->_Led_open
    _Application_loop->_USARTWriteLine
    _USARTWriteLine->_USARTWriteString
    _Led_open->_DigitalOutput_open
    _Led_close->_DigitalOutput_close
    _Application_init->_USARTInit
    _USARTInit->_calculateSpbrg
    _calculateSpbrg->___aldiv
    _LedConfigurator_config->_DigitalOutput_init
    _ButtonConfigurator_config->_DigitalInput_init
    _DigitalInput_init->_button1Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6144
                                             36 BANK0      2     2      0
                   _Application_init
                   _Application_loop
 ---------------------------------------------------------------------------------
 (1) _Application_loop                                     2     0      2    1881
                                              4 BANK0      2     0      2
              _DigitalInput_getValue
                          _Led_close
                           _Led_open
                     _USARTWriteLine *
 ---------------------------------------------------------------------------------
 (2) _USARTWriteLine                                       2     0      2     436
                                              2 BANK0      2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     245
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Led_open                                             2     0      2     598
                                              2 BANK0      2     0      2
                 _DigitalOutput_open
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_open                                   2     0      2     301
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Led_close                                            2     0      2     543
                                              2 BANK0      2     0      2
                _DigitalOutput_close
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_close                                  2     0      2     301
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DigitalInput_getValue                                4     2      2     214
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Application_init                                     4     2      2    4229
                                             32 BANK0      4     2      2
          _ButtonConfigurator_config
                        _Button_init
             _LedConfigurator_config
                           _Led_init
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            6     0      6    1422
                                             26 BANK0      6     0      6
                     _calculateSpbrg
                   _enableInterrupts
                     _setupFunctions
 ---------------------------------------------------------------------------------
 (3) _setupFunctions                                       2     0      2     400
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _enableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateSpbrg                                      12     8      4     780
                                             14 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _Led_init                                             8     4      4     335
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LedConfigurator_config                               0     0      0    1716
                 _DigitalOutput_init
 ---------------------------------------------------------------------------------
 (3) _DigitalOutput_init                                   8     4      4    1716
                                              0 BANK0      8     4      4
                        _blueLedInit *
                         _redLedInit *
                     _xEngineDirInit *
                  _xEngineMotionInit *
                     _yEngineDirInit *
                  _yEngineMotionInit *
                      _yellowLedInit *
                     _zEngineDirInit *
                  _zEngineMotionInit *
 ---------------------------------------------------------------------------------
 (4) _zEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _zEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _yellowLedInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _yEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _yEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _xEngineMotionInit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _xEngineDirInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _redLedInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _blueLedInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Button_init                                          8     4      4     313
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ButtonConfigurator_config                            0     0      0     409
                  _DigitalInput_init
 ---------------------------------------------------------------------------------
 (3) _DigitalInput_init                                    8     4      4     409
                                              3 BANK0      8     4      4
                        _button1Init *
                        _button1Read *
 ---------------------------------------------------------------------------------
 (4) _button1Read                                          3     1      2      65
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _button1Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 32    32      0     913
                                             15 COMRAM    32    32      0
                    _USARTReadString *
               _softUSARTWriteString
                         i2_Led_open
                   i2_USARTWriteLine *
 ---------------------------------------------------------------------------------
 (6) i2_USARTWriteLine                                     2     0      2     145
                                              2 COMRAM     2     0      2
                 i2_USARTWriteString
 ---------------------------------------------------------------------------------
 (7) i2_USARTWriteString                                   2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) i2_Led_open                                           2     0      2     118
                                              2 COMRAM     2     0      2
               i2_DigitalOutput_open
 ---------------------------------------------------------------------------------
 (7) i2_DigitalOutput_open                                 2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _softUSARTWriteString                                 2     0      2     190
                                              2 COMRAM     2     0      2
                      _softusart_yaz
 ---------------------------------------------------------------------------------
 (7) _softusart_yaz                                        2     2      0      69
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _USARTReadString                                     12     8      4     337
                                              3 COMRAM    12     8      4
                      _USARTReadChar
 ---------------------------------------------------------------------------------
 (7) _USARTReadChar                                        0     0      0       0
                     _USARTDataReady
 ---------------------------------------------------------------------------------
 (8) _USARTDataReady                                       3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_init
     _ButtonConfigurator_config
       _DigitalInput_init
         _button1Init *
         _button1Read *
     _Button_init
     _LedConfigurator_config
       _DigitalOutput_init
         _blueLedInit *
         _redLedInit *
         _xEngineDirInit *
         _xEngineMotionInit *
         _yEngineDirInit *
         _yEngineMotionInit *
         _yellowLedInit *
         _zEngineDirInit *
         _zEngineMotionInit *
     _Led_init
     _USARTInit
       _calculateSpbrg
         ___aldiv
       _enableInterrupts
       _setupFunctions
   _Application_loop
     _DigitalInput_getValue
     _Led_close
       _DigitalOutput_close
     _Led_open
       _DigitalOutput_open
     _USARTWriteLine *
       _USARTWriteString

 _ISR (ROOT)
   _USARTReadString *
     _USARTReadChar
       _USARTDataReady
   _softUSARTWriteString *
     _softusart_yaz
   i2_Led_open *
     i2_DigitalOutput_open
   i2_USARTWriteLine *
     i2_USARTWriteString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      63       5       77.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2F      5B       1       72.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      15        0.0%
DATA                 0      0      BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 13 14:18:03 2020

                   ?_USARTDataReady 0001                   USARTInit@baudRate 00D9  
                    _yEngineDirInit 10D6                       fp__redLedInit 0000  
                                _L1 0659                                  _L2 0655  
                                _L3 0651                                  _L4 064D  
                                _L5 0649                                  _L6 0645  
                                _P1 0641                                  l62 10EC  
                                _P2 063D                                  _P3 0639  
                                _P4 0635                                  l65 10E8  
                                _P5 0631                                  l59 10F0  
                                l83 0D10                                  _bp 0669  
                                _cp 061D                         __CFG_BORV$3 000000  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_LVP$ON 000000                                 l200 10F4  
                               l114 0BB2                                 l212 10DC  
                               l109 0984                                 l127 0FCC  
                               l215 10D8                                 l240 0EE6  
                               l218 10D4                                 l243 0F12  
                               l237 1042                                 l610 0FEC  
                               l194 10E4                                 l442 0BC2  
                               l604 10F8                                 l197 10E0  
                               l446 0C28                                 l607 100C  
                               l449 0F88                                 l570 0E84  
                               l490 0A4C                                 l564 0DCC  
                               l493 10D0                                 l573 108E  
                               l567 10C8                                 l496 0C9C  
                               l576 10A6                                 l499 0E4E  
                               l692 07C0                                 _GIE 007F97  
                      __CFG_CPB$OFF 000000                        __CFG_CPD$OFF 000000  
                               _ISR 0008                      ?_USARTReadChar 0001  
                               _lg2 062D                   _DigitalInput_init 0D7C  
            __size_of_yellowLedInit 0004                    _yEngineDirOutput 0046  
                  fp__yellowLedInit 0000                                 _ovt 0621  
                               tosl 000FFD                                 wreg 000FE8  
                ?_DigitalInput_init 00C0          __end_ofi2_USARTWriteString 0D7C  
                    fp__button1Init 0000                      fp__button1Read 0000  
                              ?_ISR 0001                     ?_calculateSpbrg 00CB  
                      __CFG_WDT$OFF 000000                                l3103 0F8A  
                              l3105 0F96                 fp_i2_USARTWriteLine 0000  
                              l2801 076E                                l2811 07A0  
                              l2803 077E                                l2821 0E74  
                              l2901 102A                                l2813 07B0  
                              l2805 0780                                l2911 0FBC  
                              l2751 10EA                                l2903 1032  
                              l2807 078A                                l2831 0BD0  
                              l2753 10E6                                l2761 10DA  
                              l2817 0E50                                l2809 0790  
                              l2841 09AC                                l2921 10BE  
                              l2825 1078                                l2833 0BF2  
                              l2907 0FCE                                l2755 10E2  
                              l2763 10D6                                l2819 0E58  
                              l2851 0A10                                l2843 09C0  
                              l2931 08BA                                l2827 1090  
                              l2915 0EBC                                l2835 0BF8  
                              l2909 0FAC                                l2749 10EE  
                              l2757 10DE                                l2765 10D2  
                              l2781 06DC                                l2773 06B4  
                              l2861 0C5E                                l2853 0A24  
                              l2845 09D4                                l2837 0986  
                              l2941 0934                                l2933 08D8  
                              l2925 0EE8                                l2917 0ED2  
                              l2829 0BBE                                l2767 10F6  
                              l2871 0DC4                                l2759 10F2  
                              l2791 0724                                l2783 06EA  
                              l2775 06BA                                l2855 0A38  
                              l2847 09E8                                l2839 0996  
                              l2943 0952                                l2935 08F4  
                              l2919 10BE                                l2927 0EFE  
                              l2951 0B08                                l2769 0FEE  
                              l2873 0DC4                                l2865 0D7C  
                              l2793 072C                                l2785 06FA  
                              l2777 06C8                                l2857 10CA  
                              l2849 09FC                                l2881 0E16  
                              l2945 0956                                l2937 08F8  
                              l2929 0F6E                                l2961 0B7E  
                              l2953 0B16                                l2867 0D84  
                              l2795 0738                                l2787 06FE  
                              l2779 06D8                                l2859 0C2A  
                              l2891 0E3A                                l2883 0E1A  
                              l2947 097C                                l2939 0916  
                              l2963 0BA4                                l2955 0B38  
                              l2869 0DA0                                l2877 0C9E  
                              l2797 0746                                l2789 070E  
                              l2893 0E3C                                l2885 0E1C  
                              l2957 0B5E                                l2799 0750  
                              l2895 0E3E                                l2887 0E36  
                              l2879 0E12                                l2959 0B6C  
                              l2897 0E40                                l2889 0E38  
                              l2899 0E42                                STR_1 06A6  
                              STR_2 069A                                STR_3 06B0  
                              STR_4 067D                                _BRGH 007D62  
                              _CREN 007D5C                                u2000 0B38  
                              u2001 0B34                                u2018 0B4A  
                              u2019 0B5E                                u2028 0B90  
                              u2029 0BA4                                _LATA 000F89  
                              _LATB 000F8A                                _LATC 000F8B  
                              _LATD 000F8C                                _LATE 000F8D  
                              u1900 076E                                u1901 076A  
                              u1910 07A0                                u1911 079C  
                              u1850 1002                                u1930 0BD0  
                              u1851 0FF8                                u1931 0BCC  
                              u1860 06C8                                u1940 0BF0  
                              u1861 06C4                                u1870 06EA  
                              u1950 0C18                                u1871 06E6  
                              u1928 0E5E                                u1880 0724  
                              u1960 0C28                                u1929 0E74  
                              u1881 0720                                u1961 0C24  
                              u1858 1006                                u1890 0746  
                              u1891 0742                                u1947 0BE6  
                              _PEIE 007F96                                u1957 0C0E  
                              u1975 0C3C                                _RCIE 007CED  
                              u1988 0D8A                                _RCIF 007CF5  
                              u1989 0DA0                                u1998 0DB0  
                              u1999 0DC4                                _SPEN 007D5F  
               _zEngineMotionOutput 004E                                _TXIF 007CF4  
                              _TXEN 007D65                                _SYNC 007D64  
               ??_DigitalInput_init 00C4              __end_of_USARTWriteLine 0F8A  
                              _cp_h 0679                                _cp_l 0675  
                              _dp_h 0609                                _dp_l 0601  
                              _main 0F8A                                _huge 0661  
                              fsr0h 000FEA                                _tiny 065D  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 005C  
    __size_of_DigitalInput_getValue 000C       __end_of_DigitalInput_getValue 10CA  
                              start 000E                       __CFG_IESO$OFF 000000  
         DigitalOutput_close@output 00BD                        _yellowLedSet 000000  
            __end_of_yEngineDirInit 10DA            __end_ofi2_USARTWriteLine 105E  
                      ___param_bank 000000                               ??_ISR 0010  
                     _softusart_yaz 0DCE                        ?_button1Init 0001  
                      ?_button1Read 00BD           __end_of_DigitalInput_init 0DCE  
                   __end_of___aldiv 07C2                               ?_main 0001  
                     ??_Button_init 00C1                               _CARRY 007EC0  
                             i2l122 0886                               i2l240 0F3C  
                             i2l410 1028                               i2l422 1076  
                             i2l431 0B06                               i2l352 0EBA  
                             i2l442 0D16                               i2l356 0E06  
                             i2l348 0E8A                               i2l357 0E10  
                             i2l446 0D7A                               i2l449 105C  
                             i2l573 10BC                               _RCREG 000FAE  
                             _SPBRG 000FAF            _USARTWriteLine$intlevel0 0F6E  
                 _xEngineMotionInit 10E2                               _TXREG 000FAD  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                         i2_redLedSet 000000  
                    __CFG_EBTR3$OFF 000000                    USARTWriteLine@ln 00BF  
                ?_xEngineMotionInit 0001                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                             _lg2_h 0629                               _lg2_l 0625  
                    __CFG_EBTRB$OFF 000000                               _errno 0030  
                             _ivln2 0619                     __end_of_ivln2_h 0675  
                   __end_of_ivln2_l 0619                               _two24 0665  
                  ?_USARTReadString 0004                         ?i2_Led_open 0003  
                             _usart 00A1                               pclath 000FFA  
                             tablat 000FF5                    _enableInterrupts 10CA  
                __size_of_USARTInit 003E                 ??_xEngineMotionInit 00BD  
                             plusw1 000FE3                               plusw2 000FDB  
                   ?_USARTWriteLine 00BF                               ttemp5 005D  
                             ttemp6 0060                               ttemp7 0064  
                             status 000FD8                               wtemp8 005D  
                     _yellowLedInit 10EA             softUSARTWriteString@str 0003  
                   ?_yEngineDirInit 0001         ??_ButtonConfigurator_config 00C8  
                    __CFG_MCLRE$OFF 000000                     __initialization 0F3E  
                  __end_of_Led_init 1044                    __end_of_Led_open 0EE8  
                      __end_of_cp_h 067D                        __end_of_cp_l 0679  
                      __end_of_dp_h 0611                        __end_of_dp_l 0609  
                      __end_of_main 0FAC                        __end_of_huge 0665  
        i2DigitalOutput_open@output 0001                        __end_of_tiny 0661  
                    _zEngineDirInit 10D2                      ?_softusart_yaz 0001  
                      i2_blueLedSet 000000                    ??_setupFunctions 00BF  
                   ??_USARTReadChar 0004           __end_of_xEngineMotionInit 10E6  
                            ??_main 00E1                       __activetblptr 000002  
              __size_of_blueLedInit 0004                _softUSARTWriteString 0E86  
     __size_ofi2_DigitalOutput_open 0016                              ISR@tmp 001C  
                __size_of_Led_close 002C            __end_of_Application_init 0986  
               __end_of_Button_init 0FCE            __end_of_Application_loop 0BB4  
                 _yEngineMotionInit 10DE               fp_i2_USARTWriteString 0000  
                            i2l2401 0D46                              i2l2403 0D4A  
                            i2l2405 10A8                              i2l2441 0E86  
                            i2l2259 100E                              i2l2363 0DD0  
                            i2l2443 0E98                              i2l2515 0F14  
                            i2l2461 0A68                              i2l2381 0E08  
                            i2l2373 0DDE                              i2l2365 0DD2  
                            i2l2445 0E9E                              i2l2517 0F28  
                            i2l2383 105E                              i2l2463 0A78  
                            i2l2471 0AB4                              i2l2375 0DE4  
                            i2l2367 0DDA                              i2l2447 0EA2  
                            i2l2519 1044                              i2l2385 105E  
                            i2l2465 0A8A                              i2l2473 0AEA  
                            i2l2457 0A4E                              i2l2377 0DEE  
                            i2l2387 1074                              i2l2467 0AA0  
                            i2l2459 0A62                              i2l2379 0DF6  
                            i2l2469 0AB0                              i2l2397 0D12  
                            i2l2399 0D24                              i2l2981 086E  
                            i2l2973 07F4                              i2l2983 087A  
                            i2l2975 0808                              i2l2977 081A  
                            i2l2979 0848                              _OSCCON 000FD3  
                ?_yEngineMotionInit 0001                              _TRISB0 007C98  
                            _TRISB1 007C99                              _TRISC0 007CA0  
                            _TRISB2 007C9A                              _TRISC1 007CA1  
                            _TRISD0 007CA8                              _TRISC2 007CA2  
                            _TRISD1 007CA9                              _TRISC3 007CA3  
                            _TRISD2 007CAA                              _TRISC6 007CA6  
                            _TRISD5 007CAD                              _TRISC7 007CA7  
                            _TRISD6 007CAE                      ?_yellowLedInit 0001  
               fp__USARTWriteString 0000                      __CFG_XINST$OFF 000000  
            __end_of_zEngineDirInit 10D6                 ??_yEngineMotionInit 00BD  
                         ??___aldiv 00C5                      __CFG_STVREN$ON 000000  
                            _redLed 00B5            __end_of_USARTWriteString 0C2A  
                            _button 009D                              clear_0 0F44  
                            clear_1 0F50                 __size_ofi2_Led_open 002A  
        __size_of_DigitalInput_init 0052                   __end_of_USARTInit 0E50  
      __size_of_DigitalOutput_close 0018               ?_softUSARTWriteString 0003  
                _DigitalOutput_init 0E50           _ButtonConfigurator_config 0FCE  
                _DigitalOutput_open 1078                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8           __end_of_yEngineMotionInit 10E2  
               ?_DigitalOutput_init 00BD                 ?_DigitalOutput_open 00BD  
                  ??_xEngineDirInit 00BD                          __accesstop 0080  
           __end_of__initialization 0F56             ?_LedConfigurator_config 0001  
                   __CFG_PBADEN$OFF 000000                    ??_USARTDataReady 0003  
                     ___rparam_used 000001                   _zEngineMotionInit 10F2  
                   ?_zEngineDirInit 0001                     ??_softusart_yaz 0001  
                ?_zEngineMotionInit 0001                 Application_init@app 00DF  
                    __pcstackCOMRAM 0001                   __end_of_Led_close 0F14  
                     __end_of_lg2_h 062D                       __end_of_lg2_l 0629  
                    i2_yellowLedSet 000000                ??_DigitalOutput_init 00C1  
              ??_DigitalOutput_open 00BF                       __end_of_ivln2 061D  
               Application_loop@app 00C1                       __end_of_two24 0669  
                        __end_of_L1 065D                          __end_of_L2 0659  
                        __end_of_L3 0655                          __end_of_L4 0651  
                        __end_of_L5 064D                          __end_of_L6 0649  
                        __end_of_P1 0645                          __end_of_P2 0641  
                        __end_of_P3 063D                          __end_of_P4 0639  
                        __end_of_P5 0635                 ??_zEngineMotionInit 00BD  
                        __end_of_bp 0671                          __end_of_cp 0621  
              Button_init@onPressed 00BF          __size_of_xEngineMotionInit 0004  
                       _Button_init 0FAC                __size_of_button1Init 0004  
              __size_of_button1Read 0020                    ??_calculateSpbrg 00CF  
                         ?_Led_init 00BD                           ?_Led_open 00BF  
                        __pbssBANK0 0080      __end_of_LedConfigurator_config 0D12  
                   ??_yellowLedInit 00BD           __end_of_zEngineMotionInit 10F6  
          DigitalOutput_init@output 00C1          DigitalInput_getValue@input 00BD  
                i2_USARTWriteString 0D12                   ?i2_USARTWriteLine 0003  
                        _blueLedSet 000000                  ??i2_USARTWriteLine 0005  
                USARTReadString@buf 0004                  USARTReadString@tmp 000F  
               ?i2_USARTWriteString 0001            __end_of_enableInterrupts 10D2  
            ??_softUSARTWriteString 0005                     i2_xEngineDirSet 000000  
        __size_of_yEngineMotionInit 0004                    ??_USARTWriteLine 00C1  
                USARTWriteInt@F2579 0094                          ??_Led_init 00C1  
                      ??i2_Led_open 0005                          ??_Led_open 00C1  
              ??i2_USARTWriteString 0003                 _xEngineMotionOutput 0056  
                    USARTInit@usart 00D7                    ??_yEngineDirInit 00BD  
                           __Hparam 0000                          _redLedInit 10EE  
                           __Lparam 0000               _DigitalInput_getValue 10BE  
                           ___aldiv 06B4            DigitalOutput_open@output 00BD  
                      __psmallconst 0600                             __pcinit 0F3E  
                           __ramtop 0600                             _blueLed 0032  
                __end_ofi2_Led_open 0F3E                             __ptext0 0F8A  
                           __ptext1 0B08                             __ptext2 0F64  
                           __ptext3 0BB4                             __ptext4 0EBC  
                           __ptext5 1078                             __ptext6 0EE8  
                           __ptext7 1090                             __ptext8 10BE  
                           __ptext9 08BA                        __size_of_ISR 08B2  
                           _ivln2_h 0671                             _ivln2_l 0615  
                  ___aldiv@dividend 00BD                             main@app 00E1  
                 ?_Application_init 00DD                   ?_Application_loop 00C1  
                    __pintcode_body 07C2                end_of_initialization 0F56  
                ??_Application_init 00DF                  ??_Application_loop 00C3  
__size_of_ButtonConfigurator_config 0020                  i2USARTWriteLine@ln 0003  
        __size_of_zEngineMotionInit 0004                       __Lmediumconst 0000  
                           int_func 07C2                 _DigitalOutput_close 1090  
      __end_ofi2_DigitalOutput_open 10BE            __size_of_USARTReadString 00BA  
                fp__USARTReadString 0000                    ___aldiv@quotient 00C7  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE                       ??_blueLedInit 00BD  
                 ?_USARTWriteString 00BD                    _xEngineDirOutput 004A  
                         _PORTDbits 000F83                ?_DigitalOutput_close 00BD  
             __end_of_USARTReadChar 1078                  ??_USARTWriteString 00BF  
                         _USARTInit 0E12                     _yellowLedOutput 003A  
               setupFunctions@usart 00BD                    ??_zEngineDirInit 00BD  
              fp__xEngineMotionInit 0000              ?_DigitalInput_getValue 00BD  
                       ?_redLedInit 0001                   button1Read@button 00BD  
                  _xEngineMotionSet 000000                           _Led_close 0EE8  
             ??_DigitalOutput_close 00BF                        ?_Button_init 00BD  
               start_initialization 0F3E                          ?_USARTInit 00D7  
               __end_of_blueLedInit 10EA                         __end_of_ISR 08BA  
                       __end_of_lg2 0631                    _zEngineDirOutput 0042  
                       __end_of_ovt 0625             __size_of_setupFunctions 00C8  
         USARTReadString@max_length 0006              DigitalOutput_init@init 00BD  
                 __size_of_Led_init 001A                    USARTReadString@i 000D  
                 __size_of_Led_open 002C                    __CFG_OSC$INTIO67 000000  
                      _redLedOutput 003E                       i2Led_open@led 0003  
              fp__yEngineMotionInit 0000               __end_of_softusart_yaz 0E12  
       __size_of_DigitalOutput_init 0036                       ??_button1Init 00BD  
                     ??_button1Read 00BF                    __CFG_LPT1OSC$OFF 000000  
       __size_of_DigitalOutput_open 0018                   ??_USARTReadString 0008  
                        ?_Led_close 00BF                   ?_enableInterrupts 0001  
                ??_enableInterrupts 00BD                i2_DigitalOutput_open 10A8  
                       __pbssCOMRAM 0030                        _button1Input 005A  
         __size_ofi2_USARTWriteLine 001A                       __pcstackBANK0 00BD  
               __size_of_redLedInit 0004                   __end_ofsqrtf@tiny 0615  
                          ISR@F3567 0080                    Button_init@buton 00C1  
                  Button_init@input 00BD               __end_of_yellowLedInit 10EE  
                 __CFG_CCP2MX$PORTC 000000                           __pintcode 0008  
                          ?___aldiv 00BD             __size_of_xEngineDirInit 0004  
                 fp__xEngineDirInit 0000             __size_of_USARTDataReady 001C  
                 fp__USARTDataReady 0000                         _blueLedInit 10E6  
              fp__zEngineMotionInit 0000                           fabsf@F463 0099  
                       __smallconst 0600               ?i2_DigitalOutput_open 0001  
     __size_of_softUSARTWriteString 0036                 __end_of_button1Init 10FA  
               __end_of_button1Read 100E                         ??_USARTInit 00DD  
                         _redLedSet 000000         __size_ofi2_USARTWriteString 006A  
               _yEngineMotionOutput 0052                     ___aldiv@divisor 00C1  
           __size_of_calculateSpbrg 0074                     ___aldiv@counter 00C5  
                          _LATBbits 000F8A                            _LATCbits 000F8B  
                          _LATDbits 000F8C                            i2u112_40 1020  
                          i2u112_41 1018                            i2u120_45 0DEC  
                          i2u120_47 0DEE                            i2u112_48 1022  
                          i2u121_40 0E06                            i2u121_41 0E02  
                          i2u122_40 1074                            i2u122_41 1070  
                          i2u131_40 0E98                            i2u131_41 0E94  
                          i2u132_40 0EBA                            i2u124_40 0D24  
                          i2u204_40 0808                            i2u132_41 0EB6  
                          i2u124_41 0D20                            i2u204_41 0804  
                          i2u125_40 0D44                            i2u205_41 0812  
                          i2u125_47 0D3A                            i2u134_40 0A78  
                          i2u126_40 0D6A                            i2u134_41 0A74  
                          i2u126_47 0D60                            i2u135_40 0A8A  
                          i2u127_40 0D7A                            i2u206_48 0834  
                          i2u135_41 0A86                            i2u127_41 0D76  
                          i2u206_49 0848                            i2u136_40 0A9C  
                          i2u207_48 085A                            i2u136_41 0A98  
                          i2u207_49 086E                            i2u232_47 0DD4  
                          i2u137_40 0AEA                            i2u137_41 0AE6  
                          i2u233_47 0DF0                            i2u234_47 0E0A  
                          _PIR1bits 000F9E                       _blueLedOutput 00B9  
                  __CFG_WDTPS$16384 000000           __size_of_Application_init 00CC  
         __size_of_Application_loop 00AC               i2USARTWriteString@str 0001  
                       ??_Led_close 00C1                           _yellowLed 0036  
          ??_LedConfigurator_config 00C5                __size_of_Button_init 0022  
                    _setupFunctions 0986                            _Led_init 102A  
                          _Led_open 0EBC           __size_of_USARTWriteString 0076  
           ??_DigitalInput_getValue 00BF               DigitalOutput_init@set 00BF  
                 softusart_yaz@veri 0001                        ??_redLedInit 00BD  
           __size_of_USARTWriteLine 0026                   fp__USARTWriteLine 0000  
                          __Hrparam 0000                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000             __size_of_yEngineDirInit 0004  
                 fp__yEngineDirInit 0000                    __size_of___aldiv 010E  
                       _button1Init 10F6                         _button1Read 0FEE  
            ??i2_DigitalOutput_open 0003              __end_of_setupFunctions 0A4E  
                  i2_USARTWriteLine 1044                      Led_init@output 00BD  
                          __ptext10 0E12                            __ptext11 0986  
                          __ptext20 10DA                            __ptext12 10CA  
                          __ptext21 10DE                            __ptext13 0C2A  
                          __ptext30 0FEE                            __ptext22 10E2  
                          __ptext14 06B4                            __ptext31 10F6  
                          __ptext23 10E6                            __ptext15 102A  
                          __ptext40 105E                            __ptext24 10EA  
                          __ptext16 0C9E                            __ptext41 100E  
                          __ptext33 1044                            __ptext25 10EE  
                          __ptext17 0E50                            __ptext42 0000  
                          __ptext34 0D12                            __ptext26 10F2  
                          __ptext18 10D2                            __ptext35 0F14  
                          __ptext27 0FAC                            __ptext19 10D6  
                          __ptext36 10A8                            __ptext28 0FCE  
                          __ptext37 0E86                            __ptext29 0D7C  
                          __ptext38 0DCE                  __end_of_redLedInit 10F2  
                          __ptext39 0A4E                      softusart_yaz@i 0002  
                     __size_of_main 0022                     _USARTReadString 0A4E  
            __size_of_USARTReadChar 001A                    fp__USARTReadChar 0000  
        ?_ButtonConfigurator_config 0001         __end_of_DigitalOutput_close 10A8  
                    _xEngineDirInit 10DA                            int$flags 005C  
               calculateSpbrg@bolum 00D3                      _USARTDataReady 100E  
                   ?_setupFunctions 00BD                  i2_xEngineMotionSet 000000  
   __size_of_LedConfigurator_config 0074                      fp__blueLedInit 0000  
                          intlevel2 0000                      _calculateSpbrg 0C2A  
                         sqrtf@tiny 0611           __size_of_enableInterrupts 0008  
            __end_of_xEngineDirInit 10DE              DigitalInput_init@input 00C6  
 __end_of_ButtonConfigurator_config 0FEE              __end_of_USARTDataReady 102A  
                     _xEngineDirSet 000000          __end_of_DigitalOutput_init 0E86  
        __end_of_DigitalOutput_open 1090                    _Application_init 08BA  
                      Led_close@led 00BF                    _Application_loop 0B08  
               USARTWriteString@str 00BD             __size_of_zEngineDirInit 0004  
                 fp__zEngineDirInit 0000                        ?_blueLedInit 0001  
        _USARTWriteString$intlevel0 0BBE                       _USARTReadChar 105E  
                     _USARTReadByte 000000               DigitalInput_init@init 00C0  
             DigitalInput_init@read 00C2                        ___aldiv@sign 00C6  
           __end_of_USARTReadString 0B08              __end_of_calculateSpbrg 0C9E  
                        i2_Led_open 0F14                         Led_init@led 00C1  
                  _USARTWriteString 0BB4              __size_of_softusart_yaz 0044  
            calculateSpbrg@baudRate 00CB                     _USARTWriteFloat 000000  
                       Led_open@led 00BF        __end_of_softUSARTWriteString 0EBC  
                    _USARTWriteByte 000000                      _USARTWriteLine 0F64  
                    _USARTWriteLong 000000                     ?_xEngineDirInit 0001  
                     _USARTWriteInt 000000              _LedConfigurator_config 0C9E  
